%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.02.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 8.5.0.197613 \\(R2015a\\). Operating System: Mac OS X)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 560 420
%%HiResBoundingBox: 0 0 560 420
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font EHIZJU+Helvetica
%!FontType1-1.0: EHIZJU+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 1999 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /EHIZJU+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 535 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 97 /a put
dup 116 /t put
dup 124 /bar put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF35F8A39193D6AFA1154DD6CFCB449610B21CB4CFFB833C2
18528CD67B4B020215A159DAA1CD4DE9F6ED0EB9FDB22E7590446FDACF906E59
F676922B4D76BDC00E1B46AAA48EF0678F4576E301D769D3EC0FF37240B82C32
106A1BDE1DDCEB19A43920B3C139BFD6B10F4A3B3382CBC4BAF31FC5C575380D
E5A6CED7DC8466DDE555BACE4F2B05227DC9AE7A5FA91F0A15A1D89FE9183D52
FC708D0261A1D04C99FA23C7DD1678367A5926498A99B6355D26E6F2109B8A38
A11C045B7B5DCCCF71D4EE8878B14E481B9358C6436FFD03F6D94989097D3772
FBBA5782F93BB358738B0CB75B8FE3C7AEF330CFA2C57258844EB913CC05D5C8
FE0F4053E627D593D12B7AE0447A39AD38174FCCF17C19892C53B53FF7E97D0B
0A94716C6626EA53F8667A6A8913426C37C766ECD3C714AE28F81FBBB6BD26B7
526FB199963A2682C923DF7D260361713DF89E00DDC9CCA8D9AB35C25063ACD0
27F8A1E9EA86B17E7FEFC353E682183F93F9FABAE6916C9B17A6CAE7F6F6A666
D6FEBC6D7F274B5D894FAF7057462BB34F1AC445540ADB3BD16627F2C81C7C30
BA04E18E1EEE9BB1B78757ED8950DE688AE78773101F0A30CB39EC8CB228DC63
67B97ADB9D9D41538EA35672C92CC5324AB9761D4868AF48A9A1040CC1757358
946DE08058A5569A296FBD2AF29D578C76F5C941830B38EF7DCDBB003EBA6D4B
610C3D3E2BE8D09F52A6BDCD6A62A63BB9F8278D5E0D6C6E6C944F88DB49D43F
7D660937011F95BA2EE024EE17728081C40BE46A3BBF622B5597C4B09D6F54F4
7731015C190F991DA117CD954D0D7476A87F0C8387B969C739E92679328BF9DD
43FF21A971F82C2ECB1D33747E82C2ADE9F5D8ACF917C85D59CB91401B5C7BDF
6E1405FF944B89435F878EBDAF1EF7BF8DDA4E6FF547571C0963A045BDACE520
3C223A29DA634CCC4DB3B944D36588D4528F339FF8901CBEC0F75C68C19B66A4
5A9A623BD528A0E10EE7494954BC006677382CCD4C3DF5D188CF6C982364A1DE
6F8EF6B856DF1C501FE17F09A002D26E5A4FAF327CF4E0EFD5123F9E970E7334
76A3B18F79BCF9969E11553F36B7AA70C33D25472E0CC9D0A1694CCB8F9332D9
7284271D83DDE3190D6EA700798D6193B4A3EDD918B62789A13BFC6DEE80960A
60C62811561823F451F4854049A45ACB9099278A4710376B6B93482D057F280E
4CE7CCF045B3383FA7A8C87F5CD273D8B096000F8F140E2AE936BF385A9F1304
2CBC86C1615176491B864477B170BADE50324552BF7DCEF409C477BC05A59C41
5C0462A926DDF62E073618643D7DB825D7236361501866D463422BAC7344A2F3
85A8028A752658C1D712BFA147FD51E93BA4CDF3D5DC1F6A97C5F8B7F77ABB03
4E5851B7538BCDCF4FA656391C4A8FBC7DA1E135FB847CA57BC158A6EBDB52D9
4209472B79EC035D929AE64485853EF77F840D4A1950F095F51C8B710D644C34
FD355300526D75FF2CC1F25A5EAF4BA45037CCD681FD03D4880BBF3F01270A31
6EE59F88A0EC07F6AFEE3116F2DDA8418AD29E6B4225878228F6E0DE3789458B
6A5045CB1F4AB5043084099D70862BACE15AA921D750535C6CAA78C107BF8E8F
460F9F1FA0F6A5560D24E1531F7ED89F67BB1ECF04D33D3F3B9D736D7314E199
3130A2C974BE35B98343DADF1DA7D3A86D6802A3CC34915D1971CD1654011951
31C8074D5FDB1E01276AC06FA38E400F9B42D6780A39905B9B89BCA77B9148A3
AFC11489236848A559B87712C5D7C724115AE5119F5204E0D0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /EHIZJU+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 560 420 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 5600 4200 re
f
0 0 5600 4200 re
f
730 470 4340 3420 re
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 287 5.4] Tm
0 0 Td
/F8_0 20 Tf
(t)
[5.56
0] Tj
Q
10 w
2 J
/DeviceGray {} CS
[0.1489] SC
730 470 m
5070 470 l
S
730 3890 m
5070 3890 l
S
730 470 m
730 513.398 l
S
1598 470 m
1598 513.398 l
S
2466 470 m
2466 513.398 l
S
3334 470 m
3334 513.398 l
S
4202 470 m
4202 513.398 l
S
5070 470 m
5070 513.398 l
S
730 3890 m
730 3846.6 l
S
1598 3890 m
1598 3846.6 l
S
2466 3890 m
2466 3846.6 l
S
3334 3890 m
3334 3846.6 l
S
4202 3890 m
4202 3846.6 l
S
5070 3890 m
5070 3846.6 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 67.5 27.4] Tm
0 0 Td
/F8_0 18 Tf
(0)
[10.008
0] Tj
-4266.22 TJm
(2)
[10.008
0] Tj
-4266.22 TJm
(4)
[10.008
0] Tj
-4266.22 TJm
(6)
[10.008
0] Tj
-4266.22 TJm
(8)
[10.008
0] Tj
-3988.44 TJm
(10)
[10.008
0
10.008
0] Tj
[0 1 -1 0 33 203] Tm
0 0 Td
/F8_0 19 Tf
(|a|)
[4.94
0
10.564
0
4.94
0] Tj
21 9 Td
/F8_0 15 Tf
(2)
[8.34
0] Tj
Q
730 470 m
730 3890 l
S
5070 470 m
5070 3890 l
S
730 470 m
773.398 470 l
S
730 1040 m
773.398 1040 l
S
730 1610 m
773.398 1610 l
S
730 2180 m
773.398 2180 l
S
730 2750 m
773.398 2750 l
S
730 3320 m
773.398 3320 l
S
730 3890 m
773.398 3890 l
S
5070 470 m
5026.6 470 l
S
5070 1040 m
5026.6 1040 l
S
5070 1610 m
5026.6 1610 l
S
5070 2180 m
5026.6 2180 l
S
5070 2750 m
5026.6 2750 l
S
5070 3320 m
5026.6 3320 l
S
5070 3890 m
5026.6 3890 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 56.4 42.5] Tm
0 0 Td
/F8_0 18 Tf
(0)
[10.008
0] Tj
-15 57 Td
(0.2)
[10.008
0
5.004
0
10.008
0] Tj
-15 114 Td
(0.4)
[10.008
0
5.004
0
10.008
0] Tj
-15 171 Td
(0.6)
[10.008
0
5.004
0
10.008
0] Tj
-15 228 Td
(0.8)
[10.008
0
5.004
0
10.008
0] Tj
0 285 Td
(1)
[10.008
0] Tj
-15 342 Td
(1.2)
[10.008
0
5.004
0
10.008
0] Tj
Q
/DeviceGray {} CS
[0] SC
730 470 m
816.801 470.121 l
903.602 470 l
990.398 470.129 l
1077.2 470.289 l
1164 470.941 l
1250.8 472.059 l
1337.6 473.832 l
1424.4 474.961 l
1511.2 479.281 l
1598 481.352 l
1684.8 487.379 l
1771.6 492.16 l
1858.4 503.301 l
1945.2 519.148 l
2032 542.762 l
2118.8 574.57 l
2205.6 626.672 l
2292.4 701.5 l
2379.2 807.57 l
2466 950.922 l
2552.8 1134.08 l
2639.6 1370.32 l
2726.4 1656.66 l
2813.2 1964.51 l
2900 2248.56 l
2986.8 2515.89 l
3073.6 2737 l
3160.4 2874.24 l
3247.2 3038.67 l
3334 3157.36 l
3420.8 3224.79 l
3507.6 3262.98 l
3594.4 3252.75 l
3681.2 3299.51 l
3768 3313.91 l
3854.8 3322.58 l
3941.6 3344.95 l
4028.4 3354.96 l
4115.2 3294.78 l
4202 3311.81 l
4288.8 3294.44 l
4375.6 3279.21 l
4462.4 3252.31 l
4549.2 3263.67 l
4636 3277.58 l
4722.8 3322.52 l
4809.6 3332.41 l
4896.4 3379.76 l
4983.2 3387.52 l
S
4983.2 3387.52 m
5070 3386.58 l
S
730 470 m
816.801 470.121 l
903.602 470 l
990.398 470.129 l
1077.2 470.289 l
1164 470.941 l
1250.8 472.059 l
1337.6 473.832 l
1424.4 474.961 l
1511.2 479.281 l
1598 481.352 l
1684.8 487.379 l
1771.6 492.16 l
1858.4 503.301 l
1945.2 519.148 l
2032 542.762 l
2118.8 574.57 l
2205.6 626.672 l
2292.4 701.5 l
2379.2 807.57 l
2466 950.922 l
2552.8 1134.08 l
2639.6 1370.32 l
2726.4 1656.66 l
2813.2 1964.51 l
2900 2248.56 l
2986.8 2515.89 l
3073.6 2737 l
3160.4 2874.24 l
3247.2 3038.67 l
3334 3157.36 l
3420.8 3224.79 l
3507.6 3262.98 l
3594.4 3252.75 l
3681.2 3299.51 l
3768 3313.91 l
3854.8 3322.58 l
3941.6 3344.95 l
4028.4 3354.96 l
4115.2 3294.78 l
4202 3311.81 l
4288.8 3294.44 l
4375.6 3279.21 l
4462.4 3252.31 l
4549.2 3263.67 l
4636 3277.58 l
4722.8 3322.52 l
4809.6 3332.41 l
4896.4 3379.76 l
4983.2 3387.52 l
S
4983.2 3387.52 m
5070 3386.58 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font EHIZJU+Helvetica
%%EOF
