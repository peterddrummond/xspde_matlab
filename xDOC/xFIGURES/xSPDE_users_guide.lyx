#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
\usepackage{babel}
\usepackage{cite}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 1
\output_sync_macro "\synctex=-1"
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 0
\use_package cancel 0
\use_package esint 2
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
The Stochastic Toolbox User's Guide - xSPDE3: extensible software for stochastic
 ordinary and partial differential equations
\begin_inset Newline newline
\end_inset

 v3.44
\end_layout

\begin_layout Author
Peter D.
 Drummond
\end_layout

\begin_layout Address

\series bold
Centre for Quantum Science and Technology Theory, Swinburne University of
 Technology, Melbourne, Victoria, Australia.
\series default

\begin_inset Newline newline
\end_inset

 
\series bold
School of Information Technology, Deakin University, Melbourne, Victoria,
 Australia.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset

 
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset

 
\begin_inset VSpace 10pt
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
\noindent
\begin_inset CommandInset label
LatexCommand label
name "sec:Overview-of-xSPDE"

\end_inset


\end_layout

\begin_layout Section
The xSPDE distribution
\end_layout

\begin_layout Standard

\series bold
\emph on
xSPDE is an eXtensible Stochastic Partial Differential Equation solver
\series default
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "kiesewetter2016xspde"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
The xSPDE toolbox treats stochastic partial and ordinary differential equations,
 with applications in biology, chemistry, engineering, medicine, physics
 and quantum technologies.
 It computes statistical averages, including time-step and/or sampling error
 estimation.
 xSPDE can provide higher order convergence, Fourier spectra and probability
 densities.
 The toolbox has graphical output and 
\begin_inset Formula $\chi^{2}$
\end_inset

 statistics, as well as weighted, projected, or forward-backward equations.
 It can generate input-output quantum spectra.
 All equations may have independent periodic, Dirichlet, and Neumann or
 Robin boundary conditions in any dimension, for any vector field component,
 and at either end of any interval.
\end_layout

\begin_layout Standard
xSPDE has functions that can numerically solve both ordinary and partial
 differential stochastic equations of any type, obtaining correlations,
 probabilities and averages.
 There are many equations of this type 
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner2009Stochastic,Drummond2014Quantum,Langevin1908theorie,Karatzas1991brownian,Glasserman2010monte"
literal "false"

\end_inset

 in physics, chemistry, engineering, biology, medicine, and finance.
\end_layout

\begin_layout Standard
Previous applications are in physics and quantum technology 
\begin_inset CommandInset citation
LatexCommand cite
key "Opanchuk2013Quantum,Ng2019Phase,ramesh2022arcsine,peters2022limit,teh2017simulation,teh2018quantum,kiesewetter2022phase,teh2018creation,dechoum2016critical,drummond2017truncated,opanchuk2017one,drummond2017higher,ng2021fate,joseph2021hybrid,drummond2021time,drummond2020initial,ng2019nonlocal,busink2021stochastic,peters2021extremely,peters2022exceptional"
literal "false"

\end_inset

, but the code has general applicability.
 The emphasis in xSPDE is on combining a simple user interface with a wide
 range of useful functions, including the essential features of averaging
 and global error estimates.
 The code enables an efficient use memory and parallelism, which is vital
 for large stochastic models, and it is able to be further extended if needed.
\end_layout

\begin_layout Standard
The extensible structure of the code-base permits drop-in replacements of
 the algorithms.
 Different simulations can be carried out sequentially.
 This models different stages in an experiment or simulated environment.
 It can be used with or without noise terms, and can use a range of either
 built-in or user defined integration algorithms.
 This user guide describes xSPDE3, which is an improved version of an earlier
 toolbox 
\begin_inset CommandInset citation
LatexCommand cite
key "kiesewetter2016xspde"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
xSPDE calculates and plots averages and probabilities of arbitrary functions
 of any number of complex or real fields, as well as Fourier transforms
 in time or space with any given dimensionality.
 Importantly, it gives error estimates for both the discretization and sampling
 error, but the algorithm, the step-size and the number of samples used
 is up to the user to control to obtain the required error levels.
\end_layout

\begin_layout Standard
Ordinary and stochastic differential equations of many types can be treated
 numerically 
\begin_inset CommandInset citation
LatexCommand cite
key "Drummond1991Computer,Kloeden1992numerical"
literal "false"

\end_inset

, including stochastic partial differential equations with space dependence
 
\begin_inset CommandInset citation
LatexCommand cite
key "Werner1997Robust"
literal "false"

\end_inset

.
 Comparative 
\begin_inset Formula $\chi^{2}$
\end_inset

 statistical tests are available.
 Additional libraries exist for projected, forward-backward, and weighted
 equations.
\end_layout

\begin_layout Standard
The algorithms included are designed to be useful and fast in many practical
 applications.
 Higher order convergence is obtained through order extrapolation.
 This allows higher-order convergence to be realized in a uniform way.
 More complex higher-order algorithms are known 
\begin_inset CommandInset citation
LatexCommand cite
key "Kloeden1992numerical,burrage2006comment"
literal "false"

\end_inset

, which can be included if preferred, as the code is extensible.
\end_layout

\begin_layout Standard
The code can be used interactively or in batch mode.
 All graphs, data, and input parameters, including default values, can be
 stored permanently using standard file-types.
 It has a fully integrated graphics program, xGRAPH.
 This is able to handle data of any dimensions, with multiple types of graphical
 output, error-bars and comparisons.
\end_layout

\begin_layout Standard
xSPDE supports parallelism at both vector instruction and multiple core
 level using array and parallel loop syntax.
 This version is Octave/Matlab based.
 Matlab is a commercial product, GNU Octave 
\begin_inset CommandInset citation
LatexCommand cite
key "eaton2012gnu"
literal "false"

\end_inset

 is free and open-source.
 They each have excellent user interfaces and reliable implementations.
 Full parallel operation currently requires the Matlab parallel toolbox.
\end_layout

\begin_layout Standard
Using the toolbox can be compared to dining in a very friendly restaurant.
 It allows you to choose recipes from a large menu.
 It does the work of solving equations and doing averages.
 Estimating errors and graphing results is carried out as well.
 But it has a communal kitchen too.
 If you want more choice, you can add your own dishes.
\end_layout

\begin_layout Standard
See:
\emph on
 
\series bold
\emph default
www.github.com/peterddrummond/xspde_matlab.

\series default
 For those familiar with earlier versions, a list of the main xSPDE changes
 since the documentation of the previously published version (v1.04) 
\begin_inset CommandInset citation
LatexCommand cite
key "kiesewetter2016xspde"
literal "false"

\end_inset

 is as follows: 
\end_layout

\begin_layout Enumerate
More graphics options, color-mapped contours, batch graph storage 
\end_layout

\begin_layout Enumerate
Computational arrays with the ensemble index last for more speed.
 
\end_layout

\begin_layout Enumerate
Scatter plots with multiple lines for individual trajectories 
\end_layout

\begin_layout Enumerate
Expansion of packed internal arrays combined with index broadcasting 
\end_layout

\begin_layout Enumerate
Extended documentation with new examples, key-words and error-messages 
\end_layout

\begin_layout Enumerate
Auxiliary fields for storing random noises and quantum input-output spectra
 
\end_layout

\begin_layout Enumerate
Methods for weighted and projected stochastic differential equations 
\end_layout

\begin_layout Enumerate
Computational methods for forward-backward stochastic equations 
\end_layout

\begin_layout Enumerate
Finite-difference solutions to SPDEs with nonlinear boundaries 
\end_layout

\begin_layout Enumerate
Fast DST and DCT spectral methods for SPDEs with non-periodic boundaries
 
\end_layout

\begin_layout Enumerate
Multidimensional comparison functions and experimental data input 
\end_layout

\begin_layout Enumerate
Chi-squared tests and probability densities of arbitrary functions 
\end_layout

\begin_layout Standard
There are some internal keyword changes.
 Older keywords are deprecated, although they are still compatible in this
 release.
 The removal of packed arrays means that some high-dimensional equations
 in earlier inputs will require changes to unpacked arrays.
 For example, 
\emph on
a(i,:)
\emph default
 may have to be replaced by correctly dimensioned, unpacked arrays like
 
\emph on
a(i,:,:,..), 
\emph default
although the internal xSPDE code unpacks these if possible.
\end_layout

\begin_layout Standard

\emph on
xSPDE is distributed with no guarantee, under an open-source license.
 Contributions and bug reports are welcome.
 
\emph default
An alternative approach to SPDEs 
\begin_inset CommandInset citation
LatexCommand cite
key "Collecutt2001xmds,Dennis2013XMDS2"
literal "false"

\end_inset

 is available in C++ at http://www.xmds.org/.
\end_layout

\begin_layout Section
Structure of the user's guide
\end_layout

\begin_layout Standard
Chapters 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:SDE Theory"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:SPDE Theory"
plural "false"
caps "false"
noprefix "false"

\end_inset

 give background information.
 Readers who are simply interested in how to use the code can go directly
 to section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:SDE Theory"
plural "false"
caps "false"
noprefix "false"

\end_inset

 has definitions and notations for stochastic differential equations (SDEs).
 This is useful for understanding later sections.
 The section includes Ito and Stratonovich calculus, probability distributions
 and Fokker-Planck equations.
 It also explains and defines the Fourier input-output spectra used in quantum
 technology.
\end_layout

\begin_layout Standard
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:SPDE Theory"
plural "false"
caps "false"
noprefix "false"

\end_inset

 gives the concepts of stochastic partial differential equations (SPDEs).
 It includes details of spectral methods and the interaction picture approach.
 It has an explanation of how Fourier transforms and discrete sine or cosine
 transforms are implemented.
 It also explains how boundary conditions can be implemented using finite
 differences.
\end_layout

\begin_layout Standard
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

 describes the numerical solution of SDEs with xSPDE.
 This includes an explanation of the user interface, how to input parameters
 and equations, how to define the output in terms of functional averages
 or probabilities, and how to define and access auxiliary fields and noises.
 This section uses the default algorithms, because a more detailed explanation
 is given in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
In section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SPDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the practical approach to solving stochastic partial differential equations
 with xSPDE is explained.
 The techniques used in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SPDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

 are an extension of the previous one, so a thorough understanding of section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is strongly recommended.
 Both sections contain examples.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Projects:-xSIM-and"
plural "false"
caps "false"
noprefix "false"

\end_inset

 explains how to create projects with separated computation and graphics,
 as well as workflow and data storage.
\end_layout

\begin_layout Standard
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

 outlines the integration algorithms used in the manual.
 It includes a number of extended integration libraries, applicable to more
 specialized problems.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Integration-errors"
plural "false"
caps "false"
noprefix "false"

\end_inset

 outlines how integration errors, including time-step and stochastic errors,
 can be estimated and displayed.
\end_layout

\begin_layout Standard
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xSIM-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

 provides a reference for the details of the internals as well as a comprehensiv
e explanation of the input parameters useful in xSPDE simulations.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xGRAPH-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

 provides an extensive description of the visualization aspects of xSPDE,
 using the integrated xGRAPH function.
 This includes an automatic 'cascade' of graphic output, where high dimensional
 data is successively reduced to lower dimensional, visualizable data through
 projections.
\end_layout

\begin_layout Standard
Input parameters related to this are described as well.
 Data can also be graphed externally or stored for later analysis if preferred.
 Both average and raw trajectory data can be stored.
 However, the storage of raw data is generally not recommended, due to the
 large storage requirements.
 Additional examples in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Examples"
plural "false"
caps "false"
noprefix "false"

\end_inset

 demonstrate how to obtain parametric plots against input parameters.
 Plots of one component value against another can be graphed.
 A function that analyses convergence rates is also available.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
SDE theory
\begin_inset CommandInset label
LatexCommand label
name "sec:SDE Theory"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes the basics of stochastic differential equation (SDE)
 theory, in order to explain the background to the numerical methods.
\end_layout

\begin_layout Section
General form
\end_layout

\begin_layout Standard
A stochastic differential equation (SDE) is an equation with random noise
 terms.
 These were introduced by Langevin to treat small particles in fluids 
\begin_inset CommandInset citation
LatexCommand cite
key "Langevin1908theorie"
literal "false"

\end_inset

, and extended by Wiener, Ito and Stratonovich 
\begin_inset CommandInset citation
LatexCommand cite
key "wiener1930generalized,ito1996diffusion,stratonovich1960theory"
literal "false"

\end_inset

.
 The theory and its applications to biology, chemistry, engineering, economics,
 physics, meteorology and other disciplines are treated in many texts 
\begin_inset CommandInset citation
LatexCommand cite
key "Karatzas1991brownian,VanKampen2007stochastic,Gardiner2009Stochastic,klebaner2012introduction,Drummond2014Quantum,Arnold1992stochastic"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
An ordinary stochastic differential equation in one time dimension is,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\mathbf{A}\left(\mathbf{a},t\right)+\underline{\mathbf{B}}\left(\mathbf{a},t\right)\cdot\mathbf{w}(t)\,.\label{eq:SDE}
\end{equation}

\end_inset

Here 
\begin_inset Formula $\mathbf{a}$
\end_inset

 is a real or complex vector, 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is a vector function, 
\begin_inset Formula $\underline{\mathbf{B}}$
\end_inset

 a matrix function and 
\begin_inset Formula $\mathbf{w}$
\end_inset

 is usually a delta-correlated real Gaussian noise vector such that: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle w_{i}\left(t\right)w_{j}\left(t'\right)\right\rangle  & = & \delta\left(t-t'\right)\delta_{ij}.\label{eq:noise-correlations}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
One can also have non-Gaussian noise or noise that is not delta-correlated.
 Although these are somewhat less commonly treated, these alternatives are
 often found in real applications.
\end_layout

\begin_layout Subsection
Observables
\end_layout

\begin_layout Standard
In all cases, there are multiple independent trajectories, and one is interested
 in probabilistic averages, where the unweighted average of an observable
 
\begin_inset Formula $\mathbf{O}\left(\mathbf{a}\right)$
\end_inset

, for 
\begin_inset Formula $N_{s}$
\end_inset

 trajectories 
\begin_inset Formula $\mathbf{a}^{\left(n\right)}$
\end_inset

 is: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle \mathbf{O}\right\rangle _{N_{s}} & = & \frac{1}{N_{s}}\sum_{n}\mathbf{O}\left(\mathbf{a}^{\left(n\right)}\right).\label{eq:averages-1}
\end{eqnarray}

\end_inset

In other types of stochastic equation 
\begin_inset CommandInset citation
LatexCommand cite
key "graham1977path,Drummond2017forward"
literal "false"

\end_inset

, there is a weight 
\begin_inset Formula $\Omega\left(t\right)$
\end_inset

 for each trajectory.
 This has an additional equation of motion, where:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\Omega}{\partial t}=A_{\Omega}\left(\mathbf{a},\Omega,t\right)+\underline{B}_{\Omega}\left(\mathbf{a},\Omega,t\right)\cdot\mathbf{w}(t)\,.\label{eq:SDE-2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The results for all mean values are then weighted by the term 
\begin_inset Formula $\exp\left(\Omega\left(t\right)\right)$
\end_inset

, so that: 
\begin_inset Formula 
\begin{equation}
\left\langle \mathbf{O}\right\rangle _{\Omega}=\frac{\sum_{n}\mathbf{O}\left(\mathbf{a}^{\left(n\right)}\right)\exp\left(\Omega^{\left(n\right)}\left(t\right)\right)}{\sum_{n}\exp\left(\Omega^{\left(n\right)}\left(t\right)\right)}.\label{eq:Weighted-averages-1}
\end{equation}

\end_inset

This expression reduces to the usual average if the weights are zero, i.e,
 
\begin_inset Formula $\Omega=0$
\end_inset

.
 Apart from the way that averages are treated, the weight can simply be
 regarded as an additional term in the stochastic differential equations.
 This simply means that one now has an equation with an extra random field,
 so that 
\begin_inset Formula $\mathbf{a}\rightarrow\left[\mathbf{a},\Omega\right]$
\end_inset

, together with a modified expression for the averages.
 This, in fact, is how these equations are solved.
\end_layout

\begin_layout Standard
For reasons of efficiency, it is best to use 
\begin_inset Quotes eld
\end_inset

breeding
\begin_inset Quotes erd
\end_inset

 algorithms to treat these numerically.
 This replicates highly weighted trajectories with 
\begin_inset Formula $\Omega^{\left(n\right)}\left(t\right)\gg0$
\end_inset

 and removes trajectories with 
\begin_inset Formula $\Omega^{\left(n\right)}\ll0$
\end_inset

, that have negligible weight.
 The numerical method is described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The remainder of this section will focus on the most commonly treated case
 of unweighted, Gaussian, delta-correlated noise.
\end_layout

\begin_layout Section
Stochastic calculus
\end_layout

\begin_layout Standard
In the case of delta-correlated noise, the trajectories are not differentiable.
 As a result, there are two main variants of stochastic calculus used to
 define the derivatives, called Ito or Stratonovich 
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner2009Stochastic,Arnold1992stochastic"
literal "false"

\end_inset

, and xSPDE can be used for either type.
 The default algorithms are designed for Stratonovich cases, since this
 is just ordinary calculus.
 Ito calculus can be treated also, either using the directly applicable
 Euler method, or else by appropriate transformations to a Stratonovich
 form.
 One can also have a time-reversed or implicit Ito calculus 
\begin_inset CommandInset citation
LatexCommand cite
key "Drummond1991Computer"
literal "false"

\end_inset

, which is directly solved using an implicit Ito-Euler method.
\end_layout

\begin_layout Standard
A single step in time of duration 
\begin_inset Formula $\Delta t$
\end_inset

 uses finite noises 
\begin_inset Formula $\mathbf{w}$
\end_inset

 which are defined to be delta-correlated in the small time-step limit,
 so that 
\begin_inset Formula $\left\langle w_{i}w_{j}\right\rangle =\delta_{ij}/\Delta t.$
\end_inset


\end_layout

\begin_layout Subsection
Types of stochastic calculus
\end_layout

\begin_layout Standard
The limits as 
\begin_inset Formula $\Delta t\rightarrow0$
\end_inset

 are taken differently for the different types of stochastic calculus.
 Let 
\begin_inset Formula $\mathbf{a}_{0}=\mathbf{a}\left(t_{0}\right)$
\end_inset

, 
\begin_inset Formula $t_{1}=t_{0}+\Delta t$
\end_inset

, 
\begin_inset Formula $\mathbf{a}_{1}=\mathbf{a}\left(t_{1}\right)$
\end_inset

, 
\begin_inset Formula $\bar{\mathbf{a}}=\left(\mathbf{a}_{1}+\mathbf{a}_{0}\right)/2$
\end_inset

, and 
\begin_inset Formula $\bar{t}=t+\Delta t/2$
\end_inset

, then the next step in time is: 
\end_layout

\begin_layout Itemize
Ito calculus - uses 
\series bold
initial-time
\series default
 derivative evaluations 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{a}_{1}=\mathbf{a}_{0}+\left[\mathbf{A}^{(I)}\left(\mathbf{a}_{0},t_{0}\right)+\underline{\mathbf{B}}\left(\mathbf{a}_{0},t_{0}\right)\cdot\mathbf{w}\right]\,\Delta t\,\,.\label{eq:SDE-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Stratonovich calculus - uses 
\series bold
midpoint
\series default
 derivative evaluations 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{a}_{1}=\mathbf{a}_{0}+\left[\mathbf{A}\left(\bar{\mathbf{a}},\bar{t}\right)+\underline{\mathbf{B}}\left(\bar{\mathbf{a}},\bar{t}\right)\cdot\mathbf{w}\right]\,\Delta t\,.\label{eq:SDE-1-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Implicit Ito calculus - uses 
\series bold
final-time
\series default
 derivative evaluations 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathbf{a}_{1}=\mathbf{a}_{0}+\left[\mathbf{A}^{(I+)}\left(\mathbf{a}_{1},t_{1}\right)+\underline{\mathbf{B}}\left(\mathbf{a}_{1},t_{1}\right)\cdot\mathbf{w}\right]\,\Delta t\,\,.\label{eq:SDE-1-2}
\end{equation}

\end_inset

The drift term 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is changed in Ito or implicit Ito calculus, if the noise coefficient 
\begin_inset Formula $B$
\end_inset

 depends on the stochastic variable: 
\begin_inset Formula 
\begin{align}
A_{i}^{(I)} & =A_{i}+\frac{1}{2}B_{jk}\partial_{j}B_{ik},\label{eq:ItovsStratonovichDrift}\\
A_{i}^{(I+)} & =A_{i}-\frac{1}{2}B_{jk}\partial_{j}B_{ik}.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Here we define 
\begin_inset Formula $\partial_{n}\equiv\partial/\partial a_{n}$
\end_inset

 and we use an Einstein convention of summing over all repeated indices.
\end_layout

\begin_layout Section
Interaction picture
\end_layout

\begin_layout Standard
The interaction picture allows one to eliminate linear terms in the time
 derivatives.
 It is especially useful for stochastic partial differential equations,
 but it is applicable to stochastic equations as well.
 Suppose there are linear terms 
\begin_inset Formula $\underline{\mathbf{L}}$
\end_inset

, so that 
\begin_inset Formula $\mathbf{A}\left(\mathbf{a},t\right)=\mathbf{A}_{1}\left(\mathbf{a},t\right)+\underline{\mathbf{L}}\cdot\mathbf{a}\,$
\end_inset

, where 
\begin_inset Formula $\underline{\mathbf{L}}$
\end_inset

 is a constant matrix.
 The interaction picture defines local variables 
\begin_inset Formula $\tilde{\mathbf{a}}$
\end_inset

 for the fields 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
\end_layout

\begin_layout Standard
It is convenient to introduce an abbreviated notation as: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}D\left(\mathbf{a}\right)=\mathbf{A}_{1}\left(\mathbf{a},t\right)+\underline{\mathbf{B}}\left(\mathbf{a},t\right)\cdot\mathbf{w}(t)\end{aligned}
\end{split}
,\label{eq:deriv_without_linear_term-1}
\end{equation}

\end_inset

so that one can write the differential equation as: 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial\mathbf{a}}{\partial t}=D\left(\mathbf{a}\right)+\underline{\mathbf{L}}\cdot\mathbf{a}.\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Linear propagator
\end_layout

\begin_layout Standard
Next, we define a linear propagator.
 This is given formally by: 
\begin_inset Formula 
\begin{equation}
\begin{split}\underline{\mathbf{P}}\left(\Delta t\right)=\exp\left(\Delta t\underline{\mathbf{L}}\right)\end{split}
.
\end{equation}

\end_inset

where 
\begin_inset Formula $\Delta t=t-\bar{t}$
\end_inset

, and 
\begin_inset Formula $\bar{t}$
\end_inset

 is the interaction picture origin.
 Transforming the field 
\begin_inset Formula $\mathbf{a}$
\end_inset

 to an interaction picture is achieved on defining: 
\begin_inset Formula 
\begin{equation}
\tilde{\mathbf{a}}=\underline{\mathbf{P}}^{-1}\left(\Delta t\right)\mathbf{a}.
\end{equation}

\end_inset

As a result, the equation of motion is: 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial\tilde{\mathbf{a}}}{\partial t}=D\left(\underline{\mathbf{P}}\left(\Delta t\right)\tilde{\mathbf{a}}\right).\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This removes linear terms, which can cause stiffness in the equations, increasin
g the discretization error.
 Given the case of a completely linear ODE or SDE, the trajectory solutions
 will be exact up to round-off errors.
\end_layout

\begin_layout Section
Probability distributions
\end_layout

\begin_layout Standard
Stochastic equations generate trajectories distributed with a probability
 density 
\begin_inset Formula $P\left(\mathbf{a}\right)$
\end_inset

.
 These can be defined as an average and hence can be evaluated stochastically,
 since: 
\begin_inset Formula 
\begin{equation}
P\left(\mathbf{a}'\right)=\left\langle \delta\left(\mathbf{a}'-\mathbf{a}\right)\right\rangle .
\end{equation}

\end_inset

Here 
\begin_inset Formula $\left\langle ..\right\rangle \equiv\left\langle ..\right\rangle _{\infty}$
\end_inset

 is the infinite ensemble limit of the average over many trajectories.
 The probability can be shown to follow a Fokker-Planck equation (FPE) with
 positive semi-definite diffusion matrix, 
\begin_inset CommandInset citation
LatexCommand cite
key "Risken1996,Gardiner2009Stochastic"
literal "false"

\end_inset

: 
\begin_inset Formula 
\begin{equation}
\frac{\partial P}{\partial t}=\mathcal{L}P=\left[-\partial_{n}A_{n}^{(I)}+\frac{1}{2}\partial_{n}\partial_{m}B_{nk}B_{mk}\right]P\,,\label{eq:FPE}
\end{equation}

\end_inset

where the differential operators act on all terms to their right.
\end_layout

\begin_layout Subsection
Distribution averages
\end_layout

\begin_layout Standard
The average of any observable 
\begin_inset Formula $\mathbf{O}\left(\mathbf{a}\right)$
\end_inset

 is obtained either by averaging over the stochastic trajectories numerically,
 or by analytic calculations, using: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle \mathbf{O}\right\rangle  & = & \int\mathbf{O}\left(\mathbf{a}\right)P\left(\mathbf{a}\right)d\mathbf{a}.\label{eq:averages}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The dynamics of an observable or moment follows an adjoint equation, where
 
\begin_inset Formula $\tilde{\mathcal{L}}$
\end_inset

 is the adjoint of 
\begin_inset Formula $\mathcal{L}$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\left\langle \frac{\partial\mathbf{O}}{\partial t}\right\rangle =\left\langle \tilde{\mathcal{L}}\mathbf{O}\right\rangle ,\label{eq:moment_equn}
\end{equation}

\end_inset

where: 
\begin_inset Formula 
\begin{equation}
\left\langle \tilde{\mathcal{L}}\mathbf{O}\right\rangle =\left\langle \left[A_{n}^{(I)}\partial_{n}+\frac{1}{2}B_{nk}B_{mk}\partial_{n}\partial_{m}\right]\mathbf{O}\right\rangle .
\end{equation}

\end_inset

This equation allows the time-evolution of averages to be calculated analyticall
y in simple cases, given an initial distribution.
 However, in more complex cases, a numerical simulation of the stochastic
 equations is more practical, and this can be carried out with xSPDE or
 other software.
\end_layout

\begin_layout Section
Example: random walk
\end_layout

\begin_layout Standard
The first example of an SDE is the simplest possible stochastic equation
 or Wiener process: 
\begin_inset Formula 
\begin{equation}
\dot{a}=w(t)\,.\label{eq:Wiener_process}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This has the solution that 
\begin_inset Formula 
\begin{equation}
a\left(t\right)=a\left(0\right)+\int_{0}^{t}w\left(\tau\right)d\tau,
\end{equation}

\end_inset

which means that the initial mean value does not change in time: 
\begin_inset Formula 
\begin{equation}
\left\langle a\left(t\right)\right\rangle =\left\langle a\left(0\right)\right\rangle .\label{eq:Wiener_mean}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Variance solution
\end_layout

\begin_layout Standard
The noise correlation is non-vanishing from Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:noise-correlations"
plural "false"
caps "false"
noprefix "false"

\end_inset

, so the variance must increase with time: 
\begin_inset Formula 
\begin{align}
\left\langle a^{2}\left(t\right)\right\rangle  & =\left\langle a^{2}\left(0\right)\right\rangle +\int_{0}^{t}\int_{0}^{t}\left\langle w\left(\tau\right)w\left(\tau'\right)\right\rangle d\tau d\tau'\nonumber \\
 & =\left\langle a^{2}\left(0\right)\right\rangle +\int_{0}^{t}\int_{0}^{t}\delta\left(\tau-\tau'\right)d\tau d\tau'.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Integrating the delta function gives unity, which means that the second
 moment and the variance both increase linearly with time:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\left\langle a^{2}\left(t\right)\right\rangle  & =\left\langle a^{2}\left(0\right)\right\rangle +\int_{0}^{t}d\tau\nonumber \\
 & =\left\langle a^{2}\left(0\right)\right\rangle +t.\label{eq:Wiener_mean_square}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The probability follows an elementary diffusion equation: 
\begin_inset Formula 
\begin{equation}
\frac{\partial P}{\partial t}=\frac{1}{2}\frac{\partial^{2}P}{\partial a^{2}}\,,\label{eq:FPE-1}
\end{equation}

\end_inset

which is an example of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:FPE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 From this equation and using Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:moment_equn"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the first two corresponding moment equations in this case are 
\begin_inset Formula 
\begin{align}
\frac{\partial}{\partial t}\left\langle a\right\rangle = & \left\langle \frac{1}{2}\frac{\partial^{2}}{\partial a^{2}}a\,\right\rangle =0\nonumber \\
\frac{\partial}{\partial t}\left\langle a^{2}\right\rangle = & \left\langle \frac{1}{2}\frac{\partial^{2}}{\partial a^{2}}a^{2}\,\right\rangle =1.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
These differential equations are satisfied by the solutions obtained directly
 from the stochastic equations, namely Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Wiener_mean"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Wiener_mean_square"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Section
Probability densities
\end_layout

\begin_layout Standard
The Wiener process with an arbitrary noise strength has the stochastic equation:
 
\begin_inset Formula 
\begin{equation}
\dot{a}=bw\left(t\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The probability density satisfies the Fokker-Planck equation for diffusion,
 
\begin_inset Formula 
\begin{equation}
\frac{\partial P}{\partial t}=\frac{b^{2}}{2}\frac{\partial^{2}}{\partial a^{2}}P\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Then, if 
\begin_inset Formula $x$
\end_inset

 initially is Gaussian distributed, this has a Gaussian distribution at
 time 
\begin_inset Formula $t$
\end_inset

 with: 
\begin_inset Formula 
\begin{equation}
P\left(a\right)=\frac{1}{\sqrt{2\pi\sigma^{2}\left(t\right)}}\exp\left[-\frac{\left(a-\bar{a}\left(t\right)\right)^{2}}{2\sigma^{2}\left(t\right)}\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here: 
\begin_inset Formula 
\begin{align}
\bar{a}\left(t\right) & =\bar{a}\left(0\right)\\
\sigma^{2}\left(t\right) & =\sigma^{2}\left(0\right)+b^{2}t.\nonumber 
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Distributions of functions
\end_layout

\begin_layout Standard
Any function of the stochastic variables has a corresponding probability
 density.
 For example, the distribution of 
\begin_inset Formula $a^{2}$
\end_inset

 has a 
\begin_inset Formula $\chi^{2}$
\end_inset

 distribution with a single degree of freedom, such that if 
\begin_inset Formula $y=\left(a-\bar{a}\left(t\right)\right)^{2}/\sigma^{2}\left(t\right)$
\end_inset

, then:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
P\left(y\right)=\frac{1}{\sqrt{2\pi y}}\exp\left[-\frac{y}{2}\right].
\end{equation}

\end_inset

Hence: 
\begin_inset Formula 
\begin{equation}
P\left(a^{2}\right)=\frac{1}{\left|a-\bar{a}\left(t\right)\right|\sqrt{2\pi\sigma^{2}\left(t\right)}}\exp\left[-\frac{\left(a-\bar{a}\left(t\right)\right)^{2}}{2\sigma^{2}\left(t\right)}\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
More generally, it is often not known what the exact analytic solutions
 are, and a numerical solution is employed.
 This can either use the stochastic equation directly, or the Fokker-Planck
 equation, although it is generally difficult to scale this to many variables
 or to partial differential equations,
\end_layout

\begin_layout Standard
That is why we focus on the stochastic equation approach here, which can
 be used to numerically calculate either the mean values or the probability
 distributions in general cases.
\end_layout

\begin_layout Section
Fourier transforms
\end_layout

\begin_layout Standard
Frequency spectra have many uses, especially for understanding the steady-state
 fluctuations of any physical system in the presence of noise, typically
 either thermal or quantum-mechanical, although the noise could have other
 sources.
\end_layout

\begin_layout Standard
The time-domain spectral definition used here is: 
\begin_inset Formula 
\begin{align}
\tilde{a}(\omega) & =\frac{1}{\sqrt{2\pi}}\int e^{i\omega t}a(t)dt\,\nonumber \\
a(t) & =\frac{1}{\sqrt{2\pi}}\int e^{-i\omega t}\tilde{a}(\omega)d\omega.\,
\end{align}

\end_inset


\end_layout

\begin_layout Standard
As a simple example, a sinusoidal oscillation in the form 
\begin_inset Formula 
\begin{equation}
a(t)=\cos\left(\omega_{0}t\right).
\end{equation}

\end_inset

between 
\begin_inset Formula $t=-T/2$
\end_inset

 and 
\begin_inset Formula $t=T/2$
\end_inset

 has a Fourier transform given by: 
\begin_inset Formula 
\begin{align}
\tilde{a}(\omega) & =\frac{1}{2\sqrt{2\pi}}\int_{-T/2}^{T/2}\left[e^{i\left(\omega-\omega_{0}\right)t}+e^{i\left(\omega+\omega_{0}\right)t}\right]dt\,\\
 & =\frac{T}{2\sqrt{2\pi}}\left[sinc\left(\left(\omega-\omega_{0}\right)\frac{T}{2}\right)+sinc\left(\left(\omega+\omega_{0}\right)\frac{T}{2}\right)\right].\nonumber 
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Discrete Fourier transforms
\end_layout

\begin_layout Standard
While exact in this analytic case, the definition above is impractical for
 numerical calculations.
 In taking measurements and doing simulations, one has a discrete set of
 data-points.
 Assuming the samples are at fixed intervals, the best one can do in practical
 cases is a discrete Fourier transform, with samples 
\begin_inset Formula $\bar{a}(\bar{t}_{j})$
\end_inset

 that are defined as integrals over each small interval 
\begin_inset Formula $dt$
\end_inset

:
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\bar{a}(\bar{t}_{j})$
\end_inset

 be the average over a small time interval: 
\begin_inset Formula 
\begin{equation}
\bar{a}(\bar{t}_{j})=\int_{t_{j}}^{t_{j}+dt}a(t)dt\,,\label{eq:field-average}
\end{equation}

\end_inset

then to a good approximation as 
\begin_inset Formula $dt\rightarrow0$
\end_inset

, provided 
\begin_inset Formula $\omega_{n}$
\end_inset

 is not too large, 
\begin_inset Formula 
\begin{align}
\tilde{a}(\omega_{n}) & =\frac{\Delta t}{\sqrt{2\pi}}\sum_{j=1}^{N}e^{i\omega_{n}\bar{t}_{j}}\bar{a}(\bar{t}_{j})\,\nonumber \\
\bar{a}(\bar{t}_{j}) & =\frac{\Delta\omega}{\sqrt{2\pi}}\sum_{n=1}^{N}e^{-i\omega_{n}\bar{t}_{j}}\tilde{a}(\omega_{n})\,.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
These also form an invertible pair provided that 
\begin_inset Formula $\Delta t\Delta\omega=2\pi/N$
\end_inset

.
 As well as being more practical, this is very efficient due to the fast
 Cooley-Tukey (FFT) algorithm 
\begin_inset CommandInset citation
LatexCommand cite
key "Cooley1965Algorithm"
literal "false"

\end_inset

, allowing computation on time-scales of 
\begin_inset Formula $O\left(N\ln N\right)$
\end_inset

 rather than 
\begin_inset Formula $O\left(N^{2}\right)$
\end_inset

 as one might expect.
\end_layout

\begin_layout Standard
When taking Fourier transforms in the time-domain, xSPDE does a time-averaging
 of all fields over the current time-step, using the available coarse and
 fine time-samples.
 This is done by averaging the field before and after the stochastic time-step.
 The methods used for this are described in greater detail in Section
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Time-domain-spectra"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Quantum-phase-space-equations"

\end_inset

Quantum phase-space
\end_layout

\begin_layout Standard
One useful application of stochastic equations is in quantum technologies,
 where stochastic methods are generally much more scalable than other methods
 
\begin_inset CommandInset citation
LatexCommand cite
key "Opanchuk2019Mesoscopic,Opanchuk2019Robustness"
literal "false"

\end_inset

.
 This approach started when Schrodinger 
\begin_inset CommandInset citation
LatexCommand cite
key "Schrodinger1926Constant"
literal "false"

\end_inset

 pointed out that quantum oscillators can have classical equations.
 Wigner, Moyal and Glauber extended this to other systems 
\begin_inset CommandInset citation
LatexCommand cite
key "Wigner1932Quantum,Moyal1949Quantum,Glauber1963Coherent"
literal "false"

\end_inset

.
 In lasers and quantum optics 
\begin_inset CommandInset citation
LatexCommand cite
key "Louisell1973Quantum,gardiner2004quantum,Carmichael2002Statistical,Drummond2014Quantum"
literal "false"

\end_inset

, it is used to obtain SDEs for quantum systems coupled to reservoirs.
\end_layout

\begin_layout Standard
For the case of bosons, any 
\begin_inset Formula $M$
\end_inset

-mode quantum density matrix 
\begin_inset Formula $\hat{\rho}$
\end_inset

 may be written in a unified quantum phase-space form as: 
\begin_inset Formula 
\begin{equation}
\hat{\rho}=\int d^{2M}\bm{\alpha}d^{2M}\bm{\beta}P_{\sigma}\left(\bm{\alpha},\bm{\beta}\right)\hat{\Lambda}_{\sigma}\left(\bm{\alpha},\bm{\beta}\right),
\end{equation}

\end_inset

where 
\begin_inset Formula $P_{\sigma}$
\end_inset

 is the 
\begin_inset Formula $\sigma$
\end_inset

-ordered phase-space distribution function, and 
\begin_inset Formula $\bm{\alpha}=\left[\alpha_{1},\ldots\alpha_{M}\right]$
\end_inset

.
 The basis, 
\begin_inset Formula $\hat{\Lambda}_{\sigma}$
\end_inset

, is a Gaussian function of annihilation and creation operators (
\begin_inset CommandInset citation
LatexCommand cite
key "Corney2003Gaussian"
literal "false"

\end_inset

), whose variance depends on 
\begin_inset Formula $\sigma$
\end_inset

.
 This is defined as the variance of 
\begin_inset Formula $\alpha\beta$
\end_inset

 due to vacuum fluctuations, in the operator ordering of the representation.
\end_layout

\begin_layout Standard
For clarity, we hats like 
\begin_inset Formula $\hat{a}$
\end_inset

 are used here to indicate operators that do not commute with each other,
 as opposed to stochastic variables like 
\begin_inset Formula $\alpha$
\end_inset

 that do commute.
 For any given operator ordering, it is always possible to find a probability
 distribution such that the expectation of an operator product equals the
 stochastic variable correlations 
\begin_inset CommandInset citation
LatexCommand cite
key "Dirac1945Analogy"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Positive-P representation
\end_layout

\begin_layout Standard
The above expansion leads to different statistics and noise terms depending
 on the operator ordering.
 For example, in the normally ordered positive P-representation where 
\begin_inset Formula $\sigma=0$
\end_inset

, the operator basis is 
\begin_inset Formula 
\begin{equation}
\hat{\Lambda}\left(\bm{\alpha},\bm{\beta}\right)\equiv\frac{\left|\bm{\alpha}\right\rangle \left\langle \bm{\beta}^{*}\right|}{\left\langle \bm{\beta}^{*}\right|\left.\bm{\alpha}\right\rangle }\,.
\end{equation}

\end_inset

Here 
\begin_inset Formula $\bm{\beta}=\bm{\alpha}^{\dagger}\sim\hat{\bm{a}}^{\dagger}$
\end_inset

 is a stochastic variable conjugate in the mean to 
\begin_inset Formula $\bm{\alpha}^{*}$
\end_inset

.
 Any quantum state has a positive representation of this type 
\begin_inset CommandInset citation
LatexCommand cite
key "Drummond1980Generalised"
literal "false"

\end_inset

, and normally ordered coherence functions are moments of the distribution
 with:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left\langle \hat{a}_{m_{1}}^{\dagger}\ldots\hat{a}_{m_{n}}\right\rangle =\int d^{2M}\bm{\alpha}d^{2M}\bm{\beta}\left[\beta_{m_{1}}\ldots\alpha_{m_{n}}\right]P\left(\bm{\alpha},\bm{\beta}\right).\,\label{eq:nonclassical correlation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The Glauber-Sudarshan representation used in laser physics is obtained for
 
\begin_inset Formula $\bm{\beta}=\bm{\alpha}^{*}$
\end_inset

, so that the two variables are exactly conjugate:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\hat{\rho}=\int d^{2M}\bm{\alpha}P\left(\bm{\alpha}\right)\left|\bm{\alpha}\right\rangle \left\langle \bm{\alpha}\right|.
\end{equation}

\end_inset

In this case, the total number of stochastic variables is halved, but nonclassic
al squeezed or entangled states cannot be represented as a positive distribution.
 Two additional frequently utilized representations are the Wigner (
\begin_inset Formula $\sigma=1/2)$
\end_inset

 and Husimi (
\begin_inset Formula $\sigma=1)$
\end_inset

 representations, characterized by symmetric ordering and anti-normal ordering,
 respectively.
 These also have a classical phase-space with 
\begin_inset Formula $\bm{\beta}=\bm{\alpha}^{*}$
\end_inset

.
\end_layout

\begin_layout Subsection
Master equations
\end_layout

\begin_layout Standard
The dynamics of a quantum system coupled to a reservoir is described by
 a master equation.
 In the Markovian (high-frequency) limit, the general quantum master equation
 for a dissipative quantum system with damping rates 
\begin_inset Formula $\Gamma_{j}$
\end_inset

 is 
\begin_inset Formula 
\begin{align}
{\frac{\partial\hat{\rho}}{\partial t}} & =\frac{1}{i\hbar}\left[\hat{H}_{sys},\hat{\rho}\right]+\sum_{j}\Gamma_{j}\left(\bar{n}_{j}+1\right)(2\hat{A}_{j}\hat{\rho}\hat{A}_{j}^{\dagger}-\hat{A}_{j}^{\dagger}\hat{A}_{j}\hat{\rho}-\hat{\rho}\hat{A}_{j}^{\dagger}\hat{A}_{j})\,\,\nonumber \\
 & +\sum_{j}\Gamma_{j}\bar{n}_{j}(2\hat{A}_{j}^{\dagger}\hat{\rho}\hat{A}_{j}-\hat{A}_{j}\hat{A}_{j}^{\dagger}\hat{\rho}-\hat{\rho}\hat{A}_{j}\hat{A}_{j}^{\dagger})\,\,,\label{eq:master-equation}
\end{align}

\end_inset

where 
\begin_inset Formula $\Gamma_{j}$
\end_inset

 is a damping rate for reservoir couplings to the operator 
\begin_inset Formula $\hat{A}_{j}$
\end_inset

, 
\begin_inset Formula $\bar{n}_{j}$
\end_inset

 is the finite temperature reservoir occupation, and the typical damping
 operators are:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Damping operator (
\begin_inset Formula $\hat{A}_{j}$
\end_inset

) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Gamma_{j}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Physical interpretation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{a}_{j}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{j}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linear amplitude loss (units 
\begin_inset Formula $s^{-1}$
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{a}_{j}^{\dagger}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $g_{j}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linear amplitude gain (units 
\begin_inset Formula $s^{-1}$
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{a}_{j}^{\dagger}\hat{a}_{j}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\gamma_{j}^{p}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase decay rate gain (units 
\begin_inset Formula $s^{-1}$
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\hat{a}_{j}^{2}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\kappa_{j}/2$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nonlinear amplitude loss (units 
\begin_inset Formula $s^{-1}$
\end_inset

).
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Typical types of quantum damping term
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The operator equations are mapped to differential equations with the equivalence
s:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\hat{a}_{n}^{\dagger}\hat{\rho} & \rightarrow & \left[\beta_{n}+\left(\sigma-1\right)\frac{\partial}{\partial\alpha_{n}}\right]P_{\sigma}\nonumber \\
\hat{a}_{n}\hat{\rho} & \rightarrow & \left[\alpha_{n}+\sigma\frac{\partial}{\partial\beta_{n}}\right]P_{\sigma}\nonumber \\
\hat{\rho}\hat{a}_{n} & \rightarrow & \left[\alpha_{n}+\left(\sigma-1\right)\frac{\partial}{\partial\beta_{n}}\right]P_{\sigma}\nonumber \\
\hat{\rho}\hat{a}_{n}^{\dagger} & \rightarrow & \left[\beta_{n}+\sigma\frac{\partial}{\partial\alpha_{n}}\right]P_{\sigma}\,.\label{eq:drummond_identities-1-1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The operator mappings give a differential equation.
 If it has a second-order positive-definite form it is a Fokker-Planck equation
 equivalent to an SDE, or an SPDE for quantum fields 
\begin_inset CommandInset citation
LatexCommand cite
key "Carter1987Squeezing"
literal "false"

\end_inset

.
 The noise can be additive or multiplicative, depending on the problem.
 Not all cases give stable FPE equations 
\begin_inset CommandInset citation
LatexCommand cite
key "Deuar2002Gauge"
literal "false"

\end_inset

, and truncation is required for the Wigner representation if the Hamiltonian
 is nonlinear 
\begin_inset CommandInset citation
LatexCommand cite
key "Steel1998Dynamical"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
The total noise includes internal quantum noise generated from the Hamiltonian
 term 
\begin_inset Formula $\hat{H}_{sys}$
\end_inset

, as well as reservoir noise terms generated from the coupling to the reservoir
 operators, which is proportional to 
\begin_inset Formula $\Gamma_{j}$
\end_inset

.
 There is a similar behavior in classical systems, except that these correspond
 to a high-temperature limit, and in most cases only have external reservoir
 noise from thermal fluctuations.
\end_layout

\begin_layout Section
Damped harmonic oscillator
\begin_inset CommandInset label
LatexCommand label
name "sec:Damped-harmonic-oscillator"

\end_inset


\end_layout

\begin_layout Standard
As an example, take the damped quantum harmonic oscillator.
 This has the Hamiltonian 
\begin_inset Formula $H=\omega_{0}\hat{a}^{\dagger}\hat{a}$
\end_inset

.
 If damping is added, it obeys the master equation 
\begin_inset Formula 
\begin{align}
\frac{d\hat{\rho}}{dt} & =\frac{-i}{\hbar}[\omega_{0}\hat{a}^{\dagger}\hat{a},\rho]+\gamma\left(1+\bar{n}\right)(2\hat{a}\rho\hat{a}^{\dagger}-\hat{a}^{\dagger}\hat{a}\rho-\rho\hat{a}^{\dagger}\hat{a})\nonumber \\
 & +\gamma\bar{n}(2\hat{a}^{\dagger}\rho\hat{a}-\hat{a}\hat{a}^{\dagger}\rho-\rho\hat{a}\hat{a}^{\dagger}).
\end{align}

\end_inset

This leads to a random walk in a complex space 
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner2009Stochastic,Drummond2014Quantum"
literal "false"

\end_inset

, 
\begin_inset Formula 
\begin{align}
\frac{d\alpha}{dt} & =-\left(\gamma+i\omega_{0}\right)\alpha+\sqrt{2\gamma\left(\sigma+\bar{n}\right)}\zeta(t)\nonumber \\
\frac{d\beta}{dt} & =-\left(\gamma-i\omega_{0}\right)\beta+\sqrt{2\gamma\left(\sigma+\bar{n}\right)}\zeta^{*}(t),
\end{align}

\end_inset

where the noise is complex and 
\begin_inset Formula $\zeta(t)=\left(w_{1}(t)+iw_{2}(t)\right)/\sqrt{2}$
\end_inset

.
 The correlations are 
\begin_inset Formula 
\begin{align}
\left\langle \zeta(t)\left(\zeta(t')\right)^{*}\right\rangle  & =\delta\left(t-t'\right)\nonumber \\
\left\langle \zeta(\omega)\left(\zeta\left(\omega'\right)\right)^{*}\right\rangle  & =\delta\left(\omega-\omega'\right).
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Wigner representation
\end_layout

\begin_layout Standard
In the zero temperature Wigner case with 
\begin_inset Formula $\gamma=$
\end_inset

1, 
\begin_inset Formula $\sigma=1/2$
\end_inset

, and in a rotating frame so that 
\begin_inset Formula $\omega_{0}=0$
\end_inset

, the probability follows the Fokker-Planck equation: 
\begin_inset Formula 
\begin{equation}
\frac{\partial P}{\partial t}=\left[\frac{\partial}{\partial\alpha_{x}}\alpha_{x}\,+\frac{\partial}{\partial\alpha_{y}}\alpha_{y}+\frac{1}{4}\left(\frac{\partial^{2}}{\partial\alpha_{x}^{2}}\,+\frac{\partial^{2}}{\partial\alpha_{y}^{2}}\right)\,\right]P\,,\label{eq:FPE-1-1}
\end{equation}

\end_inset

which is an example of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:FPE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Ignoring terms that vanish or can be obtained from symmetry, the first
 corresponding moment equations in each of the real and imaginary directions
 are 
\begin_inset Formula 
\begin{align}
\frac{\partial}{\partial t}\left\langle \alpha_{x}\right\rangle = & \left\langle -\alpha_{x}\frac{\partial}{\partial\alpha_{x}}\alpha_{x}\,\right\rangle =-\left\langle \alpha_{x}\,\right\rangle \nonumber \\
\frac{\partial}{\partial t}\left\langle \alpha_{x}\alpha_{y}\right\rangle = & \left\langle -\left(\alpha_{x}\frac{\partial}{\partial\alpha_{x}}+\alpha_{y}\frac{\partial}{\partial\alpha_{y}}\,\right)\alpha_{x}\alpha_{y}\,\right\rangle =-\left\langle \alpha_{x}\alpha_{y}\,\right\rangle \nonumber \\
\frac{\partial}{\partial t}\left\langle \alpha_{x}^{2}\right\rangle = & \left\langle \left(-\alpha_{x}\frac{\partial}{\partial\alpha_{x}}+\frac{1}{4}\frac{\partial^{2}}{\partial\alpha_{x}^{2}}\,\right)\alpha_{x}^{2}\,\right\rangle =\frac{1}{2}-2\left\langle \alpha_{x}^{2}\,\right\rangle .
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The steady-state is therefore a Gaussian distribution with 
\begin_inset Formula $\left\langle \alpha_{x,y}\,\right\rangle =0$
\end_inset

, 
\begin_inset Formula $\left\langle \alpha_{x}\alpha_{y}\,\right\rangle =0$
\end_inset

 and 
\begin_inset Formula $\left\langle \alpha_{x,y}^{2}\,\right\rangle =1/4$
\end_inset

.
 One can use an initial condition of 
\begin_inset Formula $\alpha=(v_{1}+iv_{2})/2$
\end_inset

, with 
\begin_inset Formula $\left\langle v_{i}^{2}\right\rangle =1/2$
\end_inset

, in order to replicate the steady state, which is a Gaussian with
\begin_inset Formula $\left\langle \alpha_{x}\,\right\rangle =\left\langle \alpha_{y}\,\right\rangle =0$
\end_inset

 and
\begin_inset Formula $\left\langle \alpha_{x}^{2}\,\right\rangle =\left\langle \alpha_{y}^{2}\,\right\rangle =1/4$
\end_inset

.
\end_layout

\begin_layout Subsection
Internal spectrum
\end_layout

\begin_layout Standard
Neglecting any boundary terms, the equation in frequency space is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
-i\omega\tilde{\alpha}(\omega)=-\tilde{\alpha}(\omega)+\tilde{\zeta}(\omega).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For sufficiently long times, the solution in frequency space - where 
\begin_inset Formula $\omega=2\pi f$
\end_inset

 is the angular frequency - is therefore given by: 
\begin_inset Formula 
\begin{equation}
\tilde{\alpha}\left(\omega\right)=\frac{\tilde{\zeta}(\omega)}{1-i\omega}.
\end{equation}

\end_inset

The expectation value of the noise spectrum, 
\begin_inset Formula $\left\langle \left|\tilde{\alpha}(\omega)\right|^{2}\right\rangle $
\end_inset

 in the long time limit, is: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle \left|\tilde{\alpha}(\omega)\right|^{2}\right\rangle  & = & \frac{1}{2\pi\left(1+\omega^{2}\right)}\int\int e^{-i\omega(t-t')}\left\langle \zeta(t)\zeta^{*}(t')\right\rangle dtdt'\,.\nonumber \\
 & = & \frac{T}{2\pi\left(1+\omega^{2}\right)}.\label{eq:spectra_SHO}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
This equation can also be used for some classical problems, which correspond
 to the high-temperature limit of 
\begin_inset Formula $\bar{n}\gg1$
\end_inset

.
\end_layout

\begin_layout Section
Input-output spectra
\end_layout

\begin_layout Standard
The spectrum of an internal field variable is not the one that is usually
 measured.
 An important application of stochastic equations is therefore in calculating
 output, measured spectra of lasers, quantum optics, opto-mechanics and
 quantum circuits 
\begin_inset CommandInset citation
LatexCommand cite
key "gardiner2004quantum,Kiesewetter2014Scalable"
literal "false"

\end_inset

.
 These have the feature that the measured output spectrum may also include
 noise from reflected fields at the input/output ports.
 If the quantum noise term in the Heisenberg equations for a cavity operator
 
\begin_inset Formula $\hat{a}_{c}$
\end_inset

 is given by: 
\begin_inset Formula $\dot{\hat{a}}_{c}\sim..+\sqrt{2\gamma}\hat{a}_{in}(t),$
\end_inset

 then the corresponding operator input-output relations are 
\begin_inset Formula $\hat{a}_{out}(t)+\hat{a}_{in}(t)=\sqrt{2\gamma}\hat{a}_{c}$
\end_inset

.
\end_layout

\begin_layout Standard
In quantum phase-space for the case of the harmonic oscillator or similar
 systems, 
\begin_inset Formula $\alpha_{in}=\sqrt{\sigma+\bar{n}}\zeta$
\end_inset

 is the noise term in the Langevin equation.
 The output fields 
\begin_inset Formula $\alpha_{out}$
\end_inset

 that are measured are given by: 
\begin_inset Formula 
\begin{align}
\alpha_{out} & =\sqrt{2\gamma}\alpha-\alpha_{in}.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Hence one must include in the spectrum both the internal mode variables
 and the noise terms themselves.
 Solving for the spectra, one obtains auxiliary fields with 
\begin_inset Formula 
\begin{align}
\tilde{\alpha}_{in}(\omega) & =\sqrt{\sigma+\bar{n}}\tilde{\zeta}(\omega)\\
\tilde{\alpha}_{out}(\omega) & =\sqrt{2\gamma}\tilde{a}(\omega)-\sqrt{\sigma+\bar{n}}\tilde{\zeta}(\omega).\nonumber 
\end{align}

\end_inset


\end_layout

\begin_layout Standard
In summary, it is the output fields that are amplified and measured.
 Hence one must be able to compute the spectra of the output fields for
 experimental comparisons.
 These have the additional feature that they include the reservoir noise
 
\begin_inset Formula $\tilde{\zeta}(\omega)$
\end_inset

, evaluated at the same time as the field is evaluated, since the reservoir
 noise is the input here.
 In xSPDE these are called 
\emph on
auxfields
\emph default
.
\end_layout

\begin_layout Subsection
Steady-state result
\end_layout

\begin_layout Standard
Consider the example of Section (
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Damped-harmonic-oscillator"
plural "false"
caps "false"
noprefix "false"

\end_inset

), in the Wigner representation case with 
\begin_inset Formula $\gamma=1$
\end_inset

, 
\begin_inset Formula $\sigma=1/2$
\end_inset

 and 
\begin_inset Formula $\bar{n}=0$
\end_inset

.
 Over long time-scales, so that one is in the steady state, the solution
 for 
\begin_inset Formula $\tilde{a}_{out}$
\end_inset

 is that: 
\begin_inset Formula 
\begin{align}
\tilde{\alpha}_{out}(\omega) & =\sqrt{2}\left[\frac{1}{1-i\omega}-\frac{1}{2}\right]\tilde{\zeta}(\omega)\nonumber \\
 & =\frac{1}{\sqrt{2}}\left[\frac{1+i\omega}{1-i\omega}\right]\tilde{\zeta}(\omega).
\end{align}

\end_inset


\end_layout

\begin_layout Standard
This gives the following expectation values: 
\begin_inset Formula 
\begin{align}
\left\langle \tilde{\alpha}_{out}(\omega)\left(\tilde{\alpha}_{out}(\omega)\left(\omega'\right)\right)^{*}\right\rangle  & =\frac{1}{2}\delta\left(\omega-\omega'\right)\nonumber \\
\left\langle \tilde{\alpha}_{in}(\omega)\left(\tilde{\alpha}_{in}(\omega)\left(\omega'\right)\right)^{*}\right\rangle  & =\frac{1}{2}\delta\left(\omega-\omega'\right).
\end{align}

\end_inset

These are the expectation values of the zero temperature quantum fluctuations
 in the input and output channels.
 This means that the harmonic oscillator in its ground state is in equilibrium
 with an external vacuum field reservoir, also in its ground state.
 However, from Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:spectra_SHO"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the internal spectral correlations of the harmonic oscillator are modified
 by the coupling.
\end_layout

\begin_layout Standard
While this is a simple result, exactly the same general type of behavior
 occurs in more sophisticated cases.
 These may include many coupled modes with nonlinearities.
 Additional or auxiliary fields that depend both on noise terms and internal
 stochastic variables are required.
 The soluble case given above is a useful test case, and it is treated numerical
ly later in the manual.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
SPDE theory
\begin_inset CommandInset label
LatexCommand label
name "sec:SPDE Theory"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes the basics of stochastic partial differential equation
 (SPDE) theory, in order to explain the background to the numerical methods.
\end_layout

\begin_layout Section
SPDE definitions
\end_layout

\begin_layout Standard
A stochastic partial differential equation or SPDE is defined in both time
 
\begin_inset Formula $t$
\end_inset

 and one or more space dimensions 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 We suppose there are 
\begin_inset Formula $d$
\end_inset

 total space-time dimensions.
 The space-time coordinate is denoted as 
\begin_inset Formula $\mathbf{r}=\left(r^{1},\ldots r^{d}\right)=\left(t,\mathbf{x}\right)=\left(t,x,y,z,...\right)$
\end_inset

.
\end_layout

\begin_layout Standard
The stochastic partial differential equation solved is written in differential
 form as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\mathbf{A}\left[\mathbf{\nabla},\mathbf{a},\mathbf{r}\right]+\underline{\mathbf{B}}\left[\mathbf{\nabla},\mathbf{a},\mathbf{r}\right]\cdot\mathbf{w}(\mathbf{r})+\mathbf{L}\left[\mathbf{\nabla},\mathbf{a},\mathbf{r}\right]\cdot\mathbf{a}.\label{eq:spde}
\end{equation}

\end_inset

Here, 
\begin_inset Formula $\mathbf{a}=\left[a_{1},\dots a_{f}\right]$
\end_inset

 is a real or complex vector field, 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is a vector function of fields and space and 
\begin_inset Formula $\underline{\mathbf{B}}$
\end_inset

 a matrix function.
 The new feature is that terms can now include the operator 
\begin_inset Formula $\nabla$
\end_inset

, which is a differential term in a real space 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 The exact structure of these terms is important, and not all such equations
 have well-behaved solutions 
\begin_inset CommandInset citation
LatexCommand cite
key "quastel2015one,lam1998improved"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
In many common cases, the noise term 
\begin_inset Formula $\mathbf{w}$
\end_inset

 is delta-correlated in time and space: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle w_{i}\left(\mathbf{r}\right)w_{j}\left(\mathbf{r}'\right)\right\rangle  & = & \delta\left(t-t'\right)\delta\left(\mathbf{x}-\mathbf{x}'\right)\delta_{ij}.
\end{eqnarray}

\end_inset

One can also have noise with a finite correlation length defined by a noise
 correlation function 
\begin_inset Formula $N_{ij}\left(\mathbf{x}-\mathbf{x}'\right)$
\end_inset

 in space so that: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle w_{i}\left(\mathbf{r}\right)w_{j}\left(\mathbf{r}'\right)\right\rangle  & = & \delta\left(t-t'\right)N_{ij}\left(\mathbf{x}-\mathbf{x}'\right).
\end{eqnarray}

\end_inset

It is even possible to have noise with a finite correlation time.
 Currently, these are not directly treated in xSPDE, although user definitions
 of this are possible by adding a customized noise function.
\end_layout

\begin_layout Standard
Additionally, the initial field has a probability distribution.
 In most examples, we suppose that this initial random field distribution
 can be generated as a function of Gaussian distributed initial random fields
 
\begin_inset Formula $\mathbf{v}\left(\mathbf{x}\right)$
\end_inset

, where: 
\begin_inset Formula 
\begin{equation}
\left\langle v_{i}\left(\mathbf{x}\right)v_{j}\left(\mathbf{x}'\right)\right\rangle =\delta\left(\mathbf{x}-\mathbf{x}'\right)\delta_{ij}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
However, it is also possible that the initial random fields are also not
 delta-correlated, so that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left\langle v_{i}\left(\mathbf{x}\right)v_{j}\left(\mathbf{x}'\right)\right\rangle =R_{ij}\left(\mathbf{x}-\mathbf{x}'\right).
\end{equation}

\end_inset

Both finite correlation length and delta-correlated noise and random terms
 can be used in xSPDE simulations, with finite correlation lengths defined
 through a Fourier transform method.
\end_layout

\begin_layout Section
Boundary conditions
\begin_inset CommandInset label
LatexCommand label
name "subsec:Boundary-conditions"

\end_inset


\end_layout

\begin_layout Standard
There are three types of boundaries that are available in xSPDE.
 They are specified independently for each space dimension 
\begin_inset Formula $j=2,\ldots d$
\end_inset

, field component 
\begin_inset Formula $i=1,\dots f,$
\end_inset

 and lower or upper location 
\begin_inset Formula $\ell=1,2$
\end_inset

.
 Each has an xSPDE boundary type.
 These are specified with a numerical code 
\begin_inset Formula $bt$
\end_inset

, as: 
\end_layout

\begin_layout Description
Dirichlet (specified value, 
\begin_inset Formula $bt=1$
\end_inset

): 
\begin_inset Formula $a_{i}\left(r^{1},r^{2},\dots\hat{r}_{\ell}^{j},\dots\right)=f_{ij\ell}\left(\mathbf{r},\mathbf{a}\right)$
\end_inset

 .
 
\end_layout

\begin_layout Description
Periodic (
\begin_inset Formula $bt=0$
\end_inset

): 
\begin_inset Formula $a_{i}\left(r^{1},r^{2},\dots\hat{r}_{\ell}^{j},\dots\right)=a_{i}\left(r^{1},r^{2},\dots\hat{r}_{3-\ell}^{j},\dots\right)$
\end_inset

 .
 
\end_layout

\begin_layout Description
Robin/Neumann (specified derivative, 
\begin_inset Formula $bt=-1$
\end_inset

): 
\begin_inset Formula $\frac{\partial}{\partial r^{j}}a_{i}\left(r^{1},r^{2},\dots\hat{r}_{\ell}^{j},\dots\right)=g_{ij\ell}\left(\mathbf{r},\mathbf{a}\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
The coordinates 
\begin_inset Formula $\hat{r}_{\ell}^{j}=\left(r_{1}^{j},r_{2}^{j}\right)$
\end_inset

 are locations where boundary conditions are enforced.
 There are five types of boundary 
\emph on
combinations
\emph default
 of these for each dimension and field variable.
 Note that the boundary type can change the error stability properties of
 an equation.
 The most general boundaries can only be specified using finite differences
 currently, as the spectral method boundary types are more limited.
\end_layout

\begin_layout Standard
Periodic boundaries can't be combined with other types, as this defines
 both boundaries: 
\end_layout

\begin_layout Description
a) periodic-periodic- P-P: 
\begin_inset Quotes qld
\end_inset

0,0
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Description
b) Dirichlet-Dirichlet- D-D: 
\begin_inset Quotes qld
\end_inset

1,1
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Description
c) Robin-Robin- R-R: 
\begin_inset Quotes qld
\end_inset

-1,-1
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Description
d) Robin-Dirichlet- R-D: 
\begin_inset Quotes qld
\end_inset

-1,1
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Description
e) Dirichlet-Robin- D-R: 
\begin_inset Quotes qld
\end_inset

1,-1
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Standard
Just as with the derivative term, each of these types can change with dimension
 and field component.
 Specified field or derivative values can be any user-defined functions
 of space, time, and field amplitude or simply have fixed values.
 Currently, all combinations of boundaries can be treated in xSPDE using
 finite difference derivatives.
 Spectral methods are restricted to periodic or zero Dirichlet/Neumann boundary
 conditions.
\end_layout

\begin_layout Section
Spatial grid and boundaries
\end_layout

\begin_layout Standard
The precise location of the boundary at 
\begin_inset Formula $\hat{r}_{\ell}^{j}$
\end_inset

 is important in solving (S)PDEs, especially if high accuracy is required,
 or if field values at the boundary are needed.
\end_layout

\begin_layout Standard
Suppose the spatial grid spacing is 
\begin_inset Formula $\Delta x$
\end_inset

 and the number of grid points in a particular dimension 
\begin_inset Formula $d$
\end_inset

 is 
\begin_inset Formula $points(d)=N$
\end_inset

, then the maximum range from the first to last computed point is 
\series bold
always
\series default
: 
\begin_inset Formula 
\begin{equation}
\begin{split}R=(N-1)\Delta x=ranges(d).\end{split}
\end{equation}

\end_inset

Noting that 
\begin_inset Formula $\mathbf{r}=\left(t,\mathbf{x}\right)$
\end_inset

, and 
\begin_inset Formula $\Delta\mathbf{r}=\left(\Delta t,\Delta\mathbf{x}\right),$
\end_inset

this means that the space-time points are at: 
\begin_inset Formula 
\begin{equation}
r_{i}=O_{i}+(i-1)\Delta r_{i}.
\end{equation}

\end_inset

There are two distinct spatial boundary locations used in xSPDE, depending
 on the type of boundary conditions specified, as follows:
\end_layout

\begin_layout Subsection
Periodic boundary
\end_layout

\begin_layout Standard
Due to periodicity, the logical boundary location is arbitrary.
 For the default case of a periodic boundary, the indices are arranged as
 though on a circle from 
\begin_inset Formula $1:N$
\end_inset

.
 It is useful to suppose the boundary as at both 
\begin_inset Formula $\hat{r}_{1}^{j}=r_{1}^{j}-\Delta r^{j}/2$
\end_inset

 and at 
\begin_inset Formula $\hat{r}_{2}^{j}=r_{N_{j}}^{j}+\Delta r^{j}/2$
\end_inset

.
 Neither upper or lower logical 'boundary' is at a grid point.
 The effective range of the domain is 
\begin_inset Formula $R^{j}+\Delta r^{j}$
\end_inset

.
 Only the values at 
\begin_inset Formula $N$
\end_inset

 points are computed, and one must regard the point where the periodicity
 is enforced as interpolating between the last and first point.
\end_layout

\begin_layout Subsection
Dirichlet/Robin boundary
\end_layout

\begin_layout Standard
For the case of a non-periodic boundary, including Dirichlet, Robin and
 Neumann boundary conditions, the indices are simply in a line from 
\begin_inset Formula $1:N$
\end_inset

.
 The lower and upper lower boundaries are at 
\begin_inset Formula $\hat{r}_{1}^{j}=r_{1}^{j}$
\end_inset

 and at 
\begin_inset Formula $\hat{r}_{2}^{j}=r_{N_{j}}^{j}$
\end_inset

.
 In some PDE methods the logical boundaries are outside the grid boundaries,
 but that is not the case here.
 Unlike the periodic case, boundaries are enforced at the first and last
 point.
 This is different to what is found in standard trigonometric transform
 software, but this approach allows for a unified and simpler treatment
 of multiple types of algorithm.
\end_layout

\begin_layout Section
Multidimensional walk
\end_layout

\begin_layout Standard
The simplest example of an SPDE is the multidimensional Wiener process:
 
\begin_inset Formula 
\begin{equation}
\dot{a}=w(t,\mathbf{x})\,.\label{eq:Wiener_process-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This has a solution that is identical in appearance to an SDE: 
\begin_inset Formula 
\begin{equation}
a\left(t,\mathbf{x}\right)=a\left(0,\mathbf{x}\right)+\int_{0}^{t}w\left(\tau,\mathbf{x}\right)d\tau.
\end{equation}

\end_inset

Just as for an SDE, this means that the initial mean value does not change
 in time: 
\begin_inset Formula 
\begin{equation}
\left\langle a\left(t,\mathbf{x}\right)\right\rangle =\left\langle a\left(0,\mathbf{x}\right)\right\rangle .\label{eq:Wiener_mean-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Since there are no spatial derivatives here, boundary values are not important.
 One can regard this as having periodic boundaries, which by the xSPDE conventio
ns means that no boundary conditions are enforced - since periodic boundaries
 do not alter computed values when there are no derivatives.
\end_layout

\begin_layout Subsection
Variance solution
\end_layout

\begin_layout Standard
The noise correlation is non-vanishing from Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:noise-correlations"
plural "false"
caps "false"
noprefix "false"

\end_inset

, so the variance must increase with time: 
\begin_inset Formula 
\begin{align}
\left\langle a^{2}\left(t,\mathbf{x}\right)\right\rangle  & =\left\langle a^{2}\left(0,\mathbf{x}\right)\right\rangle +\int_{0}^{t}\int_{0}^{t}\left\langle w\left(\tau,\mathbf{x}\right)w\left(\tau',\mathbf{x}\right)\right\rangle d\tau d\tau'\nonumber \\
 & =\left\langle a^{2}\left(0,\mathbf{x}\right)\right\rangle +\delta^{d-1}\left(0\right)\int_{0}^{t}\int_{0}^{t}\delta\left(\tau-\tau'\right)d\tau d\tau'.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Integrating the temporal delta function gives unity.
 The spatial delta-function is replaced by 
\begin_inset Formula $1/\Delta V$
\end_inset

 in a discretized lattice calculation at points 
\begin_inset Formula $\mathbf{x}_{j}$
\end_inset

 with cell volume 
\begin_inset Formula $\Delta V=\prod\Delta x_{j}$
\end_inset

, which means that the second moment and the variance both increase linearly
 with time:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\left\langle a^{2}\left(t,\mathbf{x}_{j}\right)\right\rangle  & =\left\langle a^{2}\left(0,\mathbf{x}_{j}\right)\right\rangle +t/\Delta V.\label{eq:Wiener_mean_square-1}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The probability on the lattice for observing lattice field values 
\begin_inset Formula $a_{j}$
\end_inset

 follows an elementary diffusion equation: 
\begin_inset Formula 
\begin{equation}
\frac{\partial P}{\partial t}=\frac{1}{2\Delta V}\sum_{j}\frac{\partial^{2}P}{\partial a_{j}^{2}}\,,\label{eq:FPE-1-2}
\end{equation}

\end_inset

which is an example of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:FPE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 From this equation and using Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:moment_equn"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the first two corresponding moment equations in this case are 
\begin_inset Formula 
\begin{align}
\frac{\partial}{\partial t}\left\langle a_{j}\right\rangle = & \left\langle \frac{1}{2}\frac{\partial^{2}}{\partial a_{j}^{2}}a_{j}\,\right\rangle =0\nonumber \\
\frac{\partial}{\partial t}\left\langle a_{j}^{2}\right\rangle = & \left\langle \frac{1}{2\Delta V}\frac{\partial^{2}}{\partial a_{j}^{2}}a_{j}^{2}\,\right\rangle =\frac{1}{\Delta V}.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
These differential equations are satisfied by the solutions obtained directly
 from the stochastic equations, but as one can see, the coupling between
 the lattice points provides more interesting behavior.
 This requires derivative terms such as Laplacians.
\end_layout

\begin_layout Section
Interaction picture
\end_layout

\begin_layout Standard
To treat Laplacians, spectral or interaction-picture methods can be very
 efficient, and in certain cases give both much lower errors and much faster
 run-times.
 They do not have the large errors and stability problems of finite difference
 methods, which allows much larger time-steps to be used.
\end_layout

\begin_layout Standard
To explain the algorithm, (S)PDEs often contain terms which are linear in
 the field variables 
\begin_inset Formula $\mathbf{a}$
\end_inset

, including derivative operators acting on 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
 This can be treated using an 
\shape italic
interaction picture
\shape default
, which leads to dramatically reduced time-step errors and higher stability
 
\begin_inset CommandInset citation
LatexCommand cite
key "Drummond1993Simulation,Werner1997Robust"
literal "false"

\end_inset

.
 In the literature on partial differential equations, this is called a spectral
 method.
\end_layout

\begin_layout Standard
The interaction picture provides a means to solve for linear terms in the
 time derivatives in a very efficient way.
 This is based on introducing local variables 
\begin_inset Formula $\tilde{\mathbf{a}}$
\end_inset

 for the field variables 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
 It is convenient for the purposes of describing such interaction picture
 methods to introduce an abbreviated notation as: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\mathcal{D}\left[\mathbf{a},\mathbf{r}\right]=\mathbf{A}\left[\mathbf{\nabla},\mathbf{a},\mathbf{r}\right]+\underline{\mathbf{B}}\left[\mathbf{\nabla},\mathbf{a},\mathbf{r}\right]\cdot\mathbf{w}(\mathbf{r})\end{aligned}
\end{split}
\label{eq:deriv_without_linear_term}
\end{equation}

\end_inset

Hence, provided that 
\begin_inset Formula $\underline{\mathbf{L}}\left[\boldsymbol{\nabla}\right]$
\end_inset

 has no explicit space-dependence, we can write the differential equation
 as: 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial\boldsymbol{a}}{\partial t}=\mathcal{D}\left[\mathbf{a},\mathbf{r}\right]+\underline{\mathbf{L}}\left[\boldsymbol{\nabla}\right]\cdot\boldsymbol{a}.\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Linear propagator
\end_layout

\begin_layout Standard
Next, we define a linear propagator.
 This is given formally by: 
\begin_inset Formula 
\begin{equation}
\begin{split}\mathcal{P}\left(\Delta t\right)=\exp\left(\Delta t\underline{\mathbf{L}}\left[\boldsymbol{\nabla}\right]\right)\end{split}
.
\end{equation}

\end_inset

where 
\begin_inset Formula $\Delta t=t-\bar{t}$
\end_inset

, and 
\begin_inset Formula $\bar{t}$
\end_inset

 is the interaction picture origin.
 Transforming the field 
\begin_inset Formula $\mathbf{a}$
\end_inset

 to an interaction picture is achieved on defining: 
\begin_inset Formula 
\begin{equation}
\tilde{\mathbf{a}}=\mathcal{P}^{-1}\left(\Delta t\right)\mathbf{a}.
\end{equation}

\end_inset

As a result, the equation of motion is: 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial\tilde{\mathbf{a}}}{\partial t}=\mathcal{D}\left[\mathcal{P}\left(\Delta t\right)\tilde{\mathbf{a}},t\right].\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This allows an SPDE to be treated like an SDE, if transformations are used.
 These can be efficiently implemented using Fourier or discrete sine or
 cosine transforms.
 The xSPDE implementation of this currently requires either periodic or
 zero boundary conditions and a diagonal linear operator 
\emph on
L
\emph default
 without space-dependence.
 The linear operator can have any derivative in the periodic case, but only
 even order derivatives in the Dirichlet and Neumann case.
\end_layout

\begin_layout Standard
As well as the linear term, derivatives and nonlinear functions that are
 not tractable with spectral methods can appear in the residual term 
\begin_inset Formula $\mathcal{D}\left[\mathbf{a},\mathbf{r}\right]$
\end_inset

, where they are treated using finite difference techniques.
 As a result, while the interaction picture does not handle all derivative
 terms, it also does not restrict them from being used elsewhere in the
 equations.
\end_layout

\begin_layout Standard
Other methods exist in the literature.
 Improved convergence properties are obtained for some problems in a spectral
 picture using an exact solution of a linear part of the drift term 
\begin_inset CommandInset citation
LatexCommand cite
key "bao2005fourth,Blakie2005Projected"
literal "false"

\end_inset

, or stochastic noise terms 
\begin_inset CommandInset citation
LatexCommand cite
key "jentzen2009numerical"
literal "false"

\end_inset

, as well as the Laplacian terms.
 The xSPDE code has user-definable functions that can be adapted to include
 these.
\end_layout

\begin_layout Section
Fourier transforms
\end_layout

\begin_layout Standard
It is often useful to transform a field to implement the interaction picture,
 or to extract nonlocal correlation properties in space.
 The Fourier transforms or spectrum definitions used in xSPDE are given
 by the symmetric Fourier transform definition: 
\begin_inset Formula 
\begin{align}
\tilde{a}(\mathbf{k}) & =\mathcal{F}\left(a(\mathbf{x})\right)\nonumber \\
 & =\frac{1}{\left[2\pi\right]^{\left(d-1\right)/2}}\int e^{-i\mathbf{k}\cdot\mathbf{x}}a(\mathbf{x})d\mathbf{x}\,.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The inverse Fourier transform is the function: 
\begin_inset Formula 
\begin{align}
a(\mathbf{x}) & =\mathcal{F}^{-1}\left(\tilde{a}\right)\nonumber \\
 & =\frac{1}{\left[2\pi\right]^{\left(D-1\right)/2}}\int e^{i\mathbf{k}\cdot\mathbf{x}}\tilde{a}(\mathbf{k})d\mathbf{k}\,.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
In simulations, this is not combined with any time (or space) averaging
 as in the temporal Fourier transforms.
 The reason for this is that the interaction picture transformations must
 be invertible, which is the case for a point-based discrete Fourier transform.
\end_layout

\begin_layout Subsection
Normalization
\end_layout

\begin_layout Standard
During propagation, we define temporary internal fields 
\begin_inset Formula $A\left(\mathbf{k}_{\mathbf{n}}\right)$
\end_inset

, that are normalized using FFT conventions: 
\begin_inset Formula 
\begin{align}
A\left(\mathbf{k}_{\mathbf{n}}\right) & =\sum_{j_{2}=1}^{N_{2}}\ldots\sum_{j_{d}=1}^{N_{d}}e^{-i\mathbf{k}_{n}\cdot\mathbf{x}_{\mathbf{j}}}a\left(\mathbf{x}_{\mathbf{j}}\right)\,\nonumber \\
a\left(\mathbf{x}_{\mathbf{j}}\right) & =\frac{1}{\prod_{k=2}^{D}N_{k}}\sum_{n_{2}=1}^{N_{2}}\ldots\sum_{n_{D}=1}^{N_{D}}e^{i\mathbf{k}_{\mathbf{n}}\cdot\mathbf{x}_{\mathbf{j}}}A\left(\mathbf{k}_{\mathbf{n}}\right)\,.
\end{align}

\end_inset

Otherwise, for graphical and output averages, we define Fourier transforms
 using physics and mathematics conventions:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\tilde{a}\left(\mathbf{k}_{\mathbf{n}}\right) & =\prod_{d=2}^{D}\left[\frac{\Delta x_{d}}{\sqrt{2\pi}}\right]\sum_{j_{2}=1}^{N_{2}}\ldots\sum_{j_{d}=1}^{N_{D}}e^{-i\mathbf{k}_{n}\cdot\mathbf{x}_{\mathbf{j}}}a\left(\mathbf{x}_{\mathbf{j}}\right)\,\nonumber \\
a\left(\mathbf{x}_{\mathbf{j}}\right) & =\prod_{d=2}^{D}\left[\frac{\Delta k_{d}}{\sqrt{2\pi}}\right]\sum_{n_{2}=1}^{N_{2}}\ldots\sum_{n_{d}=1}^{N_{D}}e^{i\mathbf{k}_{\mathbf{n}}\cdot\mathbf{x}_{\mathbf{j}}}\tilde{a}\left(\mathbf{k}_{\mathbf{n}}\right)\,.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Note that this rescaling is consistent, because 
\begin_inset Formula 
\begin{equation}
\Delta x_{d}\Delta k_{d}=\frac{2\pi}{N_{d}}.
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Trigonometric transforms
\end_layout

\begin_layout Standard
Taking the interaction picture approach, we now consider other types of
 boundary conditions, which we assume here are either a zero field (Dirichlet)
 or a zero derivative (Neumann).
 We will only treat cases of even order derivatives, which do not change
 the trigonometric function.
 Any odd order derivatives are taken to be included in the finite difference
 (
\begin_inset Formula $\mathcal{D}$
\end_inset

) term.
\end_layout

\begin_layout Standard
In the spectral transform method in one space dimension, one uses a trigonometri
c function, 
\begin_inset Formula $T\left(kx\right)=T_{1}\sin\left(kx\right)+T_{2}\cos\left(kx\right)$
\end_inset

 to expand as: 
\begin_inset Formula 
\begin{align}
a_{i}\left(t,x\right) & =\sum_{n}a_{i,n}(t)T(k_{i,n}x),
\end{align}

\end_inset

The discrete inverse transform allows evaluation at sample points 
\begin_inset Formula $x_{j}$
\end_inset

, in order to satisfy the boundary conditions: 
\begin_inset Formula 
\begin{equation}
a_{i,n}(t)=\sum_{j}a_{i}(t,x_{j})\tilde{T}(k_{n}x_{j}),
\end{equation}

\end_inset

The trigonometrical function is defined such that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\partial_{x}^{2p}T(kx)=\left(-k^{2}\right)^{p}T(kx).
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Propagator solution
\end_layout

\begin_layout Standard
This means that the propagator equation is now soluble for the sampled points,
 since for each component 
\begin_inset Formula 
\begin{align}
\mathcal{L}\cdot a(t,x_{j}) & =\sum_{ijn}\mathcal{L}a_{n}(t)T(k_{n}x_{j}),\nonumber \\
 & =-\sum_{ijnp}L_{p}\left(-k_{n}^{2}\right)^{p}a_{n}(t)T(k_{n}x_{j})).
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Hence, 
\begin_inset Formula 
\begin{equation}
a_{n}(t)=\exp\left(\sum L_{p}\left(-k_{n}^{2}t\right)^{p}t\right)a_{n}(0).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This is an exact solution, provided the initial condition has the given
 expansion.
 There are no approximations made on the transverse derivative.
 Provided the 
\begin_inset Formula $k$
\end_inset

 values are the same, this propagator is identical for all types of trigonometri
c and Fourier transforms.
\end_layout

\begin_layout Standard
As explained above in (
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Boundary-conditions"
plural "false"
caps "false"
noprefix "false"

\end_inset

), there are five types of boundary combinations that are possible in each
 dimension and field component.
 Each has a corresponding xSPDE boundary type and spectral integrator.
 Just as with the derivative term, each of these types can change with dimension
 and field component.
\end_layout

\begin_layout Standard
Currently, all can be treated in xSPDE using finite differences, and each
 type of boundary has a particular spectral method that preserves the boundary
 requirement.
 In principle, more than one transform can be used.
 It is possible to define the relevant trigonometric transforms to correspond
 to whole symmetries whose boundary is either at a grid point, or half symmetrie
s which are half-way between two grid points.
\end_layout

\begin_layout Standard
Differential equations can also have first order terms, which currently
 require using finite differences or periodic boundaries.
 These make use of boundaries at a grid point, in order to compute the relevant
 terms, which means that there is greater compatibility with the finite
 difference methods when the boundaries are at the grid points.
 With this restriction, the available transforms are reduced.
\end_layout

\begin_layout Standard
It is possible to compute first-order derivatives with spectral methods,
 but these turn sine transforms into cosine transforms.
 This is not compatible with simple interaction picture transformations,
 except for the periodic case.
\end_layout

\begin_layout Standard
In summary, spectral transforms can all be implemented using fast FTT, discrete
 sine (DST) or cosine (DCT) transforms, but the trigonometric method to
 be used is specific to the boundary type.
 The definitions used here mostly correspond to the definitions used in
 the FFTW 
\begin_inset CommandInset citation
LatexCommand cite
key "Frigo1998FFTW,Frigo2005Design"
literal "false"

\end_inset

 software.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Spectral-transforms-and"

\end_inset

Transforms and boundaries
\end_layout

\begin_layout Standard
Suppose that there are Dirichlet or Neumann boundaries, then the following
 expansion can be employed in each dimension.
 We only describe one space dimension for simplicity with: 
\begin_inset Formula 
\begin{equation}
a=\sum_{n=1}^{\infty}\left[S_{n}\sin\left(k_{n}x\right)+C_{n}\cos\left(k_{n}x\right)\right]e^{\sum L_{p}\left(-k_{n}^{2}\right)^{p}t},
\end{equation}

\end_inset

where 
\begin_inset Formula $k_{n},C_{n},S_{n}$
\end_inset

 are chosen to satisfy the initial and boundary conditions.
 Boundaries are taken, for the purposes of explanation, as being from 
\begin_inset Formula $x=0$
\end_inset

 to 
\begin_inset Formula $x=R$
\end_inset

.
 This is not quite the case in the actual code, which can treat arbitrary
 boundary locations due to the use of the optional 
\emph on
origins
\emph default
 input to change the origin.
\end_layout

\begin_layout Standard
Suppose there are 
\begin_inset Formula $N$
\end_inset

 computational grid-points.
 For the spatial grid (1-based), this corresponds to 
\begin_inset Formula $x_{n}=\left(n-1\right)\Delta x$
\end_inset

, 
\begin_inset Formula $n=1,...,N$
\end_inset

 with 
\begin_inset Formula $\Delta x=\frac{R}{N-1}$
\end_inset

 , so we have 
\begin_inset Formula $x_{1}=0$
\end_inset

 and 
\begin_inset Formula $x_{N}=R$
\end_inset

.
\end_layout

\begin_layout Standard
In carrying out a discrete transform on 
\begin_inset Formula $N_{T}$
\end_inset

 points, using standard trigonometric transform definitions, there may be
 less grid points required, so we may have 
\begin_inset Formula $N_{T}\le N$
\end_inset

 if some of the boundary values are defined due to Dirichlet boundaries.
 Internal xSPDE definitions always use the full computational grid range,
 
\begin_inset Formula $N$
\end_inset

, which 
\emph on
includes
\emph default
 boundary values.
\end_layout

\begin_layout Standard
An unnormalized inverse results in the original array multiplied by 
\begin_inset Formula $N_{FT}/2=\left(N-1\right)/2$
\end_inset

, where 
\begin_inset Formula $N_{FT}=N-1$
\end_inset

 is the FFTW 'logical' size, so our definitions include a factor of 
\begin_inset Formula $\sqrt{2/\left(N-1\right)}$
\end_inset

.
 Here
\begin_inset Formula $N_{T}$
\end_inset

, the number of points in the standard DST/DCT definitions, can differ from
 
\series bold
both
\series default
 the xSPDE computation grid size 
\begin_inset Formula $N$
\end_inset

 that includes both boundaries, and also from the FFTW 'logical' size, which
 always includes one (periodic) boundary.
\end_layout

\begin_layout Standard
The notation in this section is based on the usual discrete sine and cosine
 transform (FFTW) definitions.
 However, we use 
\begin_inset Formula $1-$
\end_inset

based indices, often found in mathematics and in Octave/Matlab/Julia/Fortran.
 For all coordinates, including these examples of discrete Fourier transforms,
 we remind the reader that:
\series bold
 
\begin_inset Formula 
\begin{equation}
r_{n}^{d}=R^{d}\left(n-1\right)/(N^{d}-1).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If we regard the transforms as having arguments of form 
\begin_inset Formula $k_{n}\left(x_{0}+x_{n}\right)$
\end_inset

, the momentum spacings given below are such that: 
\begin_inset Formula 
\begin{align}
\Delta k & =\frac{\pi}{R}\nonumber \\
\Delta x\Delta k & =\frac{\pi}{N-1}.
\end{align}

\end_inset

These internal definitions used in the propagator calculations are therefore
 different to those used in external graphs and in periodic boundary cases.
\end_layout

\begin_layout Standard

\series bold
The following lists the inverse trigonometric transforms required to obtain
 
\begin_inset Formula $a(x)$
\end_inset

 from 
\begin_inset Formula $a_{k}$
\end_inset

, for the four different non-periodic boundary types in each dimension and
 field index.
 
\end_layout

\begin_layout Subsection
D-D case: Discrete map (DST-I)
\end_layout

\begin_layout Standard
Take 
\begin_inset Formula $a(0)=a(R)=0$
\end_inset

, with a sine transform.
 The representation of 
\begin_inset Formula $a$
\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
a\left(x_{n},t\right) & =\sqrt{\frac{2}{N-1}}\sum_{j=2}^{N-1}a_{j}\left(t\right)\sin\left(\pi\frac{\left(j-1\right)\left(n-1\right)}{N-1}\right).
\end{align}

\end_inset


\end_layout

\begin_layout Standard

\series bold
Forward transform: this is also DST-I
\end_layout

\begin_layout Subsection
R-R case: Discrete map (DCT-I)
\end_layout

\begin_layout Standard
Take 
\begin_inset Formula $a'(0)=a'(R)=0$
\end_inset

.
 The representation of 
\begin_inset Formula $a$
\end_inset

 is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
a\left(x_{n},t\right) & =\sqrt{\frac{2}{N-1}}\left(\frac{1}{2}\left(a_{1}+(-1)^{n-1}a_{N}\right)+\sum_{j=2}^{N-1}a_{j}\left(t\right)\cos\left(\pi\frac{\left(j-1\right)\left(n-1\right)}{N-1}\right)\right).
\end{align}

\end_inset


\end_layout

\begin_layout Standard

\series bold
Forward transform: this is also DCT-I
\end_layout

\begin_layout Subsection
D-R case: Discrete map (DST-II)
\end_layout

\begin_layout Standard
Take 
\begin_inset Formula $a(0)=a'(R)=0$
\end_inset

.
 The representation of 
\begin_inset Formula $a$
\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
a\left(t,x_{n}\right) & =\sqrt{\frac{2}{N-1}}\left(\sum_{j=1}^{N-1}a_{j}\left(t\right)\sin\left[\frac{\pi}{N-1}\left(j-\frac{1}{2}\right)n\right]\right).
\end{align}

\end_inset


\end_layout

\begin_layout Standard

\series bold
Forward transform: this is DST-III
\series default
.
\end_layout

\begin_layout Subsection
R-D case Discrete map (DCT-II)
\end_layout

\begin_layout Standard
Take 
\begin_inset Formula $a'(0)=a(R)=0$
\end_inset

.
 The representation of 
\begin_inset Formula $a$
\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
a\left(t,x_{n}\right) & =\sqrt{\frac{2}{N-1}}\sum_{j=1}^{N-1}a_{j}\left(t\right)\cos\left[\frac{\pi}{N-1}\left(j-\frac{1}{2}\right)\left(n-1\right)\right].
\end{align}

\end_inset


\end_layout

\begin_layout Standard

\series bold
Forward transform: this is DCT-III
\series default
.
\end_layout

\begin_layout Section
Frequency or momentum grid 
\begin_inset CommandInset label
LatexCommand label
name "sec:IP-implementation"

\end_inset


\end_layout

\begin_layout Standard
The frequency or momentum grid spacing is defined for all 
\emph on
output
\emph default
 graphs and periodic Fourier transforms as 
\begin_inset Formula 
\begin{equation}
\begin{split}\Delta k=\frac{2\pi}{N\Delta x}\end{split}
.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
However, the internal momentum grid spacing used can differ from this, depending
 on the transforms used in the interaction picture.
 As explained above in Section (
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Spectral-transforms-and"
plural "false"
caps "false"
noprefix "false"

\end_inset

), the internal momenta for trigonometric transforms are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{split}\Delta k=\frac{\pi}{\left(N-1\right)\Delta x}\end{split}
.
\end{equation}

\end_inset

This is because the xSPDE algorithms allow the use of a sequence of interaction
 pictures.
 Each successive interaction picture is referenced to 
\begin_inset Formula $t=t_{n}$
\end_inset

, for the n-th step starting at 
\begin_inset Formula $t=t_{n}$
\end_inset

, so 
\begin_inset Formula $\boldsymbol{a}_{I}(t_{n})=\boldsymbol{a}(t_{n})\equiv\boldsymbol{a}_{n}$
\end_inset

.
 It is also possible to solve stochastic partial differential equations
 in xSPDE using explicit derivatives, but this is less efficient.
\end_layout

\begin_layout Standard
A discrete Fourier transform (DFT) using a fast Fourier transform method
 is employed for the interaction picture (IP) transforms used with periodic
 boundaries.
 This is normalized differently to the graphed Fourier transforms, but the
 difference is not computationally significant.
 However, the 
\begin_inset Formula $\Delta k$
\end_inset

 used internally changes with the precise type of trigonometric transform
 used in other cases.
\end_layout

\begin_layout Standard
In one dimension, the DFT is usually defined by a sum over indices starting
 with zero, rather than the Matlab convention of one.
 Hence, if 
\begin_inset Formula $\tilde{m}=m-1$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\begin{split}A_{\tilde{n}}=\mathcal{F}\left(a\right)=\sum_{\tilde{m}=0}^{N-1}a_{\tilde{m}}\exp\left[-2\pi i\tilde{m}\tilde{n}/N\right]\end{split}
.
\end{equation}

\end_inset

For periodic boundaries, the IP Fourier transform can be written in terms
 of an FFT as 
\begin_inset Formula 
\begin{equation}
\begin{split}\boldsymbol{A}\left(\boldsymbol{k}_{\boldsymbol{n}}\right)=\prod_{j}\left[\sum_{\tilde{m}_{j}}\exp\left[-i\left(dk_{j}dx_{j}\right)\tilde{m}_{j}\tilde{n}_{j}\right]\right]\end{split}
.
\end{equation}

\end_inset

The inverse FFT Fourier transforms divide by the correct factors of 
\begin_inset Formula $\prod_{j}N_{j}$
\end_inset

 to ensure invertibility.
 Due to the periodicity of the exponential function, negative momenta are
 obtained if we consider an ordered lattice such that: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}k_{j} & =(j-1)\Delta k\,\,\,(j\le N/2)\\
k_{j} & =(j-1-N)\Delta k\,\,(j>N/2)
\end{aligned}
.\end{split}
\end{equation}

\end_inset

This Fourier transform is then multiplied by the appropriate factor to propagate
 in the interaction picture, then an inverse Fourier transform is applied.
 While it is not scaled for interaction picture transforms, an additional
 scaling factor is applied to obtain transformed fields in any averages
 for output plots.
\end_layout

\begin_layout Standard
In other words, in the averages 
\begin_inset Formula 
\begin{equation}
\begin{split}\tilde{a}_{n}=\frac{\Delta x}{\sqrt{2\pi}}A_{\tilde{n}'}.\end{split}
\end{equation}

\end_inset

where the indexing change indicates that graphed momenta are stored from
 negative to positive values.
 For plotted frequency spectra a 
\series bold
positive
\series default
 sign is used in the frequency exponent of the transform to frequency space,
 to agree with common physics conventions.
\end_layout

\begin_layout Section
Derivatives
\end_layout

\begin_layout Subsection
Spectral derivatives
\end_layout

\begin_layout Standard
For spectral derivatives in the interaction picture, we define 
\begin_inset Formula $D_{x}\left(k\right)$
\end_inset

 to obtain a derivative.
 To explain, one integrates by parts: 
\begin_inset Formula 
\begin{equation}
\begin{split}D_{x}^{p}\tilde{\boldsymbol{a}}\left(\boldsymbol{k}\right)=\left[ik_{x}\right]^{p}\tilde{\boldsymbol{a}}\left(\boldsymbol{k}\right)=\frac{1}{\left(2\pi\right)^{d/2}}\int d\boldsymbol{x}e^{-i\boldsymbol{k}\cdot\boldsymbol{x}}\left[\frac{\partial}{\partial x}\right]^{p}\boldsymbol{a}\left(\boldsymbol{x}\right).\end{split}
\end{equation}

\end_inset

This means, for example, that to calculate a one dimensional space derivative
 in a Fourier interaction picture routine, one uses:
\end_layout

\begin_layout Standard

\emph on
 
\begin_inset Formula 
\begin{equation}
\nabla_{x}\rightarrow D_{x}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here 
\emph on
Dx
\emph default
 is an array of momenta in cyclic order in dimension 
\begin_inset Formula $d$
\end_inset

 as defined above, suitable for an FFT calculation.
 The imaginary 
\begin_inset Formula $i$
\end_inset

 is not needed to give the correct sign, as it is included in the derivative
 array.
 In two dimensions, a full two-dimensional Laplacian is:
\end_layout

\begin_layout Standard

\emph on
 
\begin_inset Formula 
\begin{equation}
\boldsymbol{\nabla}^{2}=\nabla_{x}^{2}+\nabla_{y}^{2}\rightarrow D_{x}^{2}+D_{y}^{2}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Then, on inverting the transform 
\begin_inset Formula 
\begin{equation}
\left[\frac{\partial}{\partial x}\right]^{p}\boldsymbol{a}\left(\boldsymbol{x}\right)=\frac{1}{\left(2\pi\right)^{d/2}}\int d\boldsymbol{x}e^{i\boldsymbol{k}\cdot\boldsymbol{x}}\left[D_{x}\left(\boldsymbol{k}\right)\right]^{p}\tilde{\boldsymbol{a}}\left(\boldsymbol{k}\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Finite difference derivatives
\end_layout

\begin_layout Standard
For calculating derivatives using finite differences, the following central
 differencing method is used, away from the boundaries: 
\begin_inset Formula 
\[
\nabla_{x}a\left(x_{i}\right)\rightarrow\frac{1}{2\Delta x}\left[a\left(x_{i+1}\right)-a\left(x_{i-1}\right)\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\nabla_{x}^{2}a\left(x_{i}\right)\rightarrow\frac{1}{\Delta x^{2}}\left[a\left(x_{i+1}\right)-2a\left(x_{i}\right)+a\left(x_{i-1}\right)\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This raises the question of how to calculate derivatives at the boundary,
 for example at the lower boundary 
\begin_inset Formula $x_{1}$
\end_inset

, where 
\begin_inset Formula $a\left(x_{0}\right)$
\end_inset

 is not known, and similarly at the upper boundary.
 The answer depends on the boundary type 
\begin_inset CommandInset citation
LatexCommand cite
key "crank1947practical"
literal "false"

\end_inset

, and is obtained by extending the boundary to additional points 
\begin_inset Formula $a\left(x_{0}\right)$
\end_inset

 and 
\begin_inset Formula $a\left(x_{N+1}\right)$
\end_inset

 that are assumed to extend the boundary condition:
\end_layout

\begin_layout Paragraph
Periodic:
\begin_inset space ~
\end_inset


\begin_inset Formula $a\left(x_{0}\right)=a\left(x_{N}\right)$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla_{x}a\left(x_{1}\right)\rightarrow\frac{1}{2\Delta x}\left[a\left(x_{2}\right)-a\left(x_{N}\right)\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\nabla_{x}^{2}a\left(x_{1}\right)\rightarrow\frac{1}{\Delta x^{2}}\left[a\left(x_{2}\right)-2a\left(x_{2}\right)+a\left(x_{N}\right)\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph
Dirichlet: 
\begin_inset Formula $\tilde{a}\left(x_{1}\right)$
\end_inset

 specified: 
\begin_inset space ~
\end_inset


\begin_inset Formula $a\left(x_{0}\right)=\tilde{a}\left(x_{1}\right)$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla_{x}a\left(x_{1}\right)\rightarrow\frac{1}{2\Delta x}\left[a\left(x_{2}\right)-\tilde{a}\left(x_{1}\right)\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\nabla_{x}^{2}a\left(x_{1}\right)\rightarrow\frac{1}{\Delta x^{2}}\left[a\left(x_{2}\right)-\tilde{a}\left(x_{1}\right)\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph
Robin/Neumann: 
\begin_inset Formula $\tilde{a}'\left(x_{1}\right)$
\end_inset

 specified: 
\begin_inset space ~
\end_inset


\begin_inset Formula $a\left(x_{0}\right)=a\left(x_{2}\right)-2\tilde{a}'\left(x_{1}\right)\Delta x$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla_{x}a\left(x_{1}\right)\rightarrow\tilde{a}'\left(x_{1}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\nabla_{x}^{2}a\left(x_{1}\right)\rightarrow\frac{2}{\Delta x^{2}}\left[a\left(x_{2}\right)-a\left(x_{1}\right)-\tilde{a}'\left(x_{1}\right)\Delta x\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In all cases the boundary value is evaluated as part of the derivative evaluatio
n, so it can be a nonlinear function of 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Solving an SDE 
\begin_inset CommandInset label
LatexCommand label
name "sec:Simulating-an-SDE"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes how to use the xSPDE numerical toolbox to solve an
 SDE to obtain and graph averages, spectra or probability distributions.
\end_layout

\begin_layout Section
Using xSPDE
\end_layout

\begin_layout Standard
Stochastic equations have very few analytic solutions, except in unusually
 simple cases.
 They generally require numerical solutions.
 A stochastic toolbox helps to streamline the job of writing and executing
 code.
 The xSPDE simulation program is straightforward to use, and provides many
 options.
 To run it, an Octave or Matlab environment is needed.
\end_layout

\begin_layout Standard
The current xSPDE distribution includes: 
\end_layout

\begin_layout Itemize
The toolbox: 
\begin_inset Formula $xspde.mltbx$
\end_inset

, or a folder: xSPDE.
 
\end_layout

\begin_layout Itemize
simulation (xSIM) and graphics (xGRAPH) functions.
 
\end_layout

\begin_layout Itemize
xAMPLES: examples that can also be used as templates 
\end_layout

\begin_layout Itemize
xDOC: should contain the current user guide 
\end_layout

\begin_layout Standard
xSPDE can be run interactively as a script, or as a function in batch mode,
 either at a local workstation or on a remote cluster.
 Data can be either plotted immediately, or saved then plotted later.
 To simulate a stochastic equation interactively, first check that the xSPDE
 toolbox is installed.
\end_layout

\begin_layout Standard

\series bold
If you have the toolbox file, 
\begin_inset Formula $xspde.mltbx$
\end_inset

, just open it and click on 
\begin_inset Formula $install$
\end_inset

.

\series default
 Otherwise the Octave/Matlab path must point to the xSPDE folder and subfolders.
 If you have the folders, but not the toolbox, proceed as follows: 
\end_layout

\begin_layout Itemize
Click on the Octave/Matlab HOME tab (top left), then Set Path 
\end_layout

\begin_layout Itemize
Click on Add with Subfolders 
\end_layout

\begin_layout Itemize
Find the xSPDE folder in the drop-down menu, and select it 
\end_layout

\begin_layout Itemize
Click on close to save the path.
 
\end_layout

\begin_layout Standard
Type 
\begin_inset Formula $clear$
\end_inset

 to clear old data, and enter the xSPDE inputs and functions into the command
 window.
 For the simplest cases, one can do this by cutting and pasting from an
 electronic file of this manual.
 You may have to change quotation marks to Matlab quotes, (') or (").
\end_layout

\begin_layout Standard
For more advanced cases, it is best to create a function that calls xSPDE.
 The Octave/Matlab built-in editor is also useful.
 There are many examples listed in this manual, and there are more in the
 xAMPLES folder.
 Any of these can be used as templates for building your own simulation.
\end_layout

\begin_layout Subsection
Wiener process
\end_layout

\begin_layout Standard
To solve for a single trajectory of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Wiener_process"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with xSPDE, just type in: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $p.deriv$
\end_inset

 defines the time derivative 
\begin_inset Formula $\dot{a}$
\end_inset

 in the input parameter structure 
\emph on
p, 
\emph default
while 
\begin_inset Formula $w$
\end_inset

 is a delta-correlated Gaussian noise generated internally.
 There are no other parameters, so default values are used.
 This produces the graph shown in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-simplest-case: Wiener"
plural "false"
caps "false"
noprefix "false"

\end_inset

), which gives a single trajectory.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Wiener_1.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-simplest-case: Wiener"

\end_inset


\emph on
The simplest example: a random walk.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
At the end of the run, xSPDE reports the RMS errors.
 There are discretization, sampling and comparison errors, all normalized
 by the maximum observable value, unless compared to a result of zero.
 In the present simulation, the discretization or step error is about 
\begin_inset Formula $10^{-16}$
\end_inset

, due to round-off.
 This is just a single trajectory, but more can be added.
\end_layout

\begin_layout Subsection
General derivatives
\end_layout

\begin_layout Standard
All important xSPDE procedures use functions.
 Functions can be specified inline, which is the simplest, or externally.
 The last argument of any xSPDE function is the parameter structure.
 An example already introduced is the derivative function, labeled 
\begin_inset Formula $p.deriv$
\end_inset

.
\end_layout

\begin_layout Standard
For example, consider the stochastic differential equation, 
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}=-ga+w.
\end{equation}

\end_inset

The corresponding derivative code definition is: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) - p.G*a + w;
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
This code defines the function handle 
\begin_inset Formula $p.deriv$
\end_inset

, which gives the derivative function, 
\begin_inset Formula $da/dt$
\end_inset

.
 In this example, it simply returns the derivative, in terms of the variable
 
\begin_inset Formula $a$
\end_inset

, loss parameter 
\begin_inset Formula $p.G$
\end_inset

, and stochastic noise term 
\begin_inset Formula $w.$
\end_inset

 This user specified inline function is known internally by the function
 handle 
\begin_inset Formula $p.deriv$
\end_inset

.
\end_layout

\begin_layout Standard
Inside a complete xSPDE simulation input with a parameter values, it would
 look like: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.G = 0.25;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) - p.G*a + w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
External function handles can also be used.
 They are useful for complex functions with more internal logic.
\end_layout

\begin_layout Standard
A typical script first defines parameters and function specifications, in
 a structure, then runs the simulation code with the parameter structure
 as an input, as follows: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.[label1] = [parameter1];
\end_layout

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\begin_layout Plain Layout

\family typewriter
p.[label2] = [parameter2];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) [derivative];
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Note the following points to remember: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathtt{p.}[label1]=[parameter1]$
\end_inset

 defines a parameter in the structure 
\begin_inset Formula $p$
\end_inset

.
 
\end_layout

\begin_layout Itemize
There are many possible inputs, which all have default values.
 
\end_layout

\begin_layout Itemize
You don't have to save the data if you want an immediate plot.
 
\end_layout

\begin_layout Itemize
The notation 
\begin_inset Formula $\mathtt{p.deriv=}\mathtt{@(a,w,p)}\,\,[derivative]$
\end_inset

 defines a function, 
\begin_inset Formula $da/dt$
\end_inset

.
 
\end_layout

\begin_layout Itemize
In this example, 
\begin_inset Formula $\mathtt{a}$
\end_inset

 is the stochastic variable, 
\begin_inset Formula $\mathtt{w}$
\end_inset

 the random noise, 
\begin_inset Formula $p$
\end_inset

 a structure.
 
\end_layout

\begin_layout Itemize
Other labels can be used instead of 
\emph on
(a,w,p)
\emph default
 if preferred.
 
\end_layout

\begin_layout Section
Input parameters
\begin_inset CommandInset label
LatexCommand label
name "sec:Input-parameters"

\end_inset


\end_layout

\begin_layout Standard
All xSPDE simulations use a structure for input data.
 Most functions also require a parameter structure, combining the data input
 with additional internal parameters.
 Any naming convention will do for either structure, as long as you are
 consistent.
\end_layout

\begin_layout Standard
User-defined parameters can be added freely.
 To ensure that there is no clash with internal variables, it is best if
 user defined parameters start with a capital letter.
\end_layout

\begin_layout Standard
The xSPDE inputs have default values, which are used if the input values
 are omitted.
 If you only need the first element of a vector or array, just input the
 value required.
 Parameters can be output with the verbose switch, 
\family typewriter
p.verbose
\family default
.
 This has four levels of output: 
\begin_inset Formula $-1$
\end_inset

,
\begin_inset Formula $0$
\end_inset

, 
\begin_inset Formula $1$
\end_inset

 or 
\begin_inset Formula $2$
\end_inset

, with 
\family typewriter
p.verbose=0
\family default
 as default, giving final error reports.
 To get more progress details and individual errors, use 
\family typewriter
p.verbose=1.

\family default
 To eliminate almost everything, use 
\family typewriter
p.verbose=-1.

\family default
 For maximum information, including all the internal parameter values, use;
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.verbose = 2;
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
While this level of detail is not usually needed, it can be useful to print
 out all the internal parameters and default values to understand how the
 program operates.
\end_layout

\begin_layout Subsection
Simulation parameters table
\begin_inset CommandInset label
LatexCommand label
name "subsec:Simulation-parameters-1"

\end_inset


\end_layout

\begin_layout Standard
The most common xSPDE input parameters used to define the equations in a
 simulation, together with their default values are: 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
fields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of stochastic 
\emph on
fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
noises
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of 
\emph on
noises
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
name
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
' ' 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simulation 
\emph on
name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
deriv
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The stochastic 
\emph on
deriv
\emph default
ative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
initial
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function to 
\emph on
initial
\emph default
ize variables
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
method
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integration 
\emph on
method
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ensembles
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1,1,1] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stochastic 
\emph on
ensemble
\emph default
 sizes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ranges
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[10] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time and space 
\emph on
ranges
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
points
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[51] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output lattice 
\emph on
points
\emph default
 in [t,x,y,z,..]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
steps
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $[1]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Intermediate 
\emph on
steps
\emph default
 per time point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
observe{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
a
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Observ
\emph default
able function for averages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
compare{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Compar
\emph default
ison function for averages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
binranges{n}{m}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[0] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Bin
\emph default
ning 
\emph on
ranges
\emph default
 for probabilities
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A more detailed explanation of these parameters is found below, and a complete
 table is given in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulation-parameters"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Graphics parameters
\end_layout

\begin_layout Standard
The generated average data can be graphed using any graphics editors, or
 else using the internal xGRAPH function defined for this purpose.
 An xSPDE simulation can return many different averages.
 These are defined in a cell array with indices in braces.
 The index is used to address the output data produced.
\end_layout

\begin_layout Standard
For each index, one can define parameters that define the quantity stored,
 together with corresponding graphics outputs.
 Some commonly used options are:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
olabels{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'a'
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable label
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transverse{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $0$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transverse slices in time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transforms{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set to 1 for Fourier transforms in time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
scatters{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $0$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set to s for s scatter plots in the observable
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_layout Standard
The full definition of the options is given in the user guide in sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xSIM-parameters"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xGRAPH-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

, although most will be clear from examples.
\end_layout

\begin_layout Section
Fields and noises
\end_layout

\begin_layout Standard
Stochastic variables in an SDE are 
\emph on
fields
\emph default
, stored in a real or complex matrix, 
\begin_inset Formula $a(i,j)$
\end_inset

.
 Here, 
\begin_inset Formula $i$
\end_inset

 is an internal field index, while 
\begin_inset Formula $e$
\end_inset

 is the ensemble index.
 
\end_layout

\begin_layout Description
fields gives the range of the first internal index.
 This is the total number of SDE variables or fields.
 It has a default value of 
\begin_inset Formula $fields=1$
\end_inset

.
 
\end_layout

\begin_layout Description
ensembles allows multiple trajectories to be integrated.
 This has up to three components.
 The first component, 
\emph on
ensembles(1), 
\emph default
gives a vector of local trajectories, so 
\begin_inset Formula $e=1,\ldots$
\end_inset


\emph on
ensembles(1)
\emph default
.
 The two other ensemble values specify serial or parallel processing, as
 explained below.
 
\end_layout

\begin_layout Description
noises are noise dimensions, similar to 
\emph on
fields
\emph default
, and used as 
\begin_inset Formula $w(i,j),$
\end_inset

 where the first noise index has 
\begin_inset Formula $noises$
\end_inset

 components.
 The default value is 
\begin_inset Formula $noises=fields$
\end_inset

.
 
\end_layout

\begin_layout Standard
In the example above, we could add the fields, dimensions, ensembles and
 noises:
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.fields = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = 1;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As these are all default values, this is superfluous in a simple case.
 The full definition of ensembles as a vector is given below, and in some
 cases uses the parallel toolbox in Matlab.
\end_layout

\begin_layout Subsection
Initial values, points and ranges
\end_layout

\begin_layout Standard
Initial values are required to define any differential equation, and in
 a numerical calculation one must also have a defined lattice.
 
\end_layout

\begin_layout Description
initial The initial value is defined by a function
\family typewriter
 
\begin_inset Formula $p.initial$
\end_inset


\family default
.
 This must return either an initial vector of size 
\emph on
fields
\emph default
, or else a random array of size 
\begin_inset Formula $fields\times ensembles(1)$
\end_inset

.
 The default function simply returns zero.
 
\end_layout

\begin_layout Description
inrandoms are initial random number dimensions, similar to 
\emph on
fields
\emph default
, and used as 
\begin_inset Formula $v(i,j),$
\end_inset

 where the first random dimension has 
\begin_inset Formula $randoms$
\end_inset

 components.
 The default value is 
\begin_inset Formula $randoms=noises$
\end_inset

.
 Specifies the first argument of the function
\family typewriter
 
\begin_inset Formula $p.initial(v,p)$
\end_inset


\family default
 as a real Gaussian noise vector 
\begin_inset Formula $v$
\end_inset

 with unit variance.
 The same noise is used when error-checking, so that changes are from the
 step-size, not from random fluctuations.
 
\end_layout

\begin_layout Description
points The number of integration points.
 The default setting is currently 
\begin_inset Formula $51$
\end_inset

.
 
\end_layout

\begin_layout Description
steps The number of integration steps used for each output time-step.
 The default is 
\begin_inset Formula $1$
\end_inset

.
 
\end_layout

\begin_layout Description
ranges The total integration range in each dimension, the first element
 being the maximum integration time 
\begin_inset Formula $T$
\end_inset

.
 The default setting is currently 
\begin_inset Formula $10$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Observables
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Description
observe is a cell array of functions of stochastic fields, each defining
 an average.
 xSPDE expects a (named or anonymous) function that takes two parameters,
 namely the field matrix 
\begin_inset Formula $a$
\end_inset

 and the input structure 
\begin_inset Formula $p$
\end_inset

.
 The function must return a real or complex matrix of dimension 
\begin_inset Formula $(\ell,ensembles(1))$
\end_inset

, where 
\begin_inset Formula $\ell$
\end_inset

 indexes over a vector observable.
 xSPDE then averages over the second index, to calculate the observable.
\begin_inset Newline newline
\end_inset

 To plot the variance, for example: 
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) (a(1,:)-mean(a,2)).^2;
\end_layout

\end_inset

 
\end_layout

\begin_layout Description
rawdata By setting 
\emph on
p.rawdata=1
\emph default
 (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xSIM-parameters"
plural "false"
caps "false"
noprefix "false"

\end_inset

), one can also store every trajectory including both fine and coarse time-step
 values, and but this is very memory-intensive for large simulations.
 
\end_layout

\begin_layout Description
olabels is cell array of graph labels associated with each average, although
 one can also define a function of the averages to be graphed with this
 label.
 
\end_layout

\begin_layout Standard
Observables are computed as a two-dimensional packed array, then unpacked
 for storage, giving an array of dimension 
\begin_inset Formula $(d1,dspacetime,ensembles(1))$
\end_inset

.
 Here 
\begin_inset Formula $d1$
\end_inset

 is the local observable dimension, so 
\begin_inset Formula $d1=1$
\end_inset

 for a scalar observable.
 The space-time dimension is 
\begin_inset Formula $dspacetime=1$
\end_inset

 for an SDE, otherwise a vector for a SPDE, and 
\begin_inset Formula $ensembles(1)$
\end_inset

 is the size of the ensemble of trajectories computed in each processor.
 Once data is averaged internally over 
\begin_inset Formula $ensembles(1)$
\end_inset

, further transforms of the resulting averages are available.
\end_layout

\begin_layout Subsection
Using the dot
\end_layout

\begin_layout Standard
All equations entered in xSPDE utilize the Matlab syntax.
 This is designed to handle scientific or mathematical matrix and array-based
 formulae.
 It has features to simplify matrix or array equations which often require
 a 'dot' or a 'colon'.
 
\end_layout

\begin_layout Itemize
Stochastic variables in xSPDE are matrices or arrays, where the last index
 is used to treat parallel stochastic trajectories, for greater efficiency.
 This requires use of the 'dot' notation to perform multiplication inside
 equations.
 
\end_layout

\begin_layout Itemize
To multiply vectors, matrices or arrays element-wise, like 
\begin_inset Formula $a_{ij}=b_{ij}c_{ij}$
\end_inset

, the notation 
\begin_inset Formula $a=b.*c$
\end_inset

 indicates that all the elements are multiplied.
 This is used to speed up calculations in parallel.
 
\end_layout

\begin_layout Itemize
An equation in xSPDE can apply to many stochastic trajectories in parallel.
 Using the dot shortens the equation, and it also means that a fast parallel
 arithmetic will be used.
 The same principle holds for larger arrays with spatial lattices, treated
 in in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SPDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 
\end_layout

\begin_layout Itemize
Broadcasting occurs if one or more dimensions has a unit size.
 For example, arrays of size (1,100) and (6,1) can be added or multiplied
 to give a (6,100) matrix.
 
\end_layout

\begin_layout Itemize
A formula for a stochastic field may require you to address the first index
 - which is the field component - and treat all the other elements in parallel.
 To do this in a compact way, one may use the notation 
\begin_inset Formula $a(1,:)$
\end_inset

, which indicates that all the subsequent index elements are being addressed
 as well.
 
\end_layout

\begin_layout Itemize
For an an SPDE this can 
\begin_inset Quotes eld
\end_inset

flatten
\begin_inset Quotes erd
\end_inset

 a larger array into a matrix.
 This requires care to make sure all the terms have the same dimensionality
 as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SPDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 xSPDE includes routines to help this issue.
 
\end_layout

\begin_layout Standard
In summary, whenever a formula combines multiplication operations over spatial
 lattices or ensembles, 
\series bold
USE THE DOT
\series default
.
\end_layout

\begin_layout Section
Advanced random walk
\end_layout

\begin_layout Standard
We now return to the random walk, but with some more advanced features:
 
\begin_inset Formula 
\begin{equation}
\dot{a}=w(t)\,,
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This is integrated numerically and graphed with 
\begin_inset Formula $N=points(1)$
\end_inset

 points.
 The first point stored is the initial value, so there are 
\begin_inset Formula $N-1$
\end_inset

 integration steps, of length 
\begin_inset Formula $dt=ranges(1)/(N-1)$
\end_inset

.
 Numerical graphs have discrete steps, and more detail is obtained if more
 time steps are used.
 The default value is 
\begin_inset Formula $N=51$
\end_inset

, which is predefined in the 
\begin_inset Formula $xpreferences$
\end_inset

 file.
 This is adjustable by the user.
 It can also be changed for a simulation, by inputting a new value of 
\begin_inset Formula $points$
\end_inset

.
\end_layout

\begin_layout Subsection
Simple xSPDE example
\end_layout

\begin_layout Standard
Unless you type 
\emph on
clear
\emph default
 first, any changes to the input structure are additive; so in the exercises
 you should get the combination of all the previous structure inputs as
 well as your new input.
 
\end_layout

\begin_layout Itemize

\series bold
Run the complete xSPDE script of Example 1 in Matlab.

\series default
 
\end_layout

\begin_layout Standard
It is simple to cut and paste from an electronic file to the command window.
 Be careful; pasting can cause subtle changes that may require correction.
 Some generated characters may be invalid input characters, and these will
 need retyping if this occurs.
\end_layout

\begin_layout Standard
You should get the output in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-simplest-case: Wiener"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Itemize

\series bold
What do you see if you average over 
\begin_inset Formula $10000$
\end_inset

 trajectories ?
\series default
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.ensembles = 10000;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
What do you see if you plot the mean square distance? Note that variances
 should increase linearly with 
\begin_inset Formula $t$
\end_inset

.

\series default
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,p) a.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
What if you add a force that takes the particle back to the origin?
\series default
 
\begin_inset Formula 
\begin{equation}
\dot{a}=-a+w(t)\,,\label{eq: damped_path_with_noise}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) -a+w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The corresponding Fokker-Planck equation from Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:FPE"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is: 
\begin_inset Formula 
\begin{equation}
\frac{\partial P\left(a\right)}{\partial t}=\left[\frac{\partial}{\partial a}+\frac{1}{2}\frac{\partial^{2}}{\partial a^{2}}\right]P\left(a\right).
\end{equation}

\end_inset

It is easy to verify that inserting this dynamical equation into Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:moment_equn"
plural "false"
caps "false"
noprefix "false"

\end_inset

 gives the result: 
\begin_inset Formula 
\begin{equation}
\frac{\partial}{\partial t}\left\langle a^{2}\right\rangle =1-2\left\langle a^{2}\right\rangle 
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Solve for 
\begin_inset Formula $\left\langle a^{2}\left(t\right)\right\rangle $
\end_inset

 and use xSPDE to compare the numerical and analytic solutions.
 The current time is accessible as the parameter 
\begin_inset Formula $p.t$
\end_inset

.
 Can you explain the graph differences? 
\end_layout

\begin_layout Section
Probability binning
\end_layout

\begin_layout Standard
It is possible to graph probability densities of real observables instead
 of averages, if 
\begin_inset Formula $p.ensembles$
\end_inset

 is large.
 This is achieved by inputting the observable number and binning range:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
p.binranges\{n\}=\{oa:ostep:ob\};
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If present, this returns probability density of the 
\begin_inset Formula $n$
\end_inset

-th observable 
\begin_inset Formula $o\{n\}$
\end_inset

, through binning into ranges of width 
\begin_inset Formula $ostep$
\end_inset

 around the centers of each bin, starting at 
\begin_inset Formula $\text{\emph{oa}}$
\end_inset

, and ending at 
\begin_inset Formula $ob$
\end_inset

.
 The simulation returns a result of 
\begin_inset Formula $1/ostep$
\end_inset

 in the 
\begin_inset Formula $j-th$
\end_inset

 bin if the trajectory is inside the bin, so that 
\begin_inset Formula $o(j)-ostep/2<o<o(j)+ostep/2$
\end_inset

, and zero otherwise.
 This gives a probability density on output, plotted against time.
 Note that on graphing, an extra dimension is added for the variable 
\begin_inset Formula $o$
\end_inset

.
 The probability density at 
\shape italic
ntimes
\shape default
 equally spaced simulation times can be plotted with 
\shape italic
p.transverse{n}=ntimes
\shape default
.
\end_layout

\begin_layout Standard
The probability can be plotted for any 
\emph on
observe
\emph default
 function of the stochastic variable.
\end_layout

\begin_layout Subsection
Multivariate probabilities
\end_layout

\begin_layout Standard
The probability density is multivariate for vector observables.
 This is possible because the binning ranges are stored in a cell array,
 which may contain several bin vectors.
 If the observable 
\begin_inset Formula $o\{n\}$
\end_inset

 is two-dimensional, then one can input:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
p.binranges\{n\}=\{oa(1):ostep(1):ob(1),oa(2):ostep(2):ob(2)\};
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
On graphing, 
\emph on
two
\emph default
 extra dimensions are added for the variable 
\begin_inset Formula $o$
\end_inset

 in this case.
 The graphics program 
\emph on
xGRAPH
\emph default
 will attempt to graph them, but it is limited by graphical visualization
 constraints.
 In general, an arbitrary observable dimension is possible, but this is
 also limited by the sampling and memory, since the number of samples per
 bin will decrease rapidly with dimensionality.
\end_layout

\begin_layout Standard
The graphics program extracts slices and windows of probabilities if required.
 To plot the probabilities of two observables, one for a range of 
\begin_inset Formula $-5:5$
\end_inset

 and the other for 0:25 for a range of 0:1, add the following inputs before
 the 
\emph on
xsim
\emph default
 or 
\emph on
xspde
\emph default
 command: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
p.
\family typewriter
binranges{1} = {-5:0.25:5};
\end_layout

\begin_layout Plain Layout
p.
\family typewriter
binranges{2} = {0:0.5:25};
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
In the case of a two-dimensional probability density, plotted against time,
 there are a total of four graphics dimensions.
 That is, one dimension for time, two for the observable dimensions, and
 one for the probability itself.
 One can also plot how the probability density changes in space for the
 case of a stochastic partial differential equation, as described in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SPDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Section
Auxiliary fields and noises
\end_layout

\begin_layout Standard
In some problems, it is useful to access the noise terms, or functions of
 the noises and their correlations with the fields at the same time.
 This is handled in xSPDE with auxiliary fields or 
\emph on
auxfields.

\emph default
 These are fields that are functions of noise terms and the integrated fields.
 The number of these is defined in the input structures using the parameter
 
\emph on
p.auxfields,
\emph default
 which is arbitrary.
\end_layout

\begin_layout Standard
Auxiliary fields are calculated using a function 
\emph on
p.define,
\emph default
 which is similar to 
\emph on
p.deriv
\emph default
, except that it returns the current value of the auxiliary field, not the
 derivative.
 These fields are defined as the 
\emph on
average
\emph default
 over the previous step in time of the auxiliary function.
 This is essential in calculating spectra, in order to eliminate systematic
 errors in Fourier transforms.
\end_layout

\begin_layout Standard
More details on this are given in Section (
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Time-domain-spectra"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 To access the auxiliary fields, one can compute any observable average
 using a 
\emph on
p.observe
\emph default
 function as usual, or else store the 
\emph on
raw 
\emph default
trajectories including auxiliary fields by setting 
\emph on
p.rawdata=1
\emph default
.
 In either case, the auxiliary fields are appended to the integrated fields
 by adding extra rows to the field matrix.
 The number of variables or matrix rows for inputs to 
\emph on
observe
\emph default
 or 
\emph on
rawdata
\emph default
 is 
\emph on
fields+auxfields.
 
\end_layout

\begin_layout Subsection
Outputting the noise
\end_layout

\begin_layout Standard
As a simple example, suppose one wishes to calculate the noise terms and
 compare them with the field trajectories in a simple Wiener process.
 The following code can be used:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
clear
\end_layout

\begin_layout Plain Layout

\family typewriter
p.auxfields = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) w;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.define = @(a,w,p) w;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'a, w'};
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The default observe function is used.
 This plots both rows of the field array, including the auxiliary field
 which is defined as the noise term and plotted as a dashed line.
 There is no ensemble averaging, and hence no ensemble error-bars.
 This is simply because because no ensembles were specified in the input
 parameters.
 Similarly, there are no time-step error-bars for this observable, because
 the fine and coarse noises are equal to each other after time averaging.
\end_layout

\begin_layout Standard
The result that is plotted is therefore the coarse noise, whose correlation
 time equals the time step.
 This is plotted below in Fig ( 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-simplest-case: Wiener-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

), which plots the same Wiener process as before, except adding the driving
 noise term as well.
 The standard deviation of the noise in a single step here is 
\begin_inset Formula $\sqrt{1/dt}$
\end_inset

, where 
\begin_inset Formula $1/dt=50/10=5$
\end_inset

 for the default range of 
\begin_inset Formula $10$
\end_inset

 and default time points of 
\begin_inset Formula $51.$
\end_inset

 Note that noise terms do not converge at small time-steps for delta-correlated
 noise, even when the integrated stochastic process does converge.
 This is why it is necessary to choose to plot one or the other, or else
 to time-average to obtain a converged result.
\end_layout

\begin_layout Standard
If multiple steps are used, the noise during the last step prior to the
 time-point is plotted.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Wiener_2.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-simplest-case: Wiener-2"

\end_inset


\emph on
A single trajectory of a random walk, with the noise terms 
\begin_inset Formula $w$
\end_inset

 graphed using dashed lines, and the integrated variable 
\begin_inset Formula $a$
\end_inset

 plotted as the solid line.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Time-domain spectra
\begin_inset CommandInset label
LatexCommand label
name "sec:Time-domain-spectra"

\end_inset


\end_layout

\begin_layout Standard
To get an output from a temporally Fourier transformed field, set 
\begin_inset Formula $transforms\{n\}=1$
\end_inset

 for the observable (
\begin_inset Formula $n$
\end_inset

) you need to calculate in transform space.
 This parameter is a cell array.
 It can have a different value for every observable and for every dimension
 in space-time, if you have space dimensions as well.
\end_layout

\begin_layout Standard
To obtain spectra from Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:field-average"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with greater accuracy, all fields are must be averaged internally.
 The code will use trapezoidal integration in time over the integration
 interval, to give the average midpoint value.
 This employs the same interval for fine and coarse integration, to allow
 comparisons for error-checking.
 After this, the resulting step-averaged fields are then Fourier transformed.
\end_layout

\begin_layout Standard
In the simplest case of just one internal step, with no error-checking,
 this means that the field used to calculate a spectrum is: 
\begin_inset Formula 
\begin{equation}
\begin{split}\bar{a}_{j}=\left({a}_{j}+{a}_{j+1}\right)/2,\end{split}
\end{equation}

\end_inset

which corresponds to the time in the spectral Fourier transform of: 
\begin_inset Formula 
\begin{equation}
\begin{split}\bar{t}_{j}=\left({t}_{j}+{t}_{j+1}\right)/2.\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that if any temporal Fourier transform is specified, all the field
 variables are time-averaged over a step.
 This is not strictly necessary, but it means that there is a reduced code
 complexity for cases where there is a Fourier transform for some but not
 all variables.
 As described above, the auxiliary variables are always time-averaged to
 allow error-checking, so there is no change for these.
\end_layout

\begin_layout Subsection
Error-checking
\end_layout

\begin_layout Standard
For an error-checking calculation with two internal 
\emph on
steps
\emph default
, there are three successive valuations: 
\begin_inset Formula $a_{j}$
\end_inset

, 
\begin_inset Formula $a_{j+1/2}$
\end_inset

, 
\begin_inset Formula $a_{j+1}$
\end_inset

.
 In this case, for spectral calculations one averages according to: 
\begin_inset Formula 
\begin{equation}
\begin{split}\bar{a}_{j}=\left(a_{j}+2a_{j+1/2}+a_{j+1}\right)/4.\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In addition, one must define the noise terms, both for error-checking and
 for output, since spectral calculations in quantum input-output theory
 include noise terms as well as fields.
 The noise term used to calculate a spectrum involving 
\begin_inset Formula $\bar{a}_{j}$
\end_inset

 is 
\begin_inset Formula $w_{j}$
\end_inset

.
 A coarse noise term is set equal to the average of two successive fine
 noise terms:
\begin_inset Formula 
\begin{equation}
\begin{split}\bar{w}_{1}=\frac{1}{2}\left(w_{1}+w_{1/2}\right).\end{split}
\end{equation}

\end_inset

The time integral is carried out numerically as a sum which has 
\begin_inset Formula $N=points(1)$
\end_inset

 time points of interval 
\begin_inset Formula $dt$
\end_inset

.
 In xSPDE, 
\begin_inset Formula $dt=T/(N-1)$
\end_inset

, where 
\begin_inset Formula $T=ranges(1)$
\end_inset

.
 The effective integration time for the Fourier transform time integrals
 is 
\begin_inset Formula 
\begin{equation}
T_{eff}=Ndt=2\pi/d\omega
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
When there are larger numbers of steps from using the internal 
\emph on
steps
\emph default
 parameter, there are more points to Fourier transform.
 These additional frequencies are computed while carrying out the Fourier
 transform, but only 
\begin_inset Formula $N$
\end_inset

 low frequency points are saved.
 The unused high frequency results are not stored or plotted, to conserve
 memory.
\end_layout

\begin_layout Section
Examples
\end_layout

\begin_layout Subsection
Complex damped spectrum
\end_layout

\begin_layout Standard
Consider the spectrum of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq: damped_path_with_noise"
plural "false"
caps "false"
noprefix "false"

\end_inset

, with a complex noise, 
\begin_inset Formula 
\begin{equation}
\left\langle w\left(t\right)w^{*}\left(t'\right)\right\rangle =\delta\left(t-t'\right),
\end{equation}

\end_inset

a random initial equation near the equilibrium value, and a range of 
\begin_inset Formula $t=100$
\end_inset

, with 
\begin_inset Formula $640$
\end_inset

 points.
 Here there are two real noises.
\end_layout

\begin_layout Standard
The input parameters are given below.
 There are parallel operations here, for ensemble averaging, so we 
\series bold
USE THE DOT
\series default
.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
clear
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 640;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = 100;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = 10000;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) (v(1,:)+1i*v(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) -a + w(1,:)+1i*w(2,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,p) a.*conj(a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.transforms = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a(
\backslash
omega)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Note that 
\emph on
p.
\family typewriter
transforms = 1
\family default
\emph default
 tells xSPDE to Fourier transform the field over the time coordinate before
 averaging, to give a spectrum.
 Both 
\emph on
observe
\emph default
 and 
\emph on
transforms
\emph default
 could be cell arrays, but the this is not needed with a single observable.
 The first argument 
\begin_inset Formula $v$
\end_inset

 of the 
\emph on
initial
\emph default
 function is a random field, used to initialize the stochastic variable.
\end_layout

\begin_layout Standard
To define as many observables as you like, use a Matlab cell array; 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.observe{1} = ..;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = ..;
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
To learn more, try the following: 
\end_layout

\begin_layout Itemize

\series bold
Simulate over a range of 
\begin_inset Formula $t=200$
\end_inset

.
 What changes do you see? Why?
\series default
 
\end_layout

\begin_layout Itemize

\series bold
Change the equation to the laser noise equations introduced in the next
 section (Laser quantum noise).
 Why is the spectrum much narrower?
\series default
 
\end_layout

\begin_layout Subsection
Laser amplification noise
\end_layout

\begin_layout Standard
Laser quantum noise is commonly modeled 
\begin_inset CommandInset citation
LatexCommand cite
key "Louisell1973Quantum,Carmichael2002Statistical,gardiner2004quantum"
literal "false"

\end_inset

 using SDEs in a normally ordered quantum phase-space representation.
 Consider a model for the quantum noise of a single mode laser as it turns
 on, near threshold:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dot{a}=ga+bw(t)
\end{equation}

\end_inset

where the noise is complex, 
\begin_inset Formula $w=\left(w_{1}+iw_{2}\right)$
\end_inset

, so that: 
\begin_inset Formula 
\begin{equation}
\left\langle w(t)w^{*}(t')\right\rangle =2\delta\left(t-t'\right)\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here the coefficient 
\begin_inset Formula $b$
\end_inset

 describes the quantum noise of the laser, and is inversely proportional
 to the equilibrium photon number.
\end_layout

\begin_layout Standard
Try the following, noting that you should type 
\emph on
clear 
\emph default
first when starting new simulations.
 
\end_layout

\begin_layout Itemize

\series bold
Solve for the case of 
\begin_inset Formula $g=0.1$
\end_inset

, 
\begin_inset Formula $b=0.01$
\end_inset


\series default
 
\end_layout

\begin_layout Standard
Most lasers have more than 
\begin_inset Formula $100$
\end_inset

 photons and hence much less noise than this.
\end_layout

\begin_layout Standard
For this exercise, small error-bars will display on the graph.
 These are calculated from the difference between using steps of size 
\begin_inset Formula $dt$
\end_inset

 and steps of size 
\begin_inset Formula $dt/2$
\end_inset

.
 They only appear if greater than a minimum relative size, typically 
\begin_inset Formula $1\%$
\end_inset

 of the graph size, which can be set by the user.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
clear
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,p) abs(a)^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) a + 0.01*(w(1)+1i*w(2));
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Saturated laser noise
\end_layout

\begin_layout Standard
Consider the case where the laser saturates to a steady state:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dot{a}=\left(1-\left|a\right|^{2}\right)a+bw(t)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
To learn how to use the function inputs, try the following: 
\end_layout

\begin_layout Itemize

\series bold
Solve for the saturated laser case
\series default
 
\end_layout

\begin_layout Standard
You should get the output graph in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-laser"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) (1-abs(a)^2)*a+0.01*(w(1)+1i*w(2));
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Laser.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-laser"

\end_inset


\emph on
Simulation of the stochastic equation describing a laser turning on.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Financial calculus
\end_layout

\begin_layout Standard
A well-known Ito-type stochastic equation is called the Black-Scholes equation
 
\begin_inset CommandInset citation
LatexCommand cite
key "black1976pricing"
literal "false"

\end_inset

, used to price financial options.
 It describes the fluctuations in a stock or commodity value: 
\begin_inset Formula 
\begin{equation}
da=\mu a\,dt+a\sigma\,dw,
\end{equation}

\end_inset

where 
\begin_inset Formula $\left\langle dw^{2}\right\rangle =dt$
\end_inset

.
 As the noise is multiplicative, the equation is different in Ito and Stratonovi
ch calculus.
 The corresponding Stratonovich equation, as used in xSPDE for the standard
 default integration routine is: 
\begin_inset Formula 
\begin{equation}
\dot{a}=\left(\mu-\sigma^{2}/2\right)a+a\sigma w(t).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
An interactive xSPDE script in Matlab is given below with an output graph
 in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-Black-Scholes"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 This is for a startup with a volatile stock having 
\begin_inset Formula $\mu=0.1,\,\sigma=1$
\end_inset

.
 The spiky behavior is typical of multiplicative noise, and also of the
 more risky stocks in the small capitalization portions of the stock market.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
clear
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) -0.4*a+a.*w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Black-Scholes.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-Black-Scholes"

\end_inset


\emph on
Simulation of the Black-Scholes equation describing stock prices.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $p.initial$
\end_inset

 describes the initialization function.
 The first argument of 
\begin_inset Formula $@(v,p)$
\end_inset

 is 
\begin_inset Formula $v$
\end_inset

, an initial random variable with unit variance.
 
\emph on
The error-bars are estimates of step-size error
\emph default
.
 Errors can be reduced by using more time-steps.
\end_layout

\begin_layout Standard
To learn more, try the following: 
\end_layout

\begin_layout Itemize

\series bold
Solve for a more mature stock having 
\begin_inset Formula $\mu=0.1,\,\sigma=0.1$
\end_inset

.

\series default
 
\end_layout

\begin_layout Subsection
Nonlinear quantum simulation
\end_layout

\begin_layout Standard
This example involves a full nonlinear quantum phase-space simulation using
 the positive-P representation described in Sec (
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Quantum-phase-space-equations"
plural "false"
caps "false"
noprefix "false"

\end_inset

), in which the two variables are only conjugate in the mean.
 This allows quantum superpositions of coherent states to be represented,
 or in fact any state, including squeezed or entangled states in more general
 cases.
\end_layout

\begin_layout Standard
A simple example is the nonlinear driven quantum subharmonic generator -
 for example, an opto-mechanical, superconducting or nonlinear optical medium
 in a driven cavity 
\begin_inset CommandInset citation
LatexCommand cite
key "Drummond1981Non-equilibrium,Sun2019Schrodinger,sun2019discrete,Lugiato1988Bistability"
literal "false"

\end_inset

.
 This is derived from the Hamiltonian for a resonant, coupled two-mode nonlinear
 interferometer, with 
\begin_inset Formula $\hat{a}_{2}$
\end_inset

 driven externally at twice the frequency of 
\begin_inset Formula $\hat{a}_{1}$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\hat{H}=i\hbar\left[\frac{\kappa}{2}\hat{a}_{2}\hat{a}_{1}^{\dagger2}+\mathcal{E}_{2}\hat{a}_{2}^{\dagger}-h.c.\right]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
After including losses in both modes in the positive P-representation, assuming
 zero temperature reservoirs, and adiabatically eliminating 
\begin_inset Formula $\alpha_{2}$
\end_inset

 with 
\begin_inset Formula $\gamma_{2}\gg\gamma_{1}$
\end_inset

, one has the following Ito equation: 
\begin_inset Formula 
\begin{align}
\frac{d\alpha_{1}}{dt} & =-\gamma_{1}\alpha_{1}+\alpha_{1}^{\dagger}\frac{\kappa\epsilon_{2}}{\gamma_{2}}\left[1-\frac{\kappa}{2\epsilon_{2}}\alpha_{1}^{2}\right]+\sqrt{\frac{\kappa\epsilon_{2}}{\gamma_{2}}-\frac{\kappa^{2}}{2\gamma_{2}}\alpha_{1}^{2}}w_{1}\left(t\right)\nonumber \\
\frac{d\alpha_{1}^{\dagger}}{dt} & =-\gamma_{1}\alpha_{1}^{\dagger}+\alpha_{1}\frac{\kappa\epsilon_{2}}{\gamma_{2}}\left[1-\frac{\kappa}{2\epsilon_{2}}\alpha_{1}^{\dagger2}\right]+\sqrt{\frac{\kappa\epsilon_{2}}{\gamma_{2}}-\frac{\kappa^{2}}{2\gamma_{2}}\alpha_{1}^{\dagger2}}w_{1}\left(t\right)
\end{align}

\end_inset

Rescaling the fields so that 
\begin_inset Formula $\alpha_{1}=a_{1}\sqrt{n_{c}}$
\end_inset

, 
\begin_inset Formula $\alpha_{1}^{\dagger}=a_{2}\sqrt{n_{c}}$
\end_inset

, where 
\begin_inset Formula $n_{c}=\frac{2\epsilon_{2}}{\kappa}$
\end_inset

, then rescaling time by letting 
\begin_inset Formula $\tau=\frac{\kappa\epsilon_{2}}{\gamma_{2}}t$
\end_inset

, defining 
\begin_inset Formula $c=\frac{\gamma_{1}\gamma_{2}}{\kappa\epsilon_{2}}$
\end_inset

, and using Eq (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ItovsStratonovichDrift"
plural "false"
caps "false"
noprefix "false"

\end_inset

) to transform from an Ito to a Stratonovich equation gives: 
\begin_inset Formula 
\begin{align}
\frac{da_{1}}{d\tau} & =-(c-\frac{1}{2n_{c}})a_{1}+a_{2}\left[1-a_{1}^{2}\right]+\frac{1}{\sqrt{n_{c}}}\sqrt{1-a_{1}^{2}}w_{1}\left(\tau\right)\nonumber \\
\frac{da_{2}}{d\tau} & =-(c-\frac{1}{2n_{c}})a_{2}+a_{1}\left[1-a_{2}^{2}\right]+\frac{1}{\sqrt{n_{c}}}\sqrt{1-a_{2}^{2}}w_{2}\left(\tau\right)\,,
\end{align}

\end_inset

where 
\begin_inset Formula $w_{1},w_{2}$
\end_inset

 are delta-correlated real Gaussian noises.
\end_layout

\begin_layout Standard
There is a bistable region, which leads to a discrete time symmetry breaking.
 The solution in the steady-state is 
\begin_inset Formula 
\begin{equation}
P=\left(1-a_{1}^{2}\right)^{cn_{c}-1}\left(1-a_{2}^{2}\right)^{cn_{c}-1}e^{2n_{c}a_{1}a_{2}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The integration manifold is the region of real 
\begin_inset Formula $a_{1}$
\end_inset

, 
\begin_inset Formula $a_{2}$
\end_inset

, such that 
\begin_inset Formula $a_{1}^{2}\le1$
\end_inset

 , 
\begin_inset Formula $a_{2}^{2}\le1$
\end_inset

.
 There are two physically possible metastable values of the amplitudes.
 The physically observed quantity is the amplitude and number: 
\begin_inset Formula 
\begin{align}
\left\langle \hat{a}\right\rangle  & =\left\langle a_{1}+a_{2}\right\rangle \sqrt{\frac{n_{c}}{2}}\nonumber \\
\left\langle \hat{n}\right\rangle  & =n_{c}\left\langle a_{1}a_{2}\right\rangle .
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Parameters that show bistable behavior on reasonable time-scales of 
\begin_inset Formula $T=100$
\end_inset

 are 
\begin_inset Formula $c=0.6$
\end_inset

, 
\begin_inset Formula $n_{c}=4$
\end_inset

.
 To learn more, try the following: 
\end_layout

\begin_layout Itemize

\series bold
Simulate the nonlinear oscillator by creating a file, say, 
\begin_inset Formula $NonlinearQ.m$
\end_inset


\series default
 
\end_layout

\begin_layout Itemize

\series bold
Can you observe quantum tunneling in the bistable regime?
\series default
 
\end_layout

\begin_layout Itemize

\series bold
Do you see transient Schrodinger `cat states' with a negative 
\begin_inset Formula $n=\alpha_{1}\alpha_{2}$
\end_inset

 value?
\series default
 
\end_layout

\begin_layout Standard
A negative value of 
\begin_inset Formula $\alpha_{1}\alpha_{2}$
\end_inset

 is evidence for a quantum superposition! For experimental comparisons,
 one would measure correlation functions and spectra.
 These calculations require long time scales, 
\begin_inset Formula $\mathtt{p.ranges}$
\end_inset

, to observe tunneling, and of order 
\begin_inset Formula $100$
\end_inset

 time steps per plotted time point, 
\begin_inset Formula $\mathtt{p.steps}$
\end_inset

, to maintain good accuracy in the quantum simulations.
\end_layout

\begin_layout Standard
For lower damping and large nonlinearity, other methods should be used,
 as the stochastic equations can become unstable in this limit.
\end_layout

\begin_layout Standard
The model is a simplified version of more recent quantum technologies used
 to investigate Schrodinger cat formation in superconducting quantum circuits
 
\begin_inset CommandInset citation
LatexCommand cite
key "leghtas2015confining"
literal "false"

\end_inset

, and the CIM machine used to solve NP-hard optimization problems with photonic
 circuits 
\begin_inset CommandInset citation
LatexCommand cite
key "Marandi2014network,McMahon2019fully,Inagaki2019coherent"
literal "false"

\end_inset

, although there are greater complexities in both these cases.
\end_layout

\begin_layout Standard
Similar methods can also be used to investigate quantum and chemical non-equilib
rium phase transitions 
\begin_inset CommandInset citation
LatexCommand cite
key "drummond1981quasiprobability"
literal "false"

\end_inset

, tunneling in open systems 
\begin_inset CommandInset citation
LatexCommand cite
key "Kinsler1995Critical"
literal "false"

\end_inset

, quantum entanglement 
\begin_inset CommandInset citation
LatexCommand cite
key "Kiesewetter2017Pulsed"
literal "false"

\end_inset

, Einstein-Podolsky-Rosen paradoxes 
\begin_inset CommandInset citation
LatexCommand cite
key "Reid1989Demonstration,Reid1989Correlations"
literal "false"

\end_inset

, Bell violations 
\begin_inset CommandInset citation
LatexCommand cite
key "RosalesZarate2014Probabilistic,Reid2014Quantum"
literal "false"

\end_inset

, and many other problems treated in the literature 
\begin_inset CommandInset citation
LatexCommand cite
key "gardiner2004quantum,Drummond2014Quantum"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Solving an SPDE 
\begin_inset CommandInset label
LatexCommand label
name "sec:Simulating-an-SPDE"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes how to simulate a PDE or SPDE, including choosing
 spectral or finite difference methods and specifying boundary conditions.
\end_layout

\begin_layout Section
Multidimensional Wiener process
\end_layout

\begin_layout Standard
To solve for a single four-dimensional trajectory with three space dimensions,
 as in Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Wiener_process-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 , just type in: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.dimensions = 4;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $p.deriv$
\end_inset

 defines the time derivative 
\begin_inset Formula $\dot{a}$
\end_inset

 in the input parameter structure 
\emph on
p, 
\emph default
while 
\begin_inset Formula $w$
\end_inset

 is a delta-correlated Gaussian noise generated internally.
 Apart from the dimensions, there are no other parameters, so default values
 are used.
 This produces the graph shown in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-simplest-case: Wiener-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

), which gives a single trajectory.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Multi-Wiener.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-simplest-case: Wiener-1"

\end_inset


\emph on
A multidimensional random walk of a three-dimensional field projected onto
 
\begin_inset Formula $y=z=0$
\end_inset

.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For more interesting problems than this, more parameters are needed, as
 explained next.
\end_layout

\begin_layout Section
SPDE parameters
\end_layout

\begin_layout Standard
A stochastic partial differential equation or 
\begin_inset Formula $SPDE$
\end_inset

 for a complex vector field is defined in both time 
\begin_inset Formula $t$
\end_inset

 and space dimension(s) 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 The total 
\emph on
dimensions
\emph default
 
\begin_inset Formula $d$
\end_inset

 includes both time and space.
 To solve a stochastic partial differential equation xSPDE involves a similar
 procedure to the case of the SDE, covered in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
The numerical solutions require additional parameters to define the spatial
 grid, and to define the linear transformations in an interaction picture,
 if spectral methods are used.
 The SPDE input parameters extend those already introduced in (
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Simulation-parameters-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Some new and extended parameters are listed in the table below: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typical value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dimensions
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time dimensions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
linear
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
@(p) p.Dx 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linear interaction picture function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ranges
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[10,10,...] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ranges in time and space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transforms{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $[1,0,1,..]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time transform switch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
points
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[51,35,..] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output lattice points in [t,x,y,z,..]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
origins
\shape default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[0,-5,..] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time integration origin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
boundaries{i}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $[0,0;0,0]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Boundary type per field index
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Setting 
\begin_inset Formula $dimensions>1$
\end_inset

 defines an (S)PDE as opposed to an ordinary (S)DE.
 Here the cell index 
\begin_inset Formula $i$
\end_inset

 indicates a field index, and the cell index 
\begin_inset Formula $n$
\end_inset

 gives the observable output or graph index.
\end_layout

\begin_layout Standard
In the xSPDE implementation, the total space-time 
\emph on
dimensions
\emph default
 is unlimited, although, large space-time dimensions become memory-intensive
 and slow.
 There is a practical limit of about ten space-time dimensions with current
 digital computers, unless you have a very large, fast computer.
\end_layout

\begin_layout Subsection
SPDE spatial lattice
\end_layout

\begin_layout Standard
Stochastic variables in an SPDE are stored in a real or complex array, 
\begin_inset Formula $a(i,\mathbf{\ell},e)$
\end_inset

.
 Here 
\begin_inset Formula $i$
\end_inset

 is the internal field index, 
\begin_inset Formula $\mathbf{\ell}$
\end_inset

 is a 
\begin_inset Formula $d-1$
\end_inset

 dimensional spatial lattice index for 
\emph on
d
\emph default
 space-time dimensions, and 
\begin_inset Formula $e$
\end_inset

 is the ensemble index.
 To specify the spatial lattice, one must define: 
\end_layout

\begin_layout Description
dimensions The dimensionality in time and space.
 The default is an SDE: 
\begin_inset Formula $d=1$
\end_inset

.
 
\end_layout

\begin_layout Description
points The number of integration points.
 The default is 
\begin_inset Formula $\mathbf{N}=[51,35,35..]$
\end_inset

.
 
\end_layout

\begin_layout Description
ranges The integration ranges in each dimension.
 The default is 
\begin_inset Formula $\mathbf{R}=[10,10,10..]$
\end_inset

.
 
\end_layout

\begin_layout Description
origins The origins of the space-time integration domains.
 By default, the origin is 
\begin_inset Formula $O\left(1\right)=0$
\end_inset

 for the time coordinate and 
\begin_inset Formula $\mathbf{O}=-\mathbf{R}/2$
\end_inset

 for the space coordinates (
\begin_inset Formula $\mathbf{R}$
\end_inset

 is the 
\begin_inset Formula $ranges$
\end_inset

 variable) such that the spatial grid is symmetric around 
\begin_inset Formula $\mathbf{r}=0$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Initial conditions
\end_layout

\begin_layout Standard
Initial conditions are set at the initial time of 
\begin_inset Formula $t=O_{1}$
\end_inset

 with a user-defined function so that: 
\begin_inset Formula 
\begin{equation}
a(O_{1})=initial(v,p)
\end{equation}

\end_inset

The 
\emph on
initial
\emph default
 function includes initial random fields 
\begin_inset Formula $v=\left[v^{x},v^{k}\right]$
\end_inset

.
 Their correlations are either delta correlated or spatially correlated.
 To allow this, the input parameter 
\begin_inset Formula $randoms$
\end_inset

 is a vector such that: 
\begin_inset Formula $randoms(1)$
\end_inset

 is the number of delta-correlated random fields, 
\begin_inset Formula $v^{x}$
\end_inset

, and 
\begin_inset Formula $randoms(2)$
\end_inset

 is the number of correlated random fields, 
\begin_inset Formula $v^{k}$
\end_inset

.
 All random fields in the 
\emph on
initial
\emph default
 function, even if correlated using filters in momentum space, are transformed
 to position space before use.
 If there is no filtering, 
\begin_inset Formula $v^{x}$
\end_inset

 and 
\begin_inset Formula $v^{k}$
\end_inset

 have the same correlations.
\end_layout

\begin_layout Section
Next example
\end_layout

\begin_layout Standard
As another very simple example, consider the SPDE
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial a}{\partial t} & = & -\frac{1}{4}a+x\cdot w\label{eq:simple_spde_example}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The system has one spatial dimension, or 
\begin_inset Formula $d=2$
\end_inset

 space-time dimensions, one field and one noise variable.
 We suppose that the initial noise variance is Gaussian, with: 
\begin_inset Formula 
\begin{equation}
a(0,x)=10v(x).
\end{equation}

\end_inset

We want to consider 
\begin_inset Formula $10,000$
\end_inset

 stochastic trajectories per sub-ensemble with
\begin_inset Formula $10$
\end_inset

 sub-ensembles.
 We will set the origin for 
\begin_inset Formula $x$
\end_inset

 to 
\begin_inset Formula $0$
\end_inset

.
 The variable 
\begin_inset Formula $a$
\end_inset

 will be initialized as delta-correlated in space with a gaussian standard
 deviation on the lattice of 
\begin_inset Formula $\sigma=10/\sqrt{\Delta V}$
\end_inset

.
 As our observable, we consider the second moment of 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Standard
This is simulated through the following xSPDE code: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
clear;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'simple SPDE';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [10000,10];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.origins = [0,0];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) 10*v;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,~) a.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) -0.25*a + p.x .* w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
With this input, Matlab produces two output graphs:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename simple_SPDE1.png
	lyxscale 10
	width 50text%

\end_inset


\begin_inset Graphics
	filename simple_SPDE2.png
	lyxscale 10
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Example: simple SPDE output graphs.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The second graph shows the time evolution for 
\begin_inset Formula $x$
\end_inset

 at the mid-point, 
\begin_inset Formula $x=5$
\end_inset

.
\series bold
\color red

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\series default
\color inherit
The variances are larger than they would be in the SDE case, where one might
 expect an initial variance of 
\begin_inset Formula $\left\langle a^{2}(0)\right\rangle =100$
\end_inset

.
 The reason for this is that the initial noise random and noise fields are
 replaced by a lattice with a variance of 
\begin_inset Formula $1/\Delta V$
\end_inset

.
 In the default case, this causes an increase in the local noise.
\end_layout

\begin_layout Section
Transverse lattice
\end_layout

\begin_layout Standard
In the functions 
\begin_inset Formula $deriv$
\end_inset

, 
\begin_inset Formula $initial$
\end_inset

 and 
\begin_inset Formula $observe$
\end_inset

, the field and noise variables 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $w$
\end_inset

 now have extended dimensionality compared to the 
\begin_inset Formula $1$
\end_inset

-dimensional case, to index the transverse lattice.
 The indices are 
\begin_inset Formula $a\left(f,\mathbf{i},e\right)$
\end_inset

, where the: 
\end_layout

\begin_layout Description
field index 
\begin_inset Formula $f$
\end_inset

 corresponds to the field index for 
\begin_inset Formula $a$
\end_inset

 and the noise index for 
\begin_inset Formula $w$
\end_inset

.
 
\end_layout

\begin_layout Description
intermediate indices 
\begin_inset Formula $\mathbf{i},$
\end_inset

 which are absent in the 
\begin_inset Formula $1$
\end_inset

-dimensional case, correspond to the spatial grid and have the same structure.
 For example, in the case with 
\emph on
dimensions = 3
\emph default
, indicating one time index and two spatial dimension, 
\begin_inset Formula $\mathbf{i}$
\end_inset

 corresponds to the two space indices.
 
\end_layout

\begin_layout Description
last index 
\begin_inset Formula $e$
\end_inset

 corresponds to the stochastic trajectory.
 
\end_layout

\begin_layout Standard
For storing space coordinates like 
\begin_inset Formula $p.x$
\end_inset

, the first and last index are 
\begin_inset Formula $f=e=1$
\end_inset

.
 Where Fourier transforms are used internally, the momentum arrays have
 zero momentum as the first index to follow standard discrete Fourier transform
 conventions.
 This is changed to a symmetric convention in all stored graphics data outputs.
\end_layout

\begin_layout Standard
As explained in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:IP-implementation"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the general equation solved can be written in differential form as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\mathbf{A}\left[\mathbf{a}\right]+\underline{\mathbf{B}}\left[\mathbf{a}\right]\cdot\mathbf{w}(t)+\underline{\mathbf{L}}\left[\mathbf{\nabla},\mathbf{a}\right]\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The linear function 
\begin_inset Formula $L$
\end_inset

 can be input either inside the derivative function using finite difference
 operators described below, or as a separate 
\emph on
linear
\emph default
 function, to allow for an interaction picture in which case: 
\begin_inset Formula 
\begin{equation}
\underline{\mathbf{L}}\left[\mathbf{\nabla},\mathbf{a}\right]=\,\underline{\mathbf{L}}\left[\mathbf{\nabla}\right]\mathbf{a}\,.
\end{equation}

\end_inset

This depends on momentum space coordinates, which involves Fourier transforms
 and means that no space dependence is allowed.
 Spectral methods in xSPDE are currently restricted to cases with linear
 derivative terms and periodic or zero boundary conditions.
 It is also possible to use finite differences, in which case the derivative
 terms are included as part of the derivative function 
\emph on
deriv
\emph default
.
\end_layout

\begin_layout Standard
The usual FFT spectral methods require periodicity.
 The four other boundary methods can currently only be used with the default
 boundary values of zero, and with an interaction picture derivative that
 only has even powers of derivatives.
 Additional spectral methods will be included in a subsequent release: xSPDE4.
\end_layout

\begin_layout Subsection
Linear operator
\end_layout

\begin_layout Standard
The field 
\begin_inset Formula $x$
\end_inset

 is provided by the parameter structure, and corresponds to the variable
 
\begin_inset Formula $x$
\end_inset

 in Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:simple_spde_example"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 All parameters are preceded by the parameter structure label.
 Likewise, for higher dimensional problems, the variables 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 exist.
 These are placeholders for 
\begin_inset Formula $r\{1\},r\{2\},r\{3\}$
\end_inset

, so the spatial variables of even higher dimensional problems can be accessed
 through 
\begin_inset Formula $r\{n\}$
\end_inset

.
\end_layout

\begin_layout Standard
Using a linear operator in an SPDE gives better accuracy, and allows use
 of the interaction picture.
 This is included automatically for all built-in xSPDE algorithms, provided
 the 
\emph on
linear
\emph default
 function is defined in the parameter structure.
 Variables 
\begin_inset Formula $p.D\{i\}$
\end_inset

 (with placeholders 
\begin_inset Formula $p.Dx,p.Dy,p.Dz$
\end_inset

 for the first 3 spatial dimensions) provide access to the derivative operator.
 Higher-order derivatives are found through potentiating 
\begin_inset Formula $p.Dx$
\end_inset

 accordingly.
\end_layout

\begin_layout Standard
For example, the 
\begin_inset Formula $2$
\end_inset

-dimensional Laplacian operator 
\begin_inset Formula 
\begin{equation}
\nabla^{2}=\frac{\partial^{2}}{\partial x^{2}}+\frac{\partial^{2}}{\partial y^{2}}
\end{equation}

\end_inset

corresponds to a linear differential operator specified as: 
\begin_inset Formula 
\begin{equation}
p.linear=@(p)\,\,\,p.Dx.^{2}+p.Dy^{2};
\end{equation}

\end_inset

For a comprehensive list of variables accessible through the 
\begin_inset Formula $p$
\end_inset

-structure, refer to sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Table-of-parameters"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Integrals and averages
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "xsim:averages"

\end_inset

 There are functions available in xSPDE for spatial grid averages and integrals,
 to handle the spatial grid.
 These are 
\series bold
\emph on
Ave
\series default
 
\emph default
and
\emph on
 
\series bold
Int,
\series default
\emph default
 which are used to calculate observables for plotting.
 They operate in parallel over the lattice dimensions, by taking a vector
 or scalar quantity, for example a single field component, and returning
 an average or a space integral.
 In each case the first argument is the field, the second argument is a
 vector defining the type of operation, and the last argument is the parameter
 structure.
 If there are two arguments, the operation vector is replaced by its default
 value.
\end_layout

\begin_layout Standard
Integrals over the spatial grid allow calculation of global quantities.
 To take an integral over the spatial grid, use the xSPDE function 
\emph on
Int
\emph default
 with arguments 
\emph on
(o, [dx, ] p)
\emph default
.
\end_layout

\begin_layout Standard
This function takes a scalar or vector quantity 
\emph on
o
\emph default
, and returns a trapezoidal space integral over selected dimensions with
 vector measure 
\emph on
dx
\emph default
.
 If
\emph on
 
\begin_inset Formula $dx(j)>0$
\end_inset


\emph default
 an integral is taken over dimension 
\emph on
j
\emph default
.
 Dimensions are labelled from 
\emph on
j = 1,2,3 ...

\emph default
 as in all xSPDE standards.
 Time integrals are ignored at present.
 Integrals are returned at all lattice locations.
 To integrate over an entire lattice, set 
\emph on
dx = p.dx
\emph default
, otherwise set 
\emph on
dx(j) = p.dx(j)
\emph default
 for selected dimensions 
\emph on
j
\emph default
.
\end_layout

\begin_layout Standard
If momentum-space integrals are needed, first use the 
\emph on
transforms
\emph default
 switch to make sure that the field is Fourier transformed before being
 averaged, and input 
\emph on
dk
\emph default
 instead of 
\emph on
dx
\emph default
.
\end_layout

\begin_layout Standard
Spatial grid averages can be used to obtain stochastic results with reduced
 sampling errors if the overall grid is homogeneous.
 An average is carried out using the builtin xSPDE function 
\emph on
Ave()
\emph default
 with arguments 
\emph on
(o, [av, ] p)
\emph default
.
\end_layout

\begin_layout Standard
This takes a vector or scalar field or observable, defined on the lattice,
 and returns an average over the spatial lattice.
 The input is a field 
\emph on
a
\emph default
 or observable 
\emph on
o
\emph default
, and an optional averaging switch 
\emph on
av
\emph default
.
 If 
\begin_inset Formula $av(j)>0$
\end_inset

, an average is taken over dimension 
\emph on
j
\emph default
.
 Space dimensions are labelled from 
\emph on
j = 2,3...

\emph default
 as elsewhere.
 If the 
\emph on
av
\emph default
 vector is omitted, the average is taken over all space directions.
\end_layout

\begin_layout Subsection
One space-dimensional example
\end_layout

\begin_layout Standard
A famous partial differential equation is an exactly soluble equation for
 a soliton, the nonlinear Schrödinger equation (NLSE): 
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}=\frac{i}{2}\left[\nabla^{2}a-a\right]+ia\left|a\right|^{2}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=sech(x)$
\end_inset

, this has a soliton, an exact solution that doesn't change in time: 
\begin_inset Formula 
\begin{eqnarray}
a(t,x) & = & sech(x).
\end{eqnarray}

\end_inset

The spatial integral is simply: 
\begin_inset Formula 
\begin{eqnarray}
\int sech(x)dx & = & \pi.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
An xSPDE code that solves this is given below, together with code that compares
 the numerical solution with the exact solutions for the soliton and the
 integral: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.name = 'NLS soliton';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) sech(p.x);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,~,p) 1i*a.*(conj(a).*a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) 0.5*1i*(p.Dx.^2-1.0);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'a(x)','
\backslash
int a(x) dx'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) Int(a, p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{1} = @(p) sech(p.x);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{2} = @(p) pi;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Due to finite boundaries and discrete spatial lattice, the agreement is
 not perfect.
 The errors can be reduced by increasing the range of the integration domain
 and improving the resolution with more points.
\end_layout

\begin_layout Subsection
Two space-dimensional example
\end_layout

\begin_layout Standard
As another example, consider the two-dimensional nonlinear stochastic equation,
 with periodic boundary conditions:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial a}{\partial t} & = & \nabla^{2}a\left(\mathbf{x},t\right)+a\left(\mathbf{x},t\right)-a\left(\mathbf{x},t\right)^{3}+\eta\left(\mathbf{x},t\right).\label{eq:Nonlinear-SPDE-example}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Using the interaction picture allows for the absorption of both the Laplacian
 and the first-order term by the 
\shape italic
p.linear
\shape default
 parameter, which results in 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) (p.Dx.^2+p.Dy.^2) + 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,~) -a.^3 + w;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
With this input, Matlab produces two output graphs:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename TwoD-example.png
	lyxscale 10
	width 50text%

\end_inset


\begin_inset Graphics
	filename TwoD-example1.png
	lyxscale 10
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Two space-dimensional example graphs.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Finite differences 
\end_layout

\begin_layout Standard
Instead of using the interaction picture, xSPDE also has finite difference
 methods for direct differentiation.
 These derivatives are obtained through function calls 
\begin_inset Formula $D1$
\end_inset

 and 
\begin_inset Formula $D2$
\end_inset

 respectively for first and second derivatives, which use a fixed grid spacing.
 As elsewhere, they can be replaced by user-written functions if preferred.
 Generally they require smaller steps in time than spectral methods, when
 used to define the derivative.
\end_layout

\begin_layout Subsection
Finite difference first derivatives
\end_layout

\begin_layout Standard
The code to take a first order spatial derivative with finite difference
 methods is carried out using the xSPDE function
\emph on
 D1()
\emph default
 with arguments 
\emph on
(o, [dir, ] p)
\emph default
.
\end_layout

\begin_layout Standard
This takes a scalar or vector 
\emph on
o
\emph default
 and returns a first derivative in an axis direction 
\emph on
dir
\emph default
.
 Set 
\emph on
dir = 2
\emph default
 for an x-derivative, 
\emph on
dir = 3
\emph default
 for a y-derivative, and so on.
 Time derivatives are ignored at present.
 Derivatives are returned at all lattice locations.
\end_layout

\begin_layout Standard
If the direction is omitted, an 
\emph on
x
\emph default
-derivative is returned.
 These derivatives can be used both in calculating propagation and in calculatin
g observables.
 The boundary condition is set by the 
\emph on
boundaries
\emph default
 input.
 It can be made periodic, which is the default, or Neumann with zero derivative,
 or Dirichlet with zero field.
\end_layout

\begin_layout Subsection
Finite difference second derivatives
\end_layout

\begin_layout Standard
The code to take a second order spatial derivative with finite difference
 methods is carried out using the xSPDE 
\emph on
D2
\emph default
 function with arguments 
\emph on
(o, [dir, ] p)
\emph default
.
\end_layout

\begin_layout Standard
This takes a scalar or vector 
\emph on
o
\emph default
 and returns the second derivative in axis direction 
\emph on
dir
\emph default
.
 Set 
\emph on
dir = 2
\emph default
 for an x-derivative, 
\emph on
dir = 3
\emph default
 for a y-derivative and so on.
 All other properties are exactly the same as 
\emph on
D1
\emph default
.
\end_layout

\begin_layout Standard
Without using the interaction picture, the stochastic equation of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Nonlinear-SPDE-example"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is specified in xSPDE using finite differences as 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.dimensions = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.steps = 50;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) D2(a,2,p)+D2(a,3,p)+a - a.^3 +...
\end_layout

\begin_layout Plain Layout

\family typewriter
w/10;
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
This gives the same result as with the linear propagator, although requiring
 smaller step-sizes for numerical stability, with an output graph shown
 in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Two-space-dimensional-example-direct-diff"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Note that the parameters and noises are slightly different!
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename TwoD-example-direct.png
	lyxscale 10
	width 50text%

\end_inset


\begin_inset Graphics
	filename TwoD-example-direct1.png
	lyxscale 10
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Two space-dimensional example graphs, direct differentiation
\emph default
.
\begin_inset CommandInset label
LatexCommand label
name "fig:Two-space-dimensional-example-direct-diff"

\end_inset


\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Boundary conditions
\end_layout

\begin_layout Subsection
Transverse boundaries
\end_layout

\begin_layout Standard
Transverse boundary conditions must be given for all partial differential
 equations.
 Common transverse 
\emph on
boundary types
\emph default
 are of three types: Neumann (specified derivative), periodic, or Dirichlet
 (specified field).
 These are obtained using 
\begin_inset Formula $boundaries\{d\}=-1,0,1$
\end_inset

, which is specified for each space dimension 
\begin_inset Formula $d>1$
\end_inset

, field index and boundary.
\end_layout

\begin_layout Standard
If 
\emph on
boundaries
\emph default
 are omitted for any dimension the default is 
\begin_inset Formula $0$
\end_inset

, which gives periodic boundaries in that dimension for all field indices,
 and permits the use of Fourier transforms and an interaction picture as
 described above.
\end_layout

\begin_layout Standard
The value of 
\begin_inset Formula $boundaries\{d\}$
\end_inset

 is a matrix whose column index 
\begin_inset Formula $(i)$
\end_inset

 is the field index, and whose row index (j) is given by 
\begin_inset Formula $j=1,2$
\end_inset

 for the lower and upper boundary type respectively.
\end_layout

\begin_layout Standard
Spatial derivatives or other functions linking different spatial points
 can be specified either in the functionals 
\begin_inset Formula $\boldsymbol{A}\left[\mathbf{a},\mathbf{r}\right]$
\end_inset

, 
\begin_inset Formula $\underline{\mathbf{B}}\left[\mathbf{a},\mathbf{r}\right]$
\end_inset

 or else in the 
\begin_inset Formula $linear$
\end_inset

 function, provided the derivative terms are linear functions of the fields.
 Use of the 
\begin_inset Formula $linear$
\end_inset

 function allows an interaction picture algorithm, with increased efficiency.
 The 
\begin_inset Formula $linear$
\end_inset

 function is currently only available with periodic boundary conditions.
\end_layout

\begin_layout Standard
The default boundary conditions are periodic.
 The implicit setting of this is that periodicity is enforced such that
 
\begin_inset Formula $a\left(o_{i}-dx_{i}/2\right)=a\left(o_{i}+r_{i}+dx_{i}/2\right)$
\end_inset

 , which is the usual discrete Fourier transform requirement.
\end_layout

\begin_layout Standard
Otherwise, the differential equation boundaries are specified at 
\begin_inset Formula $a\left(o_{i}\right)$
\end_inset

, 
\begin_inset Formula $a\left(o_{i}+r_{i}\right)$
\end_inset

, using the cell-array input 
\begin_inset Formula $boundaries\{d\}(i,j)$
\end_inset

, which is defined per space dimension (
\begin_inset Formula $d=2,3..$
\end_inset

), field index (
\begin_inset Formula $i=1,2..$
\end_inset

) and boundary 
\begin_inset Formula $j=(1,2)$
\end_inset

.
 Here 
\begin_inset Formula $d>1$
\end_inset

 is the transverse dimension, not including time, which only has an initial
 condition.
\end_layout

\begin_layout Standard
In summary the available boundary types are: 
\end_layout

\begin_layout Description
Neumann: For specified 
\emph on
derivative
\emph default
 boundaries, 
\begin_inset Formula $boundaries\{d\}(i,j)=-1$
\end_inset

 
\end_layout

\begin_layout Description
Periodic: For 
\emph on
periodic
\emph default
 boundaries, 
\begin_inset Formula $boundaries\{d\}(i,j)=0$
\end_inset

 
\end_layout

\begin_layout Description
Dirichlet: For specified 
\emph on
field
\emph default
 boundaries, 
\begin_inset Formula $boundaries\{d\}(i,j)=1$
\end_inset

 
\end_layout

\begin_layout Standard
These are specified in a cell array: 
\begin_inset Formula $boundaries\{d\}(i,1)$
\end_inset

 sets the lower boundary type in dimension 
\emph on
d
\emph default
, for the 
\emph on
i -th 
\emph default
field component
\emph on
 
\emph default
while 
\begin_inset Formula $boundaries\{d\}(i,2)$
\end_inset

 gives the upper boundary type.
 Each space dimension, variable and boundary is set independently.
 In xSPDE, the equations are always initial value problems in time, so the
 time dimension boundary specification for 
\begin_inset Formula $d=1$
\end_inset

 is not included.
\end_layout

\begin_layout Paragraph
Example: boundary types in a 2-dimensional PDE
\end_layout

\begin_layout Standard
Suppose there are two fields, and we wish to set mixed boundaries in space,
 with Dirichlet in the past and Neumann in the future for the first field
 
\begin_inset Formula $a(1,:)$
\end_inset

, with the opposite combination in the second field component, 
\begin_inset Formula $a(2,:)$
\end_inset

: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.boundaries{2} = [1,-1;-1,1];
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Transverse boundary values
\end_layout

\begin_layout Standard
For non-vanishing, specified boundary conditions, the boundary function
 
\begin_inset Formula $boundfun(a,d,p)$
\end_inset

 is called.
 This returns the boundary values used for the fields or derivatives in
 a particular dimension 
\begin_inset Formula $d>1$
\end_inset

 as an array of dimension 
\begin_inset Formula $b(\mathbf{j},e))$
\end_inset

, where 
\begin_inset Formula $\mathbf{j}=i,\mathbf{k}$
\end_inset

.
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $i=j_{1}$
\end_inset

 is the field index, and 
\begin_inset Formula $\mathbf{k}$
\end_inset

 is the space index, where 
\begin_inset Formula $j_{d}$
\end_inset

 is the index of the dimension whose boundary values are specified.
 For this dimension, only two values are needed: 
\begin_inset Formula $j_{d}=1,2$
\end_inset

 for the lower and upper boundary values, which could either be field values
 or their derivatives.
 An ensemble index 
\begin_inset Formula $e$
\end_inset

 is also needed if the boundary values are stochastic.
\end_layout

\begin_layout Standard
Boundary values can be a function of both the fields (
\begin_inset Formula $a$
\end_inset

) and internal variables like the current time (
\begin_inset Formula $t$
\end_inset

).
 These may have stochastic initial values at 
\begin_inset Formula $t=0$
\end_inset

 which are calculated only once.
 In such cases the boundary values must first be initialized, so the routine
 
\begin_inset Formula $boundfun(a,d,p)$
\end_inset

 is first internally initialized with time 
\begin_inset Formula $t<origin(1)$
\end_inset

, and with random Gaussian values in the input field 
\begin_inset Formula $a$
\end_inset

.
 These are delta-correlated in space, i.e., with the same definition as 
\begin_inset Quotes eld
\end_inset

inrandoms
\begin_inset Quotes erd
\end_inset

.
 The xSDPE program stores the returned values 
\begin_inset Formula $b$
\end_inset

 for the boundaries in an internal cell array, 
\begin_inset Formula $boundval\{d\}$
\end_inset

, for later use if required.
\end_layout

\begin_layout Standard
The default boundary value is zero, set by the default boundary function
 
\begin_inset Formula $xboundfun(a,d,p)$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
NOTE: Current xSPDE code requires finite-difference methods to be used with
 
\begin_inset Formula $boundfun$
\end_inset

.
 Spectral methods use the default boundary conditions.
 
\end_layout

\begin_layout Subsection
Example: boundaries in a 2-dimensional PDE
\end_layout

\begin_layout Standard
Suppose there are two fields, and we wish to set boundary values.
\end_layout

\begin_layout Standard
We take boundary values as Dirichlet for 
\begin_inset Formula $x=0$
\end_inset

 and Neumann for 
\begin_inset Formula $x=1$
\end_inset

 in field variable 1, and Neumann for 
\begin_inset Formula $x=0$
\end_inset

 and Dirichlet for 
\begin_inset Formula $x=1$
\end_inset

 in field variable 2, that are different from the default values of 
\begin_inset Formula $a=0$
\end_inset

, 
\begin_inset Formula $\partial_{x}a=0$
\end_inset

, so that: 
\begin_inset Formula 
\begin{align}
a_{1}\left(x=0\right) & =1,\nonumber \\
\partial_{x}a_{1}\left(x=1\right) & =a_{1}\left(x=1\right).\nonumber \\
\partial_{x}a_{2}\left(x=0\right) & =-a_{2}\left(x=0\right)\nonumber \\
a_{2}\left(x=1\right) & =-1.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
These are set in the following code: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.boundfun = @mybfun
\end_layout

\begin_layout Plain Layout

\family typewriter
p.boundaries{2} = [1,-1;-1,1];
\end_layout

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\begin_layout Plain Layout

\family typewriter
function b = mybfun(a,d,p)
\end_layout

\begin_layout Plain Layout

\family typewriter
% b = mybfun(a,d,p) calculates boundary values
\end_layout

\begin_layout Plain Layout

\family typewriter
b(1,2,:) = a(1,end,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
b(2,1,:) = -a(2,end,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
b(1,1,:) = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
b(2,2,:) = -1;
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Transverse plots
\end_layout

\begin_layout Standard
A number of plots at equally spaced points in time can be generated through
 
\begin_inset Formula $p.transverse$
\end_inset

 (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xGRAPH-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 For example, adding the line below creates 3 time-sliced plots at 
\begin_inset Formula $t=0,5,10$
\end_inset

: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.transverse{1} = 3;
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Output transforms
\end_layout

\begin_layout Standard
For graphical output, Fourier transforms involve a sum over the lattice
 points using a discrete Fourier transform at the lattice points 
\begin_inset Formula $x_{i}$
\end_inset

, so that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tilde{a}(\omega_{i},\mathbf{k}_{i})=\frac{dtd\mathbf{x}}{\left[2\pi\right]^{d/2}}\sum_{j_{1}\ldots j_{d}}\exp\left[i\left(\omega_{i_{1}}t_{j_{1}}-\mathbf{k}_{\mathbf{i}}\cdot\mathbf{x}_{\mathbf{j}}\right)\right]a(t_{j_{1}},\mathbf{x}_{\mathbf{j}})\,
\end{equation}

\end_inset

The momenta 
\begin_inset Formula $k_{i}$
\end_inset

 have an interval of 
\begin_inset Formula 
\begin{equation}
dk_{i}=\frac{2\pi}{n_{i}dx_{i}}
\end{equation}

\end_inset

with 
\begin_inset Formula $k_{i}$
\end_inset

 values given for even n by: 
\begin_inset Formula 
\begin{equation}
k_{i}=\left(1-\frac{n_{i}}{2}\right)dk_{i},\ldots\frac{n_{i}}{2}dk_{i}
\end{equation}

\end_inset

and for odd n by: 
\begin_inset Formula 
\begin{equation}
k_{i}=\frac{1-n_{i}}{2}dk_{i},\ldots\frac{n_{i}-1}{2}dk_{i}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Once Fourier transformed, the 
\begin_inset Formula $observe$
\end_inset

 function can be used to take any further functions or combinations of Fourier
 transformed fields prior to averaging.
 Important points to keep in mind are as follows: 
\end_layout

\begin_layout Itemize
Fourier transforms are specified for the k-th 
\emph on
observe 
\emph default
function independently of all other functions, by specifying 
\begin_inset Formula $transforms\{k\}=\left[\ell_{1,}\ldots\ell_{d,}\right]$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Here 
\begin_inset Formula $\ell_{j}=0,1$
\end_inset

 is a logical switch, set to to 
\begin_inset Formula $\ell_{j}=1$
\end_inset

 if the 
\begin_inset Formula $j-th$
\end_inset

 dimension requires a Fourier transform, and 
\begin_inset Formula $\ell_{j}=0$
\end_inset

 if there is no Fourier transform.
 
\end_layout

\begin_layout Itemize
The internal fields 
\begin_inset Formula $p.k\{1\},\ldots p.k\{d\}$
\end_inset

 are available for use in making functions of momentum for use with observations.
 
\end_layout

\begin_layout Itemize
In propagation calculations, the momentum lattice values start with 
\begin_inset Formula $k=0,\ldots$
\end_inset

, following standard Matlab and FFT conventions.
 
\end_layout

\begin_layout Itemize
For storing and graphing, momentum lattice values are reordered to start
 with 
\begin_inset Formula $k=-k_{max},\ldots$
\end_inset

, following standard graphics and mathematical conventions.
 
\end_layout

\begin_layout Section
Initial random fields
\end_layout

\begin_layout Standard
Fourier transforms are available for use both on initial random values and
 on noise fields during time-evolution.
 This is controlled by the second element of 
\begin_inset Formula $randoms$
\end_inset

 and 
\begin_inset Formula $noises$
\end_inset

, respectively.
\end_layout

\begin_layout Standard
When 
\begin_inset Formula $randoms(1)>0$
\end_inset

, an initial random field 
\begin_inset Formula $\mathbf{v}^{x}$
\end_inset

 is generated with delta-correlations in 
\begin_inset Formula $x$
\end_inset

-space.
 When 
\begin_inset Formula $randoms(2)>0$
\end_inset

, an initial random field 
\begin_inset Formula $\tilde{\mathbf{v}}^{k}$
\end_inset

 is generated with delta-correlations in 
\begin_inset Formula $k$
\end_inset

-space.
 This can be filtered with a user-specified filter function to give 
\begin_inset Formula $\tilde{\mathbf{v}}^{kf}$
\end_inset

, then inverse Fourier transformed to give 
\begin_inset Formula $v^{k}$
\end_inset

.
 Both random fields are passed to the 
\begin_inset Formula $initial$
\end_inset

 function as an extended vector 
\begin_inset Formula $\left[v^{x},v^{k}\right]$
\end_inset

, for field 
\emph on
initialization
\emph default
 in space.
\end_layout

\begin_layout Standard
There is a user specified filter function available, to modify random fields
 
\begin_inset Formula $\tilde{v}^{k}$
\end_inset

, that are delta-correlated in momentum space using a filter function, '
\emph on
rfilter
\emph default
' so that 
\begin_inset Formula $v_{i}^{kf}\left(\mathbf{k}\right)=f_{i}^{(r)}\left(\mathbf{v}^{k}\left(\mathbf{k}\right)\right)$
\end_inset

, before being used.
 The corresponding correlations are: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle v_{i}^{x}\left(\mathbf{x}\right)v_{j}^{x}\left(\mathbf{x}'\right)\right\rangle  & = & \delta\left(\mathbf{x}-\mathbf{x}'\right)\delta_{ij}\sim\frac{1}{\Delta V}\delta_{\mathbf{x},\mathbf{x}'}\delta_{ij}\nonumber \\
\left\langle \tilde{v}_{i}^{k}\left(\mathbf{k}\right)\tilde{v}_{j}^{k}\left(\mathbf{k}'\right)\right\rangle  & = & \delta\left(\mathbf{k}-\mathbf{k}'\right)\delta_{ij}\sim\frac{1}{\Delta K}\delta_{\mathbf{k},\mathbf{k}'}\delta_{ij}\nonumber \\
\left\langle \tilde{v}_{i}^{kf}\left(\mathbf{k}\right)\tilde{v}_{j}^{kf}\left(\mathbf{k}'\right)\right\rangle  & = & \left\langle f_{i}^{(r)}\left(\tilde{\mathbf{v}}^{k}\left(\mathbf{k}\right)\right)f_{j}^{(r)}\left(\tilde{\mathbf{v}}^{k}\left(\mathbf{k}'\right)\right)\right\rangle .
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Note that on a lattice, we replace the Dirac continuous delta-function by
 a discrete Kronecker delta function scaled by an inverse volume element
 either in space (
\begin_inset Formula $\Delta V$
\end_inset

) or momentum (
\begin_inset Formula $\Delta K$
\end_inset

) .
 The xSPDE Fourier transforms are given by a symmetric Fourier transform,
 so that if we inverse Fourier-transform the 
\begin_inset Formula $k-$
\end_inset

space 
\emph on
inrandoms
\emph default
, without filtering, then: 
\begin_inset Formula 
\begin{equation}
v^{k}(\mathbf{x})=\frac{1}{\left[2\pi\right]^{(d-1)/2}}\int e^{i\mathbf{k}\cdot\mathbf{x}}\tilde{v}^{k}(\mathbf{k})d\mathbf{k}\,
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
These have random initial values that are real and delta-correlated in space,
 so that: 
\begin_inset Formula 
\begin{equation}
\left\langle v^{x}\left(\mathbf{x}\right)v^{x}\left(\mathbf{x}'\right)\right\rangle =\delta\left(\mathbf{x}-\mathbf{x}'\right).
\end{equation}

\end_inset

The corresponding noises in position space are correlated according to:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\left\langle v^{k}\left(\mathbf{x}\right)\left(v^{k}\left(\mathbf{x}'\right)\right)^{*}\right\rangle  & =\frac{1}{\left[2\pi\right]^{(d-1)}}\int e^{i(\mathbf{k}\cdot\mathbf{x}-\mathbf{k}'\cdot\mathbf{x}')}\left\langle \tilde{v}^{k}\left(\mathbf{k}\right)\tilde{v}^{k}\left(\mathbf{k}'\right)\right\rangle d\mathbf{k}d\mathbf{k}'\nonumber \\
 & =\frac{1}{\left[2\pi\right]^{(d-1)}}\int e^{i(\mathbf{x}-\mathbf{x}')\cdot\mathbf{k}}d\mathbf{k}\nonumber \\
 & =\delta\left(\mathbf{x}-\mathbf{x}'\right).
\end{align}

\end_inset

Similarly, if we don't conjugate the k-noise, then: 
\begin_inset Formula 
\begin{equation}
\left\langle v^{k}\left(\mathbf{x}\right)v^{k}\left(\mathbf{x}'\right)\right\rangle =\delta\left(\mathbf{x}+\mathbf{x}'\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
However, if we define 
\begin_inset Formula $\tilde{v}^{c}\left(\mathbf{k}\right)=\left[\tilde{v}_{1}^{k}\left(\mathbf{k}\right)+i\tilde{v}_{2}^{k}\left(\mathbf{k}\right)\right]/\sqrt{2}$
\end_inset

 , then we obtain complex noise that is only delta correlated when conjugated.
 
\begin_inset Formula 
\begin{align}
\left\langle v^{c}\left(\mathbf{x}\right)\left(v^{c}\left(\mathbf{x}'\right)\right)^{*}\right\rangle  & =\delta\left(\mathbf{x}-\mathbf{x}'\right)\nonumber \\
\left\langle v^{c}\left(\mathbf{x}\right)v^{c}\left(\mathbf{x}'\right)\right\rangle  & =0.
\end{align}

\end_inset

This is obtainable with the x-space noise as well, but the utility of the
 k-space noise is that it can be filtered to have nonlocal correlations
 in space if required.
\end_layout

\begin_layout Standard
During propagation in time, 
\begin_inset Formula $\mathbf{w}=\left[\mathbf{w}^{x},\mathbf{w}^{k}\right]$
\end_inset

 are real noise fields that are delta-correlated in space-time.
 They are calculated in an analogies way, except with an additional factor
 of 
\begin_inset Formula $1/\sqrt{dt}$
\end_inset

 because they are delta correlated in time as well.There is a user specified
 scaling function available, to take random noises 
\begin_inset Formula $w^{k}$
\end_inset

 in momentum space that are then scaled using a filter function, '
\emph on
nfilter
\emph default
' so that 
\begin_inset Formula $w_{i}^{kf}\left(\mathbf{k}\right)=f_{i}^{(n)}\left(\mathbf{w}^{k}\left(\mathbf{k}\right)\right)$
\end_inset

, before being used:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\left\langle w_{i}^{x}\left(t,\mathbf{x}\right)w_{j}^{x}\left(t,\mathbf{x}'\right)\right\rangle  & = & \delta\left(\mathbf{x}-\mathbf{x}'\right)\delta\left(t-t'\right)\delta_{ij}\nonumber \\
\left\langle \tilde{w}_{i}^{k}\left(t,\mathbf{k}\right)\tilde{w}_{j}^{k}\left(t,\mathbf{k}'\right)\right\rangle  & = & \delta\left(\mathbf{k}-\mathbf{k}'\right)\delta\left(t-t'\right)\delta_{ij}\nonumber \\
\left\langle \tilde{w}_{i}^{kf}\left(t,\mathbf{k}\right)\tilde{w}_{j}^{kf}\left(t',\mathbf{k}'\right)\right\rangle  & = & \left\langle f_{i}^{(n)}\left(\tilde{\mathbf{w}}^{k}\left(t,\mathbf{k}\right)\right)f_{j}^{(n)}\left(\tilde{\mathbf{w}}^{k}\left(t',\mathbf{k}'\right)\right)\right\rangle .
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Section
Examples
\end_layout

\begin_layout Subsection
Stochastic Ginzburg-Landau
\end_layout

\begin_layout Standard
Including two space dimensions, or space-time dimensions of 
\begin_inset Formula $d=3$
\end_inset

, an example of a SPDE is the stochastic Ginzburg-Landau equation.
 This describes symmetry breaking.
 The system develops a spontaneous phase which varies spatially as well.
 The model is used to describe lasers, magnetism, superconductivity, superfluidi
ty and particle physics: 
\begin_inset Formula 
\begin{equation}
\dot{a}=\left(1-\left|a\right|^{2}\right)a+bw(t)+c\nabla^{2}a
\end{equation}

\end_inset

where 
\begin_inset Formula 
\begin{equation}
\left\langle w(x)w^{*}(x')\right\rangle =2\delta\left(t-t'\right)\delta\left(x-x'\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The following new ideas are introduced for this problem: 
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $\mathtt{dimensions}$
\end_inset

 is the space-time dimension.

\series default
 
\end_layout

\begin_layout Enumerate

\series bold
The
\series default
 'dot' 
\series bold
notation used for parallel operations over lattices
\series default
.
 
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $\mathtt{linear}$
\end_inset

 is the linear operator - a Laplacian in these cases.

\series default
 
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $\mathtt{images}$
\end_inset

 produces movie-style images at discrete time slices.

\series default
 
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $\mathtt{Dx}$
\end_inset

 indicates a derivative operation, 
\begin_inset Formula $\partial/\partial x$
\end_inset

.

\series default
 
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $-5<x<5$
\end_inset

 is the default xSPDE coordinate range in space.

\series default
 
\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Enumerate

\series bold
Solve the stochastic G-L equation for 
\begin_inset Formula $b=0.001$
\end_inset

 and 
\begin_inset Formula $c=0.01i$
\end_inset

.

\series default
 
\end_layout

\begin_layout Enumerate

\series bold
Change to a real diffusion so that 
\begin_inset Formula $c=0.1$
\end_inset

.

\series default
 
\end_layout

\begin_layout Standard
In the first case, you should get the output graphed in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Symmetry-breaking"
plural "false"
caps "false"
noprefix "false"

\end_inset

) .
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
clear;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Extended laser gain equation';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.steps = 10;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) 1i*0.01*(p.Dx.^2+p.Dy.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,~) abs(a).^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.images = 6;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,~) (1-abs(a(1,:).^2)).*a(1,:)+...
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0.001*(w(1,:)+1i*w(2,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(p)
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Here the notation 
\begin_inset Formula $a(1,:)$
\end_inset

 means that the operation is repeated over all values of the subsequent
 indices, which are the two spatial lattice indices in this case.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename GinzLand.png
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Symmetry-breaking"

\end_inset


\emph on
Simulation of the stochastic equation describing symmetry breaking in two
 dimensions.
 Spatial fluctuations are caused by the different phase-domains that interfere.
 The graph obtained here is projected onto the 
\begin_inset Formula $y=0$
\end_inset

 plane.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
NLS soliton
\end_layout

\begin_layout Standard
The famous nonlinear Schrödinger equation (NLSE) is: 
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}=\frac{i}{2}\left[\nabla^{2}a-a\right]+ia\left|a\right|^{2}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=sech(x)$
\end_inset

, this has a soliton 
\begin_inset CommandInset citation
LatexCommand cite
key "Scott1973soliton"
literal "false"

\end_inset

, an exact solution that doesn't change in time: 
\begin_inset Formula 
\begin{eqnarray}
a(t,x) & = & sech(x).
\end{eqnarray}

\end_inset

The Fourier transform at 
\begin_inset Formula $k=0$
\end_inset

 is simply: 
\begin_inset Formula 
\begin{eqnarray}
\tilde{a}(t,0) & = & \frac{1}{\sqrt{2\pi}}\int sech(x)dx=\sqrt{\frac{\pi}{2}}.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Itemize

\series bold
Solve the NLSE for a soliton using a function instead of a script, then
 include an additive complex noise of 
\begin_inset Formula $0.01(w_{1}+iw_{2}$
\end_inset

) to the differential equation, and plot again with an average over 
\begin_inset Formula $1000$
\end_inset

 samples.

\series default
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Planar noise
\end_layout

\begin_layout Standard
The next example is growth of thermal noise of a two-component complex field
 in a plane, given by the equation 
\begin_inset Formula 
\begin{equation}
\frac{d\mathbf{a}}{dt}=\frac{i}{2}\nabla^{2}\mathbf{a}+\mathbf{w}(t,x).
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathbf{\zeta}$
\end_inset

 is a delta-correlated complex noise vector field: 
\begin_inset Formula 
\begin{equation}
w_{j}(t,\mathbf{x})=\left[w_{j}^{re}(t,\mathbf{x})+i\zeta_{j}^{im}(t,\mathbf{x})\right]/\sqrt{2},
\end{equation}

\end_inset

with the initial condition that the initial noise is delta-correlated in
 position space 
\begin_inset Formula 
\begin{equation}
a(0,\mathbf{x})=\mathbf{\zeta}^{(in)}(\mathbf{x})
\end{equation}

\end_inset

where: 
\begin_inset Formula 
\begin{equation}
\mathbf{\zeta}^{(in)}(\mathbf{x})=\left[\mathbf{\zeta}^{re(in)}(\mathbf{x})+i\mathbf{\zeta}^{im(in)}(\mathbf{x})\right]/\sqrt{2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This has an exact solution for the noise intensity in either ordinary space
 or momentum space: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle \left|a_{j}\left(t,\mathbf{x}\right)\right|^{2}\right\rangle  & = & (1+t)/dV\nonumber \\
\left\langle \left|\tilde{a}_{j}\left(t,\mathbf{k}\right)\right|^{2}\right\rangle  & = & (1+t)/dV_{k}\nonumber \\
\left\langle \tilde{a}_{1}\left(t,\mathbf{k}\right)\tilde{a}_{2}^{*}\left(t,\mathbf{k}\right)\right\rangle  & = & 0.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Here, the noise is delta-correlated, and 
\begin_inset Formula $dV$
\end_inset

, 
\begin_inset Formula $dV_{k}$
\end_inset

 are the cartesian space and momentum space lattice cell volumes, respectively.
 Suppose that 
\begin_inset Formula $n=n_{x}n_{y}$
\end_inset

 is the total number of spatial points, and there are 
\begin_inset Formula $n_{x(y)}$
\end_inset

 points in the x(y)-direction, so then: 
\begin_inset Formula 
\begin{eqnarray}
dV & = & dxdy\\
dV_{k} & = & dk_{x}dk_{y}=\frac{(2\pi)^{2}}{ndV}.\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
In the simulations, two planar noise fields are propagated, one using delta-corr
elated noise, the other with noise transformed to momentum space to allow
 filtering.
 This allows use of finite correlation lengths when needed, by including
 a frequency filter function that is used to multiply the noise in Fourier-space.
 The Fourier-space noise variance is the square of the filter function.
\end_layout

\begin_layout Standard
The first noise index, 
\begin_inset Formula $p.noises(1)$
\end_inset

, indicates how many noise fields are generated, while 
\begin_inset Formula $p.noises(2)$
\end_inset

 indicates how many of these are spatially correlated, via Fourier transform,
 filter and inverse Fourier transform.
 These appear to the user as additional noises, so the total is 
\begin_inset Formula $p.noises(1)+p.noises(2)$
\end_inset

.
 The filtered noises have a finite correlation length.
 They are correlated with the first 
\begin_inset Formula $p.noises(1)$
\end_inset

 x-space noises they are generated from, as this can be useful.
\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Itemize

\series bold
Solve the planar noise growth equation
\series default
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Planar()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Planar noise growth';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = [1,5,5];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.steps = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = [2,2];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [10,4,4];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @Initial;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @Da;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @Linear;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,p) a(1,:).*conj(a(1,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a_1(x)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare = @(p) [1+p.t]/p.dv;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.images = 4;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function a0 = Initial(v,p)
\end_layout

\begin_layout Plain Layout

\family typewriter
a0(1,:) = (v(1,:)+1i*v(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
a0(2,:) = (v(3,:)+1i*v(4,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function da = Da(a,w,p)
\end_layout

\begin_layout Plain Layout

\family typewriter
da(1,:) = (w(1,:)+1i*w(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
da(2,:) = (w(3,:)+1i*w(4,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function L = Linear(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
lap = p.Dx.^2+p.Dy.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
L(1,:) = 1i*0.5*lap(:);
\end_layout

\begin_layout Plain Layout

\family typewriter
L(2,:) = 1i*0.5*lap(:);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
Add a decay rate of 
\begin_inset Formula $-a$
\end_inset

 to the differential equation, then plot again
\series default
 
\end_layout

\begin_layout Itemize

\series bold
Add growth and nonlinear saturation terms
\series default
 
\end_layout

\begin_layout Subsection
Gross-Pitaevskii equation
\end_layout

\begin_layout Standard
The next example is a stochastic Gross-Pitaevskii (GP) equation 
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner2003Stochastic"
literal "false"

\end_inset

 in two dimensions, 
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}=\frac{i}{2}\nabla^{2}a-ia(V(r)-i\kappa(r)+\left|a\right|^{2})+\epsilon\eta\label{eq:Stochastic GPE}
\end{equation}

\end_inset

where 
\begin_inset Formula $\eta$
\end_inset

 is a correlated complex noise vector field: 
\begin_inset Formula 
\begin{equation}
\eta(t,\mathbf{x})=w_{1}(t,\mathbf{x})+iw_{2}(t,\mathbf{x}),
\end{equation}

\end_inset

with the initial condition that the initial random field and the noise are
 both filtered in momentum space 
\begin_inset Formula 
\begin{equation}
a(0,\mathbf{x})=a_{0}(\mathbf{x})+\epsilon\zeta^{(in)}(\mathbf{x})
\end{equation}

\end_inset

where: 
\begin_inset Formula 
\begin{equation}
\zeta^{(in)}(\mathbf{x})=v_{1}(\mathbf{x})+iv_{2}(\mathbf{x})
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We add a Gaussian filter in momentum space for both the initial random field
 and noise so that, if 
\begin_inset Formula $\tilde{w}\left(\mathbf{k}\right)$
\end_inset

 is a delta-correlated noise in momentum space: 
\begin_inset Formula 
\begin{align}
w\left(\mathbf{k}\right) & =\tilde{w}\left(\mathbf{k}\right)\exp\left(-\left|\mathbf{k}\right|^{2}\right)\nonumber \\
v\left(\mathbf{k}\right) & =\tilde{v}\left(\mathbf{k}\right)\exp\left(-\left|\mathbf{k}\right|^{2}\right)
\end{align}

\end_inset


\end_layout

\begin_layout Standard
This allows use of finite correlation lengths when needed, by including
 a frequency filter function that is used to multiply the noise in Fourier-space.
 The Fourier-space noise variance is the square of the filter function.
\end_layout

\begin_layout Standard
The first noise index, 
\begin_inset Formula $p.noises(1)$
\end_inset

, indicates how many noise fields are generated that are delta-correlated
 in 
\begin_inset Formula $x$
\end_inset

, while 
\begin_inset Formula $p.noises(2)$
\end_inset

 indicates how many of these are spatially correlated, via Fourier transform,
 filter and inverse Fourier transform.
 These appear to the user as additional noises, so the total is 
\begin_inset Formula $p.noises(1)+p.noises(2)$
\end_inset

.
 The filtered noises have a finite correlation length.
\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Itemize

\series bold
Solve the stochastic GP equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Stochastic GPE"
plural "false"
caps "false"
noprefix "false"

\end_inset

, with a noise coefficient of 
\begin_inset Formula $b=0.1$
\end_inset

, 
\begin_inset Formula $V=0.01\left|\mathbf{x}\right|^{2},$
\end_inset

 
\begin_inset Formula $\kappa=0.001\left|\mathbf{x}\right|^{4}$
\end_inset

, and a stored output data file.

\series default
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = GPE()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'GPE';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = [101,64,64];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = [1,20,20];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = [0,2];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.rfilter = @(w,p) w.*exp(-p.kx.^2-p.ky.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.nfilter = @(v,p) v.*exp(-p.kx.^2-p.ky.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
b = @(xi) .1*(xi(1,:,:)+1i*xi(2,:,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) (p.x+1i*p.y)./(1+10*(p.x.^2 +...
\end_layout

\begin_layout Plain Layout

\family typewriter
p.y.^2))+b(v);
\end_layout

\begin_layout Plain Layout

\family typewriter
V = @(p) 0.01*(p.x.^2 + p.y.^2)-0.001*1i*(p.x.^2 +...
\end_layout

\begin_layout Plain Layout

\family typewriter
p.y.^2).^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) -1i*a.*(V(p)+conj(a).*a)+b(w);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) 0.5*1i*(p.Dx.^2+p.Dy.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) a.*conj(a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.images = {2};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.imagetype = {2};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.file = 'GPE.mat';
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(p.file,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Characteristic equation
\end_layout

\begin_layout Standard
The next example is the characteristic equation for a traveling wave at
 constant velocity 
\begin_inset CommandInset citation
LatexCommand cite
key "courant2008methods"
literal "false"

\end_inset

.
 It is included to illustrate what happens at periodic boundaries, when
 Fourier-transform methods are used for propagation.
 There are a number of methods known to prevent this effect, including addition
 of absorbers - called apodization - at the boundaries.
 The equation is: 
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}+\frac{da}{dx}=0.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=sech(2x+5)$
\end_inset

, this has an exact solution that propagates at a constant velocity: 
\begin_inset Formula 
\begin{eqnarray}
a(t,x) & = & sech(2(x-t)+5).
\end{eqnarray}

\end_inset

The time evolution at 
\begin_inset Formula $x=0$
\end_inset

 is simply: 
\begin_inset Formula 
\begin{eqnarray}
a(t,0) & = & sech(2(t-5/2)).
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Itemize

\series bold
Solve the characteristic equation given above, noting the effects of periodic
 boundaries.

\series default
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Characteristic()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Characteristic';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) sech(2.*(p.x+2.5));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,z,p) 0*a;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) -p.Dx;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'a_1(x)'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare = @(p) sech(2.*(p.t-2.5));
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
Recalculate with the opposite velocity, and a new exact solution.

\series default
 
\end_layout

\begin_layout Subsection
Nonlinear Anderson localization
\end_layout

\begin_layout Standard
A random potential 
\emph on
prevents
\emph default
 normal wave-packet spreading in quantum-mechanics.
 This is Anderson localization 
\begin_inset CommandInset citation
LatexCommand cite
key "Anderson1958Absence"
literal "false"

\end_inset

: a famous property of quantum mechanics in a random potential.
 A typical experimental method is to confine an ultra-cold Bose-Einstein
 condensate (BEC) in a trap, then release the BEC in a random external potential
 produced by a laser 
\begin_inset CommandInset citation
LatexCommand cite
key "billy2008direct"
literal "false"

\end_inset

.
 The expansion rate of the BEC is reduced by the Anderson localization due
 to the random potential.
 Physically, the observable quantity is the particle density 
\begin_inset Formula $n=\left|\psi\right|^{2}$
\end_inset

, but there is a complication, which is that there are nonlinearities from
 atomic scattering 
\begin_inset CommandInset citation
LatexCommand cite
key "pikovsky2008destruction"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
This can be treated either using a Schrodinger equation with a random potential,
 at low density, or using the Gross-Pitaevskii (GP) equation to include
 atom-atom interactions at the mean field level.
 In this example of a problem where strong localization occurs, the general
 equations are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\psi}{\partial t}=\frac{1}{i\hbar}\left[-\frac{\hbar^{2}}{2m}\nabla^{2}+V\left(\mathbf{r}\right)+g\left|\psi\right|^{2}\right]\psi.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In calculations, it is best to use a dimensionless form by rescaling coordinates
 and fields.
 A simple way to simulate this with xSPDE is to treat 
\begin_inset Formula $\psi$
\end_inset

 as a scaled field 
\begin_inset Formula $a(1),$
\end_inset

 and to assume the random potential field 
\begin_inset Formula $V\left(\mathbf{r}\right)$
\end_inset

 as caused by interactions with second random field 
\begin_inset Formula $\left|a(2)\right|^{2}$
\end_inset

.
 This has the advantage that it is similar to the actual experiment and
 allows one to treat time-dependent potentials as well, if desired.
\end_layout

\begin_layout Standard
With the rescaling, this simplifies to: 
\begin_inset Formula 
\begin{equation}
\frac{\partial a_{1}}{\partial\tau}=i\left[\frac{\partial}{\partial\zeta^{2}}^{2}-\left|a_{2}\right|^{2}-\left|a_{1}\right|^{2}\right]a_{1}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
A convenient initial condition is to use: 
\begin_inset Formula 
\begin{eqnarray}
a_{1} & = & a_{0}\exp(-\zeta^{2})\nonumber \\
\left\langle a_{2}(\zeta)a_{2}(\zeta')\right\rangle  & = & v\delta\left(\zeta-\zeta'\right).
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Subsection*
Exercise
\end_layout

\begin_layout Itemize

\series bold
Solve Schrodinger's equation without a random potential, to observe expansion.

\series default
 
\end_layout

\begin_layout Itemize

\series bold
Include a random potential 
\begin_inset Formula $v$
\end_inset

, to observe localization.

\series default
 
\end_layout

\begin_layout Itemize

\series bold
Experiment with nonlinear terms and higher dimensions.

\series default
 
\end_layout

\begin_layout Standard
The GP equation is a mean field approximation; this is still not a full
 solution of the many-body problem! Also, the experiments are more complicated
 than this, and actually observe the momentum distribution.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
xSIM and xGRAPH
\begin_inset CommandInset label
LatexCommand label
name "sec:Projects:-xSIM-and"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes how to use xSPDE to run in a batch mode, as well
 as details of data storage and methods for graphing scanned parameters.
\end_layout

\begin_layout Section
Output data storage and batch jobs
\end_layout

\begin_layout Standard
An xSPDE session can either run simulations interactively, described in
 section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulating-an-SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

, or else using a function file called a project file.
 In either case, the Matlab path must include the xSPDE folder.
 For generating graphs automatically, the script input or project function
 should end with the combined function 
\series bold
xspde
\series default
.
\end_layout

\begin_layout Standard
Alternatively, it can be useful to divide xSPDE into its simulation function,
 xSIM, and its graphics function, xGRAPH, to allow graphs to be made at
 a later time from the simulation.
 In this case the function
\series bold
 
\begin_inset Formula $xsim$
\end_inset


\series default
 runs the simulation, and 
\begin_inset Formula $xgraph$
\end_inset

 makes the graphs.
 The two-stage option is better for running batch jobs which you can graph
 at a later time.
\end_layout

\begin_layout Subsection
Batch input template
\end_layout

\begin_layout Standard
To create a data file, you must enter the filename when running the simulation,
 using the 
\begin_inset Formula $p.file=filename$
\end_inset

 input.
 A typical xSPDE project function of this type, where all the data is stored
 is as follows: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function e = project.m
\end_layout

\begin_layout Plain Layout

\family typewriter
p.[label1] = [parameter1];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.[label2] = ...;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.file = '[myfile].mat'
\end_layout

\begin_layout Plain Layout

\family typewriter
[e,~,p] = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(p.file);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Alternatively, for an interactive session one can use the commands:
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\begin_layout Plain Layout

\family typewriter
[e,data,p] = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(data,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\end_inset


\family typewriter
 
\end_layout

\begin_layout Standard
This is specially useful if one wishes to have direct access to the data
 and graphics options, with possible multiple trials.
 When preparing a project file using the editor, click on the Run arrow
 above the editor window to run the job.
\end_layout

\begin_layout Standard
A batch job workflow is as follows: 
\end_layout

\begin_layout Itemize
Create the metadata 
\begin_inset Formula $p$
\end_inset

, including a file name, eg, 
\emph on
p.file='myfile.mat'
\emph default
.
 
\end_layout

\begin_layout Itemize
Change the Matlab directory path to your preferred directory.
 
\end_layout

\begin_layout Itemize
Run the simulation with
\series bold
 
\series default
\emph on
[e,data, p] = xsim(p)
\emph default
, or just 
\emph on
xsim(p)
\emph default
.
 
\end_layout

\begin_layout Itemize
Run 
\emph on
xgraph(p.file)
\emph default
, and the data will be graphed.
 
\end_layout

\begin_layout Itemize
Alternatively, 
\emph on
xgraph(p.file,p)
\emph default
 allows you to change the inputs in the structure 
\begin_inset Formula $p$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Graph outputs can be stored using the 
\emph on
p.saveeps=1
\emph default
 and/or 
\emph on
p.savefig=1
\emph default
 options.
 
\end_layout

\begin_layout Standard
You can use either Matlab (.mat) or standard HDF5 (.h5) file-types for data
 storage.
 If raw data is generated it will be stored too, but the files can be large.
 For stored graphics files the options are encapsulated postscript (.eps)
 files or Matlab graphics (.fig) files, obtained using the graphics input
 switches 
\emph on
p.saveeps 
\emph default
and/or
\emph on
 p.savefig.
\end_layout

\begin_layout Section
Graphical data
\end_layout

\begin_layout Standard
The following table show how xSPDE output data is stored, which helps customize
 and extend the code.
 There are several different types of arrays used.
 The observed averages are generated internally from the observe functions,
 
\emph on
p.observe
\emph default
.
 These are then modified by user functions 
\emph on
p.function
\emph default
, and exported as graphics data.
\end_layout

\begin_layout Standard
The internal averages and the exported graphics data are as follows: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Indices 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
av 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\{n\}(\ell,\mathbf{j})$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observed averages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\{s\}\{n\}(\ell,\mathbf{j},c)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graph data
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Here: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $s$
\end_inset

 is the sequence index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $n$
\end_inset

 is the graph index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\ell$
\end_inset

 is the graphics line index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $j_{1}$
\end_inset

 is the time index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathbf{j}=j_{1},j_{2},\dots j_{d}$
\end_inset

 is the space-time index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $c$
\end_inset

 is the check index 
\end_layout

\begin_layout Subsection
Check index uses
\end_layout

\begin_layout Standard
There are multiple uses for the last index, 
\emph on
c
\emph default
.
 It can be omitted if needed.
 If present, it stores data for errors and comparisons.
 This is indicated by the input parameter field 
\emph on

\begin_inset Formula $p.errors>0$
\end_inset


\emph default
, which is the index of the largest error field.
 If there are no parameters, or 
\begin_inset Formula $p.errors=0,$
\end_inset

 there is no error or comparison index.
 The standard value that xSIM outputs is 
\begin_inset Formula $p.errors=3.$
\end_inset


\end_layout

\begin_layout Standard
When the check index present, the index values are defined as follows: 
\end_layout

\begin_layout Description
\begin_inset Formula $c=1$
\end_inset

 for the average of the 
\emph on
n
\emph default
-th output function 
\end_layout

\begin_layout Description
\begin_inset Formula $c=2$
\end_inset

 for the time-step error, 
\end_layout

\begin_layout Description
\begin_inset Formula $c=3$
\end_inset

 for the sampling error.
 
\end_layout

\begin_layout Description
\begin_inset Formula $c=4$
\end_inset

 for (optional) comparisons 
\end_layout

\begin_layout Description
\begin_inset Formula $c=5$
\end_inset

 for (optional) systematic comparison errors 
\end_layout

\begin_layout Description
\begin_inset Formula $c=6$
\end_inset

 for (optional) statistical comparison errors 
\end_layout

\begin_layout Standard
If xGRAPH is used with data from an other source, with no simulation error
 fields, but with comparisons, then one simply puts 
\begin_inset Formula $p.errors=1$
\end_inset

, or if there is just one input error field 
\begin_inset Formula $p.errors=2$
\end_inset

.
\end_layout

\begin_layout Section
Scanned parameter plots
\end_layout

\begin_layout Standard
Since xSIM is a function that can be called, plots of results against simulation
 parameters are possible.
 This requires repeated calls to xSIM with different parameter values, together
 with data storage in an xGRAPH compatible form, and a call to xGRAPH.
 If different random seeds are required, the seed needs to be reset in each
 call.
 The relevant axes points plotted, labels and the values of scanned parameters
 also need to be input.
\end_layout

\begin_layout Standard
The simulation function xSIM uses the last data array index, 
\begin_inset Formula $c$
\end_inset

, to store the data values and up to two corresponding errors.
 This takes up three index values.
 A value of 
\begin_inset Formula $c=4$
\end_inset

 is used to store comparison data, and its errors if there are any in 
\begin_inset Formula $c=5,6$
\end_inset

.
 This can be used for exact results, approximations, or experimental data.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Scan.png
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Scanned-diffusion"

\end_inset


\emph on
Scanned parameter output with a variable diffusion, for the case of a pure
 Wiener process, 
\begin_inset Formula $\dot{a}=Bw(t)$
\end_inset

.
 Exact value is the dashed line.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Example: Scanned diffusion
\end_layout

\begin_layout Standard
As an example, consider the simplest possible stochastic equation, with
 a scanned diffusion: 
\begin_inset Formula 
\begin{equation}
\dot{a}=Bw(t)\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The equation is integrated over the interval 
\begin_inset Formula $t=0:10$
\end_inset

, with 
\begin_inset Formula $a=0$
\end_inset

 initially, using 
\begin_inset Formula $10^{4}$
\end_inset

 trajectories to give an expected error of around 
\begin_inset Formula $\pm1\%$
\end_inset

.
 The variance of 
\begin_inset Formula $a$
\end_inset

 at 
\begin_inset Formula $t=10$
\end_inset

 is plotted as a function of 
\begin_inset Formula $D=B^{2}$
\end_inset

, then compared to an exact value.
 The result is in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Scanned-diffusion"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 The corresponding code is given as well.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function e = WienerScan()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Wiener process';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [1000,10];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 12;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,z,p) z*p.B;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,p) a.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 '};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.glabels{1} = {'D'};
\end_layout

\begin_layout Plain Layout

\family typewriter
scanpoints = 25;
\end_layout

\begin_layout Plain Layout

\family typewriter
data{1}{1} = zeros(1,scanpoints,4);
\end_layout

\begin_layout Plain Layout

\family typewriter
for j = 1:scanpoints
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \quad{}
\end_inset

p.seed = j;
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \quad{}
\end_inset

p.B = sqrt((j-1)*0.1);
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \quad{}
\end_inset

[e,data1,input,~] = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \quad{}
\end_inset

data{1}{1}(1,j,1:3) = data1{1}{1}(1,p.points,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \quad{}
\end_inset

xk{1}{1}(j) = p.B^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \quad{}
\end_inset

D(j) = p.B^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
data{1}{1}(1,:,4) = input.ranges(1)*D(:);
\end_layout

\begin_layout Plain Layout

\family typewriter
input.xk = xk;
\end_layout

\begin_layout Plain Layout

\family typewriter
input.axes{1}{1} = 1:scanpoints;
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(data,input);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $p.deriv$
\end_inset

 defines the time derivative function 
\begin_inset Formula $\dot{a}$
\end_inset

, with 
\begin_inset Formula $w$
\end_inset

 being the delta-correlated Gaussian noise that is generated internally.
\end_layout

\begin_layout Section
Project examples
\end_layout

\begin_layout Subsection
Kubo project
\end_layout

\begin_layout Standard
To get started on more complex programs, we next simulate the Kubo oscillator,
 which is an oscillator with a random frequency: 
\begin_inset Formula 
\begin{equation}
\dot{a}=iaw.
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Itemize
Simulate the Kubo oscillator using a file, 
\begin_inset Formula $Kubo.m$
\end_inset

, with two ensemble levels to allow sampling error estimates.
 The error vector 
\begin_inset Formula $error$
\end_inset

 gives the total time-step error plus the sampling error.
 
\end_layout

\begin_layout Itemize
Increase the first ensemble size to check how it modifies the sampling errors.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [error] = Kubo()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Kubo oscillator';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [400,16];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,~) 1i*a.*w;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a_1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 '};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.file = 'kubo.mat';
\end_layout

\begin_layout Plain Layout

\family typewriter
[error,~,~,~] = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(p.file);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
This function generates a data file, 
\family typewriter
kubo.mat
\family default
.
 If you run this twice without deleting the earlier file, you will get a
 warning and the old file will be moved to a backup file-name, 
\family typewriter
kubo_1.mat
\family default
, to protect the earlier data.
 Note that xGRAPH will graph the data in the most recent file saved.
\end_layout

\begin_layout Standard
You can also include modified graphics parameters as a second input when
 running 
\family typewriter
xGRAPH, 
\family default
just in case the first graphs you generate need further changes.
\end_layout

\begin_layout Subsection
Gaussian diffraction
\end_layout

\begin_layout Standard
Free diffraction and absorption of a Gaussian wave-function in 
\begin_inset Formula $d-1=s$
\end_inset

 space dimensions, is given by the partial differential equation (PDE):
 
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}=-\frac{\gamma}{2}a+\frac{i}{2}D\nabla^{2}a.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The corresponding stochastic partial differential equation (SPDE) includes
 additional noise, so that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{da}{dt}=-\frac{\gamma}{2}a+\frac{i}{2}D\nabla^{2}a+bw(t,x).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The xSPDE spectral definition in space is: 
\begin_inset Formula 
\begin{equation}
\tilde{a}(t,\mathbf{k})=\frac{1}{\left[2\pi\right]^{s/2}}\int e^{i\mathbf{k}\cdot\mathbf{x}}a(t,\mathbf{x})d\mathbf{x}\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=exp(-\left|\mathbf{x}\right|^{2}/2)$
\end_inset

, this has an exact solution for the diffracted intensity with 
\begin_inset Formula $b=0$
\end_inset

, in either ordinary space or momentum space: 
\begin_inset Formula 
\begin{eqnarray}
\left|a\left(t,\mathbf{x}\right)\right|^{2} & = & \frac{1}{\left(1+\left(Dt\right)^{2}\right)^{s/2}}exp\left(-\left|\mathbf{x}\right|^{2}/\left(1+\left(Dt\right)^{2}\right)-\gamma t\right)\nonumber \\
\left|\tilde{a}\left(t,\mathbf{k}\right)\right|^{2} & = & exp\left(-\left|\mathbf{k}\right|^{2}-\gamma t\right).
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Subsection*
Exercises
\end_layout

\begin_layout Itemize
Simulate Gaussian diffraction in three dimensions using an xSPDE function
 
\end_layout

\begin_layout Itemize
Check your results against the exact solution 
\end_layout

\begin_layout Itemize
The example below stores data in a standard HDF5 file.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Gaussian()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 4;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) exp(-0.5*(p.x.^2+p.y.^2+p.z.^2));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) 1i*0.05*(p.Dx.^2+p.Dy.^2+p.Dz.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = @(a,p) a.*conj(a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a(x)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.file = 'Gaussian.h5';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.images = 4;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(p.file);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
Add an additive complex noise of 
\begin_inset Formula $0.01(w_{1}+iw_{2}$
\end_inset

) to the Gaussian differential equation, then replot with an average over
 
\begin_inset Formula $100$
\end_inset

 samples.

\series default
 
\end_layout

\begin_layout Itemize
Work out the exact solution and repeat the comparisons.
 
\end_layout

\begin_layout Standard
Note that for this, you'll need to add: 
\begin_inset Formula $p.deriv=@(a,w,p)\,\,..+0.01*(w(1,:)+i*w(2,:))$
\end_inset


\end_layout

\begin_layout Section
Hints
\end_layout

\begin_layout Itemize
When first using xSPDE, it is a good idea to run the batch test script,
 
\emph on
Batchtest
\emph default
.
 
\end_layout

\begin_layout Itemize

\emph on
Batchtest
\emph default
 uses the Matlab parallel toolbox installation.
 If you have no license for this, omit the third ensemble setting.
 
\end_layout

\begin_layout Itemize
To create a project file, it is often easiest to start with an existing
 example function using a similar equation: see the xAMPLES folder.
 
\end_layout

\begin_layout Itemize
Graphics parameters can be included in the xSIM inputs to modify graphs.
 
\end_layout

\begin_layout Itemize
Comparison functions can be included if you want to compare with analytic
 results.
 
\end_layout

\begin_layout Itemize
Chapters 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xSIM-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xGRAPH-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

 list the input parameters.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Stochastic methods
\begin_inset CommandInset label
LatexCommand label
name "sec:Algorithms"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes the general background to the choices of methods
 available, and how to add custom numerical algorithms if required.
\end_layout

\begin_layout Section
Introduction to algorithms
\end_layout

\begin_layout Standard
Stochastic, partial and ordinary differential equations are central to numerical
 mathematics.
 Ordinary differential equations have been known in some form ever since
 calculus was invented.
 There are a truly extraordinary number of algorithms used to solve these
 equations.
 One program cannot possibly provide all of them.
 This section provides an overview of the included algorithms, for the more
 advanced and expert user.
\begin_inset Newline newline
\end_inset

 xSPDE has six built-in choices of algorithm, with defaults.
 All built-in methods have an interaction picture and can be used with any
 space dimension, including 
\begin_inset Formula $dimensions=1$
\end_inset

, which is an ordinary stochastic equation.
 All can be used with stochastic or with non-stochastic equations, and with
 order extrapolation.
 
\begin_inset Newline newline
\end_inset

 For stochastic equations, the Euler method requires an Ito form of stochastic
 equation, the implicit Euler method requires an implicit Ito form, while
 the others should be used with the Stratonovich form of calculus.
 Each uses the interaction picture to take care of exactly soluble linear
 terms.
\end_layout

\begin_layout Subsection
Standard methods
\end_layout

\begin_layout Standard
The standard xSIM algorithms given below are available for ODEs, PDEs, SDEs
 and SPDEs.
 More advanced algorithms for specialized cases are described in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
For stochastic differential equations, which are non-differentiable, the
 usual rules of calculus do not apply because stochastic noise is non-differenti
able.
 It has fluctuations proportional to 
\begin_inset Formula $1/\sqrt{dtdV}$
\end_inset

, for noise defined on a lattice with temporal cell-size 
\begin_inset Formula $dt$
\end_inset

 and spatial cell-size 
\begin_inset Formula $dV$
\end_inset

.
 Hence, the usual differentiability and smoothness properties required to
 give high-order convergence for standard Runge-Kutta methods are simply
 not present.
 Instead, xSPDE has a built-in extrapolation to zero step-size for high-order
 stochastic convergence.
\end_layout

\begin_layout Standard
Many more complex higher order algorithms for stochastic integration exist
 but are not included in the current xSPDE distribution, and users are encourage
d to contribute their favorite methods.
\end_layout

\begin_layout Standard
We note here that there are multiple error sources possible.
 SDE/SPDE errors are often dominated by the sampling error, not discretization.
 In addition, all convergence theorems only apply to the limit of zero step-size.
 One may be very far from this regime in a given practical calculation.
 Analytic error estimates also have prefactors which are hard to calculate.
 However, xSPDE can numerically estimate both the discretization and sampling
 error for any given average observable.
\end_layout

\begin_layout Section
General differential form
\end_layout

\begin_layout Standard
The general equation treated is given in differential form as 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial\boldsymbol{a}}{\partial t}=\boldsymbol{A}\left[\boldsymbol{\nabla},\boldsymbol{a},t\right]+\underline{\mathbf{B}}\left[\boldsymbol{\nabla},\boldsymbol{a},t\right]\cdot\boldsymbol{\zeta}(t)+\underline{\mathbf{L}}\left[\boldsymbol{\nabla}\right]\cdot\boldsymbol{a}.\end{split}
\label{eq:Standard xspde SDE}
\end{equation}

\end_inset

It is convenient for the purposes of describing interaction picture methods,
 to introduce an abbreviated notation as: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\mathcal{D}\left[\mathbf{a},t\right]=\boldsymbol{A}\left[\boldsymbol{a},t\right]+\underline{\mathbf{B}}\left[\boldsymbol{a},t\right]\cdot\boldsymbol{\zeta}(t).\end{aligned}
\end{split}
\end{equation}

\end_inset

Hence, we can rewrite the differential equation in the form: 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial\boldsymbol{a}}{\partial t}=\mathcal{D}\left[\mathbf{a},t\right]+\underline{\mathbf{L}}\left[\boldsymbol{\nabla}\right]\cdot\boldsymbol{a}.\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Linear propagator
\end_layout

\begin_layout Standard
Next, we define a linear propagator.
 This is given formally by: 
\begin_inset Formula 
\begin{equation}
\begin{split}\mathcal{P}\left(\Delta t\right)=\exp\left(\Delta t\underline{\mathbf{L}}\left[\boldsymbol{\nabla}\right]\right)\end{split}
.
\end{equation}

\end_inset

Typically, but not necessarily, this is evaluated in Fourier space, where
 it should be just a diagonal term in the momentum vector conjugate to the
 transverse space coordinate.
 It will then involve a Fourier transform, multiplication by an appropriate
 function of the momentum, and then an inverse Fourier transform afterwards.
 For simplicity, the stochastic noise is assumed constant throughout the
 interval 
\begin_inset Formula $dt$
\end_inset

.
 The reader is referred to the literature for more details.
\end_layout

\begin_layout Standard
It is simple to add your own algorithm if you prefer a different one.
 Note that if they use an interaction picture, then 
\emph on
ipsteps
\emph default
 must be given explicitly to specify the interaction picture duration, where
 
\emph on
ipsteps
\emph default
 gives the number of sequential propagator steps in time required for the
 method.
\end_layout

\begin_layout Section
Standard methods
\end_layout

\begin_layout Standard
The standard methods are listed below.
 All of these can be used with any equation: ODE, SDE, PDE or SPDE, either
 with or without a linear interaction picture term.
\end_layout

\begin_layout Subsection

\emph on
Euler
\emph default
: Ito-Euler
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:euler"

\end_inset

 This is an explicit Ito-Euler method using an interaction picture.
 While traditional, it is not generally recommended.
 If it is used, very small step-sizes will generally be necessary to reduce
 errors to a usable level.
 This is because it is is only convergent to first order deterministically
 and tends to have large errors.
\end_layout

\begin_layout Standard
It is designed for use with an Ito form of stochastic equation.
 It requires one IP transform per step (
\shape italic

\begin_inset Formula $p.ipsteps=1$
\end_inset


\shape default
).
 Starting from time 
\begin_inset Formula $t=t_{n}$
\end_inset

, to get the next time point at 
\begin_inset Formula $t=t_{n+1}=t_{n}+\Delta t$
\end_inset

, one calculates: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\Delta\mathbf{a}_{n} & =\Delta t\mathcal{D}\left[\mathbf{a}_{n},t_{n}\right]\\
\mathbf{a}_{n+1} & =\mathcal{P}\left(\Delta t\right)\cdot\left[\mathbf{a}_{n}+\Delta\mathbf{a}_{n}\right]
\end{aligned}
\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection

\emph on
Implicit
\emph default
: implicit Ito-Euler
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:implicit"

\end_inset

 This is a fully implicit Ito-Euler method using an interaction picture.
 It is more robust, though slower, than the explicit form.
 If it is used, very small step-sizes will generally be necessary to reduce
 errors to a usable level.
\end_layout

\begin_layout Standard
This is because it is is only convergent to first order, and therefore tends
 to have large errors.
 It is designed for use with an implicit Ito form of stochastic equation.
 Note that this implies double the usual Stratonovich correction!
\end_layout

\begin_layout Standard
It requires one IP transform per step (
\begin_inset Formula $p.ipsteps=1$
\end_inset

).
 Starting from time 
\begin_inset Formula $t=t_{n}$
\end_inset

, to get the next time point at 
\begin_inset Formula $t=t_{n+1}=t_{n}+\Delta t$
\end_inset

, one calculates, using iteration to get the implicit result of the next
 time-point:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\bar{\mathbf{a}}^{(0)} & =\mathcal{P}\left(\Delta t\right)\cdot\left[\mathbf{a}_{n}\right]\\
\bar{\mathbf{a}}^{(i)} & =\bar{\mathbf{a}}^{(0)}+\Delta t\mathcal{D}\left[\bar{\mathbf{a}}^{(i-1)},t_{n+1}\right]\\
\mathbf{a}_{n+1} & =\bar{\mathbf{a}}^{(iter)}
\end{aligned}
\end{split}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\tilde{\mathbf{a}}_{n} & =\mathcal{P}\left(\Delta t\right)\cdot\left[\mathbf{a}_{n}\right]\\
\Delta\mathbf{a}_{n} & =\Delta t\mathcal{D}\left[\tilde{\mathbf{a}}_{n}+\Delta\mathbf{a}_{n},t_{n}\right]\\
\mathbf{a}_{n+1} & =\tilde{\mathbf{a}}_{n}+\Delta\mathbf{a}_{n}
\end{aligned}
\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection

\emph on
MP
\emph default
: Midpoint
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:midpoint"

\end_inset

 This is a semi-implicit midpoint method using an interaction picture.
 It gives good results for stochastic and stochastic partial differential
 equations.
 It is convergent to second order in time for deterministic equations and
 for stochastic equations with commuting noise.
 It is strongly convergent and robust.
 It requires two half-length IP transforms per step (
\begin_inset Formula $p.ipsteps=2$
\end_inset

).
\end_layout

\begin_layout Standard
To get the next time point, one calculates a midpoint derivative iteratively
 at time to get the next time point at 
\begin_inset Formula $t=t_{n+1/2}=t_{n}+\Delta t/2$
\end_inset

, to give an estimated midpoint field 
\begin_inset Formula $\bar{\mathbf{a}}^{(i)}$
\end_inset

, usually with four iterations.
 The number of iterations can be changed: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\bar{\mathbf{a}}^{(0)} & =\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\mathbf{a}_{n}\right]\\
\bar{\mathbf{a}}^{(i)} & =\bar{\mathbf{a}}^{(0)}+\frac{\Delta t}{2}\mathcal{D}\left[\bar{\mathbf{a}}^{(i-1)},t_{n+1/2}\right]\\
\mathbf{a}_{n+1} & =\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\left[2\bar{\mathbf{a}}^{(iter)}-\bar{\mathbf{a}}^{(0)}\right]
\end{aligned}
\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This is the default method for stochastic cases.
\end_layout

\begin_layout Subsection

\emph on
MPadap
\emph default
t: adaptive midpoint
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:midpoint-1"

\end_inset

 This is an implicit midpoint method using an interaction picture, together
 with an adaptive technique for integrating highly nonlinear equations.
 At low amplitudes it is identical to the standard midpoint method.
 For amplitudes 
\begin_inset Formula $|a_{i}|^{2}$
\end_inset

 above a critical value, 
\emph on
p.adapt
\emph default
, the amplitude is inverted and propagated using the differential equation
 for its inverse.
\end_layout

\begin_layout Standard
Initially a switch 
\begin_inset Formula $p$
\end_inset

 is set to 
\begin_inset Formula $1$
\end_inset

 for low amplitudes, and 
\begin_inset Formula $-1$
\end_inset

 for high amplitudes.
 To get the next time point, one calculates a midpoint derivative iteratively
 at time to get the next time point at 
\begin_inset Formula $t=t_{n+1/2}=t_{n}+\Delta t/2$
\end_inset

, to give an estimated midpoint field 
\begin_inset Formula $\bar{\mathbf{a}}^{(i)}$
\end_inset

, as above, but with the derivative modified to give the derivative of 
\begin_inset Formula $a_{i}^{p}$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\bar{\mathbf{a}}^{(0)} & =\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\mathbf{a}_{n}\right]\\
\tilde{\mathbf{a}}^{(0)} & =\mathbf{a}_{n}^{p}\\
\tilde{\mathbf{a}}^{(i)} & =\tilde{\mathbf{a}}^{(0)}+\frac{\Delta t}{2}p\left[\tilde{\mathbf{a}}^{(i-1)}\right]{}^{1-p}\left(\mathcal{D}\left[[\tilde{\mathbf{a}}^{(i-1)}]^{p},t_{n+1/2}\right]\right)\\
\mathbf{a}_{n+1} & =\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\left[2\tilde{\mathbf{a}}^{(iter)}-\tilde{\mathbf{a}}^{(0)}\right]^{p}
\end{aligned}
\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection

\emph on
RK2
\emph default
: second order Runge-Kutta
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:second-order-runge-kutta"

\end_inset

 This is a second order Runge-Kutta method using an interaction picture.
 It is convergent to second order in time for non-stochastic equations,
 and for stochastic equations with additive noise, but otherwise it is first
 order.
 It often has higher errors than midpoint methods.
 It requires two IP transforms per step, but each is a full time-step long
 (
\begin_inset Formula $p.ipsteps=1$
\end_inset

).
\end_layout

\begin_layout Standard
To get the next time point, one calculates: 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\bar{\mathbf{a}} & =\mathcal{P}\left(\Delta t\right)\cdot\left[\mathbf{a}_{n}\right]\\
\mathbf{d}^{(1)} & =\Delta t\mathcal{P}\left(\Delta t\right)\cdot\mathcal{D}\left[\mathbf{a}_{n},t_{n}\right]\\
\mathbf{d}^{(2)} & =\Delta t\mathcal{D}\left[\bar{\mathbf{a}}+\mathbf{d}^{(1)},t_{n+1}\right]\\
\mathbf{a}_{n+1} & =\bar{\mathbf{a}}+\left(\mathbf{d}^{(1)}+\mathbf{d}^{(2)}\right)/2.
\end{aligned}
\end{split}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection

\emph on
RK4
\emph default
: fourth order Runge-Kutta
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:fourth-order-runge-kutta"

\end_inset

 This is a fourth order Runge-Kutta method using an interaction picture.
 It is convergent to fourth order in time for non-stochastic equations,
 but for stochastic equations it can be more slowly convergent than the
 midpoint method.
 It requires four half-length IP transforms per step (
\emph on
ipsteps
\emph default
 = 2).
 To get the next time point, one calculates four derivatives sequentially:
 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}\bar{\mathbf{a}} & =\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\mathbf{a}_{n}\right]\\
\mathbf{d}^{(1)} & =\frac{\Delta t}{2}\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\mathcal{D}\left[\mathbf{a}_{n},t_{n}\right]\\
\mathbf{d}^{(2)} & =\frac{\Delta t}{2}\mathcal{D}\left[\bar{\mathbf{a}}+\mathbf{d}^{(1)},t_{n+1/2}\right]\\
\mathbf{d}^{(3)} & =\frac{\Delta t}{2}\mathcal{D}\left[\bar{\mathbf{a}}+\mathbf{d}^{(2)},t_{n+1/2}\right]\\
\mathbf{d}^{(4)} & =\frac{\Delta t}{2}\mathcal{D}\left[\mathcal{P}\left(\frac{\Delta t}{2}\right)\left[\bar{\mathbf{a}}+2\mathbf{d}^{(3)},t_{n+1}\right]\right]\\
\mathbf{a}_{n+1} & =\mathcal{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\bar{\mathbf{a}}+\left(\mathbf{d}^{(1)}+2\left(\mathbf{d}^{(2)}+\mathbf{d}^{(3)}\right)\right)/3\right]+\mathbf{d}^{(4)}/3
\end{aligned}
\end{split}
\end{equation}

\end_inset

This might seem the obvious choice, having the highest order.
 However, it can converge at a range of apparent rates, depending on the
 relative importance of stochastic and non-stochastic terms.
 Due to its use of differentiability, it may converge more slowly than the
 midpoint method with stochastic terms present.
 It is the default for ODE and PDE cases.
\end_layout

\begin_layout Section
Advanced methods
\end_layout

\begin_layout Standard
Three more advanced method libraries are included here, namely 
\emph on
weighted
\emph default
, 
\emph on
projected
\emph default
 and 
\emph on
forward-backward
\emph default
 stochastic differential equations.
 If you have a favorite algorithm that is not included, user-defined algorithms
 and libraries can be added.
 The existing methods are listed below, and the corresponding 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

.m
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

-files can be used as a model.
\end_layout

\begin_layout Standard
Define the routine, for example 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

myalgorithm.m
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, set 
\shape italic

\begin_inset Formula $p.method=@myalgorithm$
\end_inset


\shape default
, then adjust the input value of 
\emph on
ipsteps
\emph default
 and 
\emph on
order
\emph default
 if these need be changed to a new value.
 The interaction-picture transform, 
\emph on
prop
\emph default
, can also be changed if the built-in choice is not sufficient.The xSPDE
 algorithms available currently treat 
\end_layout

\begin_layout Itemize
ordinary (and partial) differential equations 
\end_layout

\begin_layout Itemize
stochastic differential equations 
\end_layout

\begin_layout Itemize
stochastic partial differential equations 
\end_layout

\begin_layout Itemize
weighted stochastic differential equations 
\end_layout

\begin_layout Itemize
projected stochastic differential equations, 
\end_layout

\begin_layout Itemize
forward-backward stochastic differential equations 
\end_layout

\begin_layout Standard
The first three have already been treated.
 In this section, we explain the last three cases, which involve more specialize
d libraries of functions.
\end_layout

\begin_layout Subsection
Additional inputs
\end_layout

\begin_layout Standard
Some of the more advanced features of the libraries require additional input
 parameters.
 In particular: 
\end_layout

\begin_layout Description
backfields is used for forward-backward stochastic equations, describing
 backward time components.
 These are described in the 
\emph on
Forward-backward
\emph default
 section.
 Note that 
\series bold
fields
\series default
 is still used, and it gives the total number of forward+backward fields.
 
\end_layout

\begin_layout Description
auxfields gives the number of auxiliary fields.
 These have a functional definition (
\emph on
defines
\emph default
) that includes both a field and noise variable, as needed for spectral
 observables.
 Field index numbers 
\begin_inset Formula $i$
\end_inset

 greater than 
\begin_inset Formula $fields$
\end_inset

 access the auxiliary fields in the 
\emph on
observe
\emph default
 function.
 
\end_layout

\begin_layout Section
Weighted library
\end_layout

\begin_layout Standard
In some types of stochastic equation, there is a weight associated with
 each trajectory, which is used to weight the probability of the trajectory
 
\begin_inset CommandInset citation
LatexCommand cite
key "kiesewetter2022coherent"
literal "false"

\end_inset

.
 This type of equation is sometimes found when dealing with quantum trajectories
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dalibard1992Wave,Carmichael1993Quantum"
literal "false"

\end_inset

 and feedback 
\begin_inset CommandInset citation
LatexCommand cite
key "Hush2013Controlling"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
The equations still have the standard form of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

, with an extra weight equation, Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:SDE-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 However, the results for mean values are weighted by a term 
\begin_inset Formula $\exp\left(\Omega\left(t\right)\right)$
\end_inset

, so that: 
\begin_inset Formula 
\begin{equation}
\left\langle \mathbf{O}\right\rangle _{\Omega}=\frac{\sum_{n}\mathbf{O}\left(\mathbf{a}^{\left(n\right)}\right)\exp\left(\Omega^{\left(n\right)}\left(t\right)\right)}{\sum_{n}\exp\left(\Omega^{\left(n\right)}\left(t\right)\right)}.\label{eq:Weighted-averages}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This reduces to the standard expression of Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:averages-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 in the case that 
\begin_inset Formula $\Omega\left(t\right)=0$
\end_inset

.
 To simulate these equations automatically, the weight exponent 
\begin_inset Formula $\Omega$
\end_inset

 is integrated as the 
\emph on
last
\emph default
 field in the vector 
\begin_inset Formula $\mathbf{a}$
\end_inset

, which must have at least two components.
 A nonzero threshold weight, 
\begin_inset Formula $thresholdw$
\end_inset

, must be entered to allow calculation of breeding.
\end_layout

\begin_layout Standard
With these changes, averages in each vector ensemble are calculated using
 Eq 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Weighted-averages"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Before each plotted step in the calculation, a breeding calculation is
 carried out.
 There are 
\begin_inset Formula $p.steps(1)-1$
\end_inset

 of these in total.
 During breeding, any weight such that 
\begin_inset Formula $\exp\left(\Omega^{(n)}\right)<thresholdw/\left\langle \exp\left(\Omega\right)\right\rangle $
\end_inset

 is removed.
\end_layout

\begin_layout Standard
The most probable trajectory is then duplicated to replace the low-weight
 trajectory.
 Both exponential weights are halved, so the total weight of the remaining
 trajectories is unchanged.
 If they are complex, weights such that 
\begin_inset Formula $\exp\left(Re\left(\Omega^{(n)}\right)\right)<thresholdw/\left\langle \exp\left(Re\left(\Omega\right)\right)\right\rangle $
\end_inset

 are removed, and the real weight of the bred trajectory is reduced, which
 removes any low-weight trajectories that don't contribute.
 When used, the internal variable 
\emph on
p.breedw 
\emph default
is set to allow the fraction of trajectories that are bred per step to be
 monitored.
 For weighted SPDEs, the spatial weights 
\begin_inset Formula $\Omega(x_{j})$
\end_inset

 are summed over space points to obtain 
\begin_inset Formula $\Omega$
\end_inset

.
\end_layout

\begin_layout Subsection
Example
\end_layout

\begin_layout Standard
The following example shows how weights are implemented.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Weightcheck()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Weightcheck';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [10000,10,1];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 6;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.order = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.thresholdw = 0.1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.diffplot = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w,p) [1+w(1,:);0*w(2,:)];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,z,p) [-a(1,:)+ z(1,:);-a(2,:)+...
\end_layout

\begin_layout Plain Layout

\family typewriter
z(2,:)];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) a(1,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) p.breedw;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{1} = @(p) exp(-p.t);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{1} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{2} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 fractional breeds per step
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xcheck(2,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
This algorithm converges with second-order accuracy for this exercise, due
 to the structure of the equation.
 The example also demonstrates how to use the 
\emph on
xcheck
\emph default
 function instead of 
\emph on
xspde
\emph default
, to check convergence.
\end_layout

\begin_layout Section
Projection library
\end_layout

\begin_layout Standard
It is sometimes necessary to constrain an equation to a sub-manifold 
\begin_inset CommandInset citation
LatexCommand cite
key "Joseph2023midpoint"
literal "false"

\end_inset

, with an equation of form: 
\begin_inset Formula 
\begin{equation}
\mathbf{f}\left(\mathbf{a}\right)=0,
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathbf{f}\left(\mathbf{a}\right)$
\end_inset

 is a scalar or vector function that defines the relevant manifold in Euclidean
 space.
 The projected SDE then has the form of a Stratonovich SDE, where: 
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\mathcal{P}_{\mathbf{a}}^{\parallel}\left[\mathbf{A}\left[\mathbf{a}\right]+\underline{\mathbf{B}}\left[\mathbf{a}\right]\cdot\mathbf{w}(t)\right]\,,
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathcal{P}_{\mathbf{a}}^{\parallel}$
\end_inset

 is a tangential projection operator at location 
\begin_inset Formula $\mathbf{a}$
\end_inset

 on the sub-manifold, and as usual, 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is a vector, 
\begin_inset Formula $\underline{\mathbf{B}}$
\end_inset

 a matrix and 
\begin_inset Formula $\mathbf{w}$
\end_inset

 is a real Gaussian noise vector, delta-correlated in time.
 Similarly, the general stochastic partial differential equation can be
 written in projected form as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\mathcal{P}_{\mathbf{a}}^{\parallel}\left[\mathbf{A}\left[\mathbf{a}\right]+\underline{\mathbf{B}}\left[\mathbf{a}\right]\cdot\mathbf{w}(t,\mathbf{x})+\underline{\mathbf{L}}\left[\mathbf{\nabla},\mathbf{a}\right]\,\right].
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
When numerically integrating these, it is also useful to have a normal projectio
n 
\begin_inset Formula $\mathcal{P}^{\perp}$
\end_inset

available.
 This is used to normally project to the nearest point on the manifold,
 to eliminate constraint errors.
 These are solved using functions collected in a projection library, to
 provide the specialized methods that are needed for this purpose.
\end_layout

\begin_layout Standard
The projection library has three predefined algorithms, 
\end_layout

\begin_layout Itemize

\series bold
\emph on
Enproj
\series default
\emph default
,
\emph on
 
\emph default
 
\end_layout

\begin_layout Itemize

\series bold
\emph on
MPproj
\series default
\emph default
, 
\end_layout

\begin_layout Itemize

\series bold
\emph on
MPnproj
\series default
\emph default
.
 
\end_layout

\begin_layout Standard
Here the capital E stands for Euler, MP for midpoint.
 All use tangential projection.
 The letter 
\emph on
n=normal
\emph default
 indicates if an additional normal projection is used.
 In all cases, if it is present, a normal projection is used last.
 The recommended type is 
\series bold
\emph on
MPnproj
\series default
\emph default
, due to its much lower errors.
\end_layout

\begin_layout Standard
Tangential and normal projections are needed to define the geometry of any
 sub-manifold.
 These are input by setting the variable 
\emph on
project
\emph default
 equal to a function handle that defines the projection.
 These can be user provided if required.
 There are three different predefined manifold geometry types, which need
 different inputs, given below.
\end_layout

\begin_layout Subsection
Calling the 
\emph on
project
\emph default
 function
\end_layout

\begin_layout Standard
The calling arguments for the 
\emph on
project
\emph default
 function are: 
\emph on
(d,a,n,p)
\emph default
, where d is a vector to be tangentially projected at location a, a is the
 current (near)-manifold location, n is an option switch, and p is the parameter
 structure.
\end_layout

\begin_layout Standard
The options available in any 
\emph on
project
\emph default
 implementation are defined as: 
\end_layout

\begin_layout Itemize

\shape italic
n = 0
\shape default
 returns the tangent vector for testing 
\end_layout

\begin_layout Itemize

\shape italic
n = 1
\shape default
 returns the tangential projection of 
\emph on
d
\emph default
 at 
\emph on
a
\emph default
 
\end_layout

\begin_layout Itemize

\shape italic
n = 2
\shape default
 returns the normal projection of 
\emph on
a
\emph default
, where 
\emph on
d
\emph default
 is not used 
\end_layout

\begin_layout Itemize

\shape italic
n = 4
\shape default
 returns the constraint function at 
\emph on
a
\emph default
 for testing 
\end_layout

\begin_layout Standard
The projections defined in an xSPDE 
\emph on
project
\emph default
 function can be of any type.
 Arbitrary dimension reduction and manifold geometry is possible.
 Currently in the examples, dimensionality is reduced by 1, and normal projectio
ns use fixed point iterations, defined by 
\emph on
iterproj
\emph default
.
\end_layout

\begin_layout Subsection
The predefined manifold geometries
\end_layout

\begin_layout Standard
The current manifolds, by setting p.project = @Quadproj ..., are as follows:
 
\end_layout

\begin_layout Enumerate
Quadratic - 
\emph on
Quadproj
\emph default
 - needs: 
\emph on
qcproj
\emph default
 defined by 
\begin_inset Formula $f=\sum q{}_{ij}x^{i}x^{j}-1=0$
\end_inset

 
\end_layout

\begin_layout Enumerate
Polynomial - 
\emph on
Polproj
\emph default
 - needs: 
\emph on
vcproj
\emph default
 defined by 
\begin_inset Formula $f=\sum v_{i}(x^{i})^{p}-1=0$
\end_inset

 
\end_layout

\begin_layout Enumerate
Catenoid - 
\emph on
Catproj
\emph default
 - uses fixed coefficients defined by 
\begin_inset Formula $f=(x_{1})^{2}+(x_{2})^{2}-(sinh(x_{3}))^{2}-1=0$
\end_inset

 
\end_layout

\begin_layout Standard
Any other manifold can be used by replacing these predefined manifolds with
 an appropriate 
\emph on
project
\emph default
 function.
\end_layout

\begin_layout Section
Forward-backward library
\end_layout

\begin_layout Standard
The xSPDE forward-backward library implements an iterative stochastic method
 which propagates an SDE or PSDE forward and backward in time.
 This is used to treat Q-function phase-space methods, which do not have
 a positive-definite diffusion 
\begin_inset CommandInset citation
LatexCommand cite
key "Drummond2020Retrocausal"
literal "false"

\end_inset

.
 The iteration converges in simple cases, typically with no cross-coupling
 apart from boundary conditions.
 It uses the algorithm 
\emph on
MPfb.
\end_layout

\begin_layout Standard
The general FB equations have the following structure, written as an integral
 equation to make it clear what the relevant boundary conditions are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\mathbf{p}\left(t\right) & =\mathbf{p}\left(0,\mathbf{q}\left(0\right)\right)+\int_{0}^{t}\left\{ \mathbf{A}^{p}\left[\mathbf{a}\left(t'\right)\right]dt'+\underline{\mathbf{B}}^{p}\left[\mathbf{a}\left(t'\right)\right]\cdot d\mathbf{w}^{p}(t')\right\} \nonumber \\
\mathbf{q}\left(t\right) & =\mathbf{q}\left(T,\mathbf{p}\left(T\right)\right)+\int_{t}^{T}\left\{ \mathbf{A}^{q}\left[\mathbf{a}\left(t'\right)\right]dt'+\underline{\mathbf{B}}^{q}\left[\mathbf{a}\left(t'\right)\right]\cdot d\mathbf{w}^{q}(t')\right\} .
\end{align}

\end_inset

Here, 
\begin_inset Formula $\mathbf{a}=\left[\mathbf{p},\mathbf{q}\right]$
\end_inset

 includes forward components 
\begin_inset Formula $\mathbf{p}$
\end_inset

 and backwards components 
\begin_inset Formula $\mathbf{q}$
\end_inset

.
 These have 
\begin_inset Quotes eld
\end_inset

initial
\begin_inset Quotes erd
\end_inset

 conditions in the past and the future, respectively, and can depend on
 random inputs, just as with ordinary stochastic equations.
\end_layout

\begin_layout Standard
The library includes the 
\emph on
xpathfb
\emph default
 function which replaces the 
\emph on
xpath
\emph default
 function, which is used automatically.
 However, the user must specify a modified step integrator, either 
\emph on
Eulerfb
\emph default
 or 
\emph on
MPfb
\emph default
.
 The 
\emph on
initial
\emph default
 and deriv routines require additional arguments, which are described in
 the table below, and are used during the iteration scheme.
\end_layout

\begin_layout Standard
The noise terms 
\begin_inset Formula $\mathbf{w}=\left[\mathbf{w}^{p},\mathbf{w}^{q}\right]$
\end_inset

 are uncorrelated real Gaussian noises: 
\begin_inset Formula 
\begin{equation}
\left\langle dw_{i}^{\alpha}\left(\mathbf{x}\right)dw_{j}^{\beta}\left(\mathbf{x}'\right)\right\rangle =\delta_{ij}\delta_{\alpha\beta}dt.
\end{equation}

\end_inset

This is solved in differential form, where 
\begin_inset Formula $t_{-}=T-t$
\end_inset

, as: 
\begin_inset Formula 
\begin{align}
\frac{\partial\mathbf{p}}{\partial t} & =\mathbf{A}^{p}\left[\mathbf{a}\right]+\underline{\mathbf{B}}^{p}\left[\mathbf{a}\right]\cdot\mathbf{w}^{p}(t)\,\nonumber \\
\frac{\partial\mathbf{q}}{\partial t_{-}} & =\mathbf{A}^{q}\left[\mathbf{a}\right]+\underline{\mathbf{B}}^{q}\left[\mathbf{a}\right]\cdot\mathbf{w}^{q}(t)\,.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Each equation is solved by iteration.
 The previous value of the counter-propagating field, ie 
\begin_inset Formula $\mathbf{a}^{(n-1)}$
\end_inset

, is used to solve for 
\begin_inset Formula $\mathbf{a}^{(n)}$
\end_inset

 in step 
\begin_inset Formula $n$
\end_inset

, since the current value is not yet known.
 That is, the algorithm is: 
\begin_inset Formula 
\begin{align}
\frac{\partial\mathbf{p}^{(n)}}{\partial t} & =\mathbf{A}^{p}\left[\mathbf{p}^{(n)}\left(t\right),\mathbf{q}^{(n-1)}\left(t\right)\right]+\underline{\mathbf{B}}^{p}\left[\mathbf{p}^{(n)}\left(t\right),\mathbf{q}^{(n-1)}\left(t\right)\right]\cdot\mathbf{w}^{p}\left(t\right)\,\\
\frac{\partial\mathbf{q}^{(n)}}{\partial t_{-}} & =\mathbf{A}^{q}\left[\mathbf{p}^{(n-1)}\left(t_{-}\right),\mathbf{q}^{(n)}\left(t_{-}\right)\right]+\underline{\mathbf{B}}^{q}\left[\mathbf{p}^{(n-1)}\left(t_{-}\right),\mathbf{q}^{(n)}\left(t_{-}\right)\right]\cdot\mathbf{w}^{q}\left(t_{-}\right)\,,\nonumber 
\end{align}

\end_inset

Convergence is the responsibility of the user, and the algorithm has a fixed
 number of iterations.
 The starting point of the iteration is the path function 
\begin_inset Formula $fbfirst$
\end_inset

.
 The simulation requires the following additional inputs, including 
\begin_inset Formula $backfields$
\end_inset

, defining the backward components.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typical value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
backfields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of backward variables
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
initialfb
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function handle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $@(a0,a1,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial value for 
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
firstfb
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function handle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $@(a0,nc,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First trajectory estimate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
iterfb
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Forward-backward iterations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
method
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function handle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $@xMPfb$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Forward-backward algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
deriv
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function handle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $@(a,a_{-},w,p)$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Derivative function
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_layout Standard
In 
\emph on
initialfb
\emph default
, the 
\begin_inset Formula $a0$
\end_inset

 fields from the previous iteration are at the 
\emph on
first
\emph default
 times computed previously, so 
\begin_inset Formula $\mathbf{a}0=\left[\mathbf{p}^{(n-1)}\left(0\right),\mathbf{q}^{(n-1)}\left(T\right)\right]$
\end_inset

, while the 
\begin_inset Formula $a1$
\end_inset

 fields are evaluated at the 
\emph on
last
\emph default
 times computed from the previous iteration, so 
\begin_inset Formula $\mathbf{a}1=\left[\mathbf{p}^{(n-1)}\left(T\right),\mathbf{q}^{(n-1)}\left(0\right)\right]$
\end_inset

.
\end_layout

\begin_layout Standard
On the first call to 
\emph on
initialfb, with 
\emph default

\begin_inset Formula $p.iter=1$
\end_inset

, a startup procedure is used.
 In the startup procedure, 
\emph on
a0
\emph default
 is generated internally by 
\emph on
initialfb.
 
\emph default
However, 
\emph on
a1
\emph default
 is obtained in the internal calling function 
\emph on
xpathfb
\emph default
 using the output of 
\emph on
firstfb,
\emph default
 which gives an initial iterative path estimate of 
\begin_inset Formula $a$
\end_inset

.
 It returns a default path equal to the initial boundary value 
\begin_inset Formula $a0$
\end_inset

, if not defined by the user.
 More generally, it should be set to a value to allow iterations to converge.
 The calling arguments of 
\emph on
firstfb
\emph default
 include the initial boundaries 
\emph on
a0
\emph default
 and the usual check index (
\begin_inset Formula $nc=1,2$
\end_inset

).
\end_layout

\begin_layout Standard
The 
\emph on
initial
\emph default
 function returns 
\begin_inset Formula $a0$
\end_inset

, giving the current initial values.
 On the first iteration 
\emph on
initial
\emph default
 returns an internally defined 
\begin_inset Formula $a0$
\end_inset

.
 Subsequently it requires 
\begin_inset Formula $a0$
\end_inset

, the stored first iteration boundaries as well as 
\emph on
a1
\emph default
, the previous iteration end-points.
 The estimate for the previous path in the deriv function is obtained from
 the iteration starter function
\emph on
 firstfb
\emph default
 on the first iteration, and subsequently from a stored value.
\end_layout

\begin_layout Standard
Internally, the raw fields 
\begin_inset Formula $\mathbf{a}=\left[\mathbf{p},\mathbf{q}\right]$
\end_inset

 are stored in complementary time-orders, with 
\begin_inset Formula $\mathbf{p}$
\end_inset

 solved normally in forward time, and 
\begin_inset Formula $\mathbf{q}$
\end_inset

 solved in reverse temporal order.
\end_layout

\begin_layout Standard
When the previous iteration field is passed to 
\begin_inset Formula $deriv$
\end_inset

, the time-orders of the previous iteration are reversed so that previous
 iteration 
\begin_inset Formula $\mathbf{q}$
\end_inset

 times are the same as 
\begin_inset Formula $\mathbf{p}$
\end_inset

 times, and vice-versa.
 The previous fields are therefore at the same time as those of the complementar
y present field
\emph on
.

\emph default
 When passed to 
\begin_inset Formula $observe$
\end_inset

, both 
\begin_inset Formula $\mathbf{p},\mathbf{q}$
\end_inset

 are given in time-increasing order to allow synchronized observations.
\end_layout

\begin_layout Subsection
Example:
\end_layout

\begin_layout Standard
This is a trivial example, to illustrate the code structure.
 It has two counter-propagating stochastic processes, one decaying in the
 forward time direction, and one decaying in the backward time direction.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Fbcheck()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.backfields = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initialfb = @(~,~,w,p) 1+0.5*w;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [400,1,1];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.method = @MPfb;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,~,w,p) -a + w;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Integration errors
\begin_inset CommandInset label
LatexCommand label
name "sec:Integration-errors"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section describes how xSPDE estimates errors from time discretization
 and statistical sampling.
 Other numerical errors require manual checks.
\end_layout

\begin_layout Standard
Errors and the need for error-checking are an integral part of numerical
 calculations.
 This is more subtle in stochastic equations, because there are both multiple
 sources of errors and multiple outputs.
 The xSPDE philosophy is to compute the most relevant errors for every average
 output, since each output average may have quite different errors.
\end_layout

\begin_layout Section
Discretization errors
\end_layout

\begin_layout Standard
To check convergence, xSPDE repeats the calculations at least twice for
 checking step-sizes, and many times more in stochastic cases to estimate
 sampling errors.
 These checks can be turned on and off.
 
\emph on
If you think the checks make xSPDE slow, turn them off - but you won't get
 any error-estimates.

\emph default
 Whatever the application, you will find the error-estimates useful.
\end_layout

\begin_layout Standard
If the errors are too large relative to the application, you should decrease
 the time-steps or increase the number of samples.
 Which is needed depends on the type of error.
\end_layout

\begin_layout Standard
Errors caused by the finite time-domain step-size are checked automatically
 provided that 
\begin_inset Formula $checks=1$
\end_inset

 is specified, which is the default option.
 If 
\begin_inset Formula $checks=0$
\end_inset

 is used, there is no time-domain error check.
\end_layout

\begin_layout Standard
Errors due to a finite step-size are estimated by running a check simulations
 with half the initial step-size and the same random sequence, extrapolating
 to zero step-size if 
\begin_inset Formula $order>0$
\end_inset

 is specified, then returning an error bound as the difference of the two
 most accurate results.
 Any 2D output graphs plot error-bars if 
\begin_inset Formula $checks=1$
\end_inset

 was specified, provided they are large enough to plot.
 RMS output errors are also reported.
 Individual error bounds 
\begin_inset Formula $e\left(o\right)$
\end_inset

 are given in the output data, and the plots give 
\begin_inset Formula $\bar{o}\pm e\left(o\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Error-bars below a minimum relative size compared to the vertical range
 of the plot, specified by the graphics variable 
\begin_inset Formula $minbar$
\end_inset

, are not plotted.
 The default for this is 
\begin_inset Formula $minbar=0.01$
\end_inset

.
 All error bars are calculated individually for each type of data average.
 Minbar is a cell array that can can be set for each type of average or
 graph.
 If the cell argument is omitted, it applies globally.
 Error estimates are also given for functional transforms of averages.
\end_layout

\begin_layout Standard
If the errors are too large, one can either increase the 
\emph on
points
\emph default
, which gives more plotted points and lower errors, or increase the 
\emph on
steps, 
\emph default
which reduces the step size without changing the data resolution.
 The default algorithm and extrapolation order can also be changed.
 Error bars on graphs can be removed by setting 
\begin_inset Formula $checks=0$
\end_inset

 or increasing 
\begin_inset Formula $minbar$
\end_inset

.
\end_layout

\begin_layout Standard
Discretization errors caused by the finite spatial lattice are not currently
 checked in the xSIM code.
 They must be checked by comparing results with different transverse lattice
 ranges and step-size.
 Similarly, errors from probability binning are not checked.
\end_layout

\begin_layout Subsection
Discretization error outputs
\end_layout

\begin_layout Standard
In xSPDE, the discretization or step-size error due to finite time-step
 sizes is called the 
\begin_inset Quotes eld
\end_inset

step
\begin_inset Quotes erd
\end_inset

 error.
 For checking step errors, xSPDE allows the user to specify 
\begin_inset Formula $checks=1$
\end_inset

, which is the default option.
 This gives one integration at the specified step-size, and one at half
 the specified step-size.
 The data is plotted using the more accurate fine step-size results, but
 with the coarse time lattice in order to calculate the estimated discretization
 errors.
\end_layout

\begin_layout Standard
The RMS value of the step error for each computed function, normalized by
 the maximum modulus of the observable, is printed out after each xSPDE
 simulation.
 If the expected comparison value is zero, the absolute value is given.
\end_layout

\begin_layout Standard
Both fine and coarse time-step results employ identical underlying random
 noise processes, from the same initial random seed.
 To compensate for the grid size, the coarse time-step uses a sum of two
 successive fine noise increments.
 This has the advantage that any differences are only from the effects of
 the time-step on the integration accuracy.
\end_layout

\begin_layout Standard
If different noises were used, part of the measured error-bar would be from
 sampling errors.
 Where there is 2D graphical output, the error bars give the step error,
 if you set 
\begin_inset Formula $p.checks=1$
\end_inset

.
 The standard error-bar, with no extrapolation, has a half-size equal to
 the difference of the two most accurate results.
\end_layout

\begin_layout Standard
If computed, the discretization error is included in the graphical data
 outputs for all observables.
 It is accessed by setting the last index for the output data equal 2.
 The raw discretization error is generally a very cautious estimate, and
 may overestimate the errors.
 This estimate can be improved using extrapolation, explained next.
\end_layout

\begin_layout Section
Higher order convergence
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:convergence-checks"

\end_inset


\end_layout

\begin_layout Standard
xSPDE uses extrapolation to improve convergence, which requires an input
 of the 
\emph on
order
\emph default
.
 If this is non-zero, and 
\emph on
checks
\emph default
 are set to 1 to allow successive integration with two different step-sizes,
 the output of all data graphed will be extrapolated by assuming the method
 has the specified order.
 To remove extrapolation and obtain a more conservative mean and error-bar
 result, set 
\begin_inset Formula $p.order=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Extrapolation
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:extrapolation-order-and-error-bars"

\end_inset


\end_layout

\begin_layout Standard
Extrapolation is valuable for improving the accuracy of a differential equation
 solver.
 It is valid for small time-steps.
 Suppose an algorithm has a correct solution 
\begin_inset Formula $R_{0}$
\end_inset

, but returns a numerical result 
\begin_inset Formula $R$
\end_inset

 with an error order 
\begin_inset Formula $n$
\end_inset

.
 For small step-size, integration results 
\begin_inset Formula $R\left(dt\right)$
\end_inset

 with step-size 
\begin_inset Formula $dt$
\end_inset

 have an error of order 
\begin_inset Formula $dt^{n}$
\end_inset

, that is: 
\begin_inset Formula 
\begin{equation}
\begin{split}R\left(dt\right)=R_{0}+e\left(R\right)=R_{0}+k.dt^{n}.\end{split}
\end{equation}

\end_inset

Hence, from two results at different values of 
\begin_inset Formula $dt,$
\end_inset

 differing by a factor of 
\begin_inset Formula $2$
\end_inset

, one would obtain 
\begin_inset Formula 
\begin{equation}
\begin{split}\begin{aligned}R_{1} & =R\left(dt\right)=R_{0}+k.dt^{n}\\
R_{2} & =R\left(2dt\right)=R_{0}+2^{n}k.dt^{n}.
\end{aligned}
\end{split}
\end{equation}

\end_inset

The true result, extrapolated to the small-step size limit, is obtained
 by giving more weight to the fine step-size result, while 
\emph on
subtracting
\emph default
 from this a correction due to the coarse step-size calculation, to cancel
 the leading error term: 
\begin_inset Formula 
\begin{equation}
\begin{split}R_{0}=\frac{\left[R_{1}-R_{2}2^{-n}\right]}{\left[1-2^{-n}\right]}.\end{split}
\end{equation}

\end_inset

Thus, if we define a factor 
\begin_inset Formula $\epsilon$
\end_inset

 as 
\begin_inset Formula 
\begin{equation}
\begin{split}\epsilon\left(n\right)=\frac{1}{\left[2^{n}-1\right]}=\left(1,\frac{1}{3},\frac{1}{7}\ldots\right),\end{split}
\end{equation}

\end_inset

the true results are obtained from extrapolation to zero step-size as: 
\begin_inset Formula 
\begin{equation}
\begin{split}R_{0}=\left(1+\epsilon\right)R_{1}-\epsilon R_{2}.\end{split}
\end{equation}

\end_inset

The built-in algorithms have an order as ordinary differential equation
 integrators of 1, 1, 2, 2, 2, 4 respectively and will converge to this
 order at small step-sizes.
 Weak first order convergence is always obtainable for these single noise-step
 SDE methods 
\begin_inset CommandInset citation
LatexCommand cite
key "burrage2006comment"
literal "false"

\end_inset

.
 Second order convergence is obtained in some cases with midpoint, RK2 and
 RK4 algorithms.
\end_layout

\begin_layout Standard
Higher order convergence for the raw data is not guaranteed for the built-in
 SDE algorithms.
 The algorithms used do
\series bold
 not 
\series default
always converge to the standard ODE order when used for stochastic equations.
 Hence extrapolation higher than first order should be used with caution
 in stochastic calculations, unless more complex methods are used 
\begin_inset CommandInset citation
LatexCommand cite
key "Kloeden1992numerical"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Extrapolated error-bars
\end_layout

\begin_layout Standard
If extrapolation is used, the error bar half-size is the difference of the
 best raw estimate and the extrapolation.
 Extrapolated results are usually inside those given by the error-bars,
 however, note that: 
\end_layout

\begin_layout Itemize

\series bold
extrapolation with too high an order may under-estimate error bars
\series default
 
\end_layout

\begin_layout Itemize

\series bold
extrapolation with too low an order reduces the accuracy
\series default
 
\end_layout

\begin_layout Standard
Hence, xSPDE assumes a default order of 
\emph on
order
\emph default
 = 1 for all SDE and SPDE cases.
 This gives an extrapolated weak order of 
\begin_inset Formula $2$
\end_inset

 for stochastic cases.
 One can set 
\emph on
order
\emph default
 = 0 to remove the default, or use a higher order if preferred, although,
 as explained above, it requires some caution.
 For an ODE or PDE the default order is the usual deterministic order.
 For the default RK4 deterministic method, the default is 
\emph on
order
\emph default
 = 4.
 All orders are improved by one with extrapolation.
\end_layout

\begin_layout Standard
High-order convergence 
\emph on
without
\emph default
 extrapolation can also be obtained, either in special cases using the xSPDE
 methods, or by adding user-specified techniques.
 The xSPDE libraries can be readily extended by the user to include these,
 through defining a modified 
\emph on
method
\emph default
 function appropriately.
\end_layout

\begin_layout Section
Statistical errors
\end_layout

\begin_layout Standard
Sampling error estimation in xSIM uses three different techniques.
 
\end_layout

\begin_layout Itemize
xSIM uses sub-ensemble averaging, requiring high-level ensembles.
 
\end_layout

\begin_layout Itemize
For probability estimates, a Poissonian sampling error is used, based on
 counts.
 
\end_layout

\begin_layout Itemize
If there is a comparison probability, this is used for sampling error estimates.
 
\end_layout

\begin_layout Standard
This procedure leads to reliable sampling error estimates, and makes efficient
 use of the vector instruction sets used by Matlab.
 Ensembles are specified in three levels.
 The first, 
\emph on
ensembles(1)
\emph default
, is called the number of samples for brevity.
 All computed quantities returned by the 
\series bold
\emph on
observe
\series default
\emph default
 functions are first averaged over the samples, which are calculated efficiently
 using a parallel vector of trajectories.
 By the central limit theorem, these low-level sample averages are distributed
 as a normal distribution at large sample number.
\end_layout

\begin_layout Standard
Next, the sample averages are averaged again over the two higher level ensembles
, if specified.
 This time, the variance is accumulated.
 The variance of these distributions is used to estimate a standard deviation
 in the mean, since each computed quantity is now a normally distributed
 result.
 This method is applied to all the
\emph on
 
\emph default
observables.
 The two lines generated represent 
\begin_inset Formula $\bar{o}\pm\sigma\left(o\right)$
\end_inset

, where 
\begin_inset Formula $o$
\end_inset

 is the observe function output, and 
\begin_inset Formula $\sigma$
\end_inset

 is the standard deviation in the mean.
\end_layout

\begin_layout Standard
Here, 
\emph on
ensembles(2)
\emph default
 specifies ensembles computed in series.
 The highest level ensemble, 
\emph on
ensembles(3), 
\emph default
is used for parallel simulations.
 This is faster for a multiple core CPU or when the codes are run in a supercomp
uting environment, which requires the Matlab parallel toolbox.
 Either type of high-level ensemble, or both together, can be used to calculate
 sampling errors.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $ensembles(2)>1$
\end_inset

 or 
\begin_inset Formula $ensembles(3)>1$
\end_inset

, which allows xSPDE to calculate sampling errors, it will plot upper and
 lower limits of one standard deviation.
 If the sampling errors are too large, try increasing 
\begin_inset Formula $ensembles(1)$
\end_inset


\emph on
, 
\emph default
which increases the trajectories in a single thread.
 An alternative is to increase 
\begin_inset Formula $ensembles(2)$
\end_inset

, which is slower, but is only limited by the compute time, or else to increase
 
\begin_inset Formula $ensembles(3)$
\end_inset

, which gives higher level parallelization.
\end_layout

\begin_layout Standard
Each is limited in different ways: the first by memory, the second by time,
 the third by the number of cores.
 Sampling error control helps ensures accuracy.
\end_layout

\begin_layout Subsection
Sampling error
\end_layout

\begin_layout Standard
Quantitative sampling error estimation in xSPDE uses sub-ensemble averaging.
 Ensembles are specified in three levels, using vector, serial and parallel
 methods, respectively.
 The vector ensemble length, 
\shape italic
p.ensembles(1)
\shape default
, is called the number of samples for brevity.
 All quantities returned by the observe functions are averaged over the
 samples, which are calculated efficiently using a vector of trajectories.
\end_layout

\begin_layout Standard
By the central limit theorem, the sample averages are distributed as a normal
 distribution at large sample number.
 Next, the sample averages are averaged over the two higher level ensembles,
 if specified.
 The variance of this data is used to estimate a standard deviation in the
 mean, since each is normally distributed.
\end_layout

\begin_layout Standard
The next level, 
\emph on
p.ensembles(2)
\emph default
, is for serial calculations of ensembles.
 The highest level ensemble, 
\emph on
p.ensembles(3)
\emph default
, is used for parallel simulations.
 This requires the Matlab parallel toolbox.
 Either type of high-level ensemble, or both together, can be used to calculate
 sampling errors.
\end_layout

\begin_layout Standard
Note that one standard deviation is not a strong bound; errors are expected
 to exceed this value in 
\begin_inset Formula $32\%$
\end_inset

 of observed measurements.
 Another point to remember is that stochastic errors are often correlated,
 so that a group of points may all have similar errors due to statistical
 sampling.
\end_layout

\begin_layout Standard
The statistical error due to finite samples of trajectories is called the
 sampling error.
 The RMS value of the relative sampling error for each computed function,
 normalized by the maximum modulus of the observable, is printed out after
 each xSPDE simulation.
 If the expected comparison value is zero, the absolute value is given.
\end_layout

\begin_layout Standard
Averages over stochastic ensembles are the specialty of xSPDE, which requires
 specification of the ensemble size.
 A hierarchy of ensemble specifications in three levels allows maximum resource
 utilization, so that: 
\begin_inset Formula 
\[
p.ensembles=[ensembles(1),ensembles(2),ensembles(3)]\,.
\]

\end_inset

The local ensemble, 
\begin_inset Formula $ensembles\left(1\right)$
\end_inset

, gives within-thread parallelism, allowing vector instruction use for single-co
re efficiency.
 The serial ensemble, 
\begin_inset Formula $ensembles\left(2\right)$
\end_inset

, gives the number of independent sub-ensembles of trajectories calculated
 serially.
\end_layout

\begin_layout Standard
The parallel ensemble, 
\begin_inset Formula $ensembles\left(3\right)$
\end_inset

, gives multi-core parallelism, and requires the Matlab parallel toolbox.
 This improves speed when there are multiple cores.
 One should optimally put 
\begin_inset Formula $ensembles\left(3\right)$
\end_inset

 equal to the available number of CPU cores.
\end_layout

\begin_layout Standard
The 
\emph on
total 
\emph default
number of stochastic trajectories or samples is 
\begin_inset Formula 
\[
ensembles(1)\times ensembles(2)\times ensembles(3)\,.
\]

\end_inset


\end_layout

\begin_layout Standard
Either 
\begin_inset Formula $ensembles(2)$
\end_inset

 or 
\begin_inset Formula $ensembles(3)$
\end_inset

 are required if sampling error-bars are to be calculated, owing to the
 sub-ensemble averaging method used in xSPDE to calculate sampling errors
 accurately.
\end_layout

\begin_layout Standard
Two lines are graphed for an upper and lower standard deviation departure
 from the mean.
 This is only plotted if the total number of serial or parallel ensembles
 is greater than one, preferably at least 10–20 to give reliable estimates.
 The sampling error is reasonably accurate, but may underestimate errors
 for observe function results that have highly non-Gaussian trajectory distribut
ions, especially with asymmetries.
 These estimates are available for all observables in any dimension.
 The two lines generated in the graphs represent 
\begin_inset Formula $\bar{o}\pm\sigma$
\end_inset

, where 
\begin_inset Formula $o$
\end_inset

 is the mean output, and 
\begin_inset Formula $\sigma$
\end_inset

 is the computed standard deviation in the mean.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "algorithms:sampling-errors"

\end_inset


\end_layout

\begin_layout Section
Convergence tests
\end_layout

\begin_layout Subsection
Comparisons: 
\emph on
compare
\end_layout

\begin_layout Standard
Every 
\emph on
observe
\emph default
 function can be accompanied by a comparison function, with a function handle
 
\begin_inset Formula $compare\{n\}$
\end_inset

.
 This generates a vector of analytic solutions or experimental data-points
 which is compared to the average of the stochastic results.
 Results are plotted as additional lines on the two-dimensional graphical
 outputs, and a summary of comparison differences is printed.
\end_layout

\begin_layout Standard

\emph on
A 
\emph default
cell array of functions is used to obtain comparison results.
 These are calculated from the user-specified 
\series bold
\emph on
compare{n}(p)
\series default
\emph default
 handle where the function argument is the parameter structure p, giving
 a extra dashed line on the two-dimensional graphs.
 Other graphics options are available as well.
 These optional comparisons can be input in all dimensions.
 When there are error estimates, a chi-squared test is carried out to determine
 if the difference is within the expected step-size and sampling error bars.
 If the comparison has errors, for example from experimental data, the chi-squar
ed test will include the experimental errors.
\end_layout

\begin_layout Subsection
Convergence: 
\emph on
xcheck
\end_layout

\begin_layout Standard
The convergence checker, 
\emph on
xcheck(checks,p),
\emph default
 is designed for use where there are analytic results available for comparisons.
 This will automatically run xSIM a total of 
\emph on
checks
\emph default
 times, increasing the initial 
\emph on
steps
\emph default
 by 2 after each run, to reduce the step-size by 2.
 It then runs xGRAPH to display the most accurate result.
 It prints the time-step, the maximum difference with an input 
\emph on
compare
\emph default
 and the estimated errors found at the relevant point.
\end_layout

\begin_layout Subsection*
Exercise
\end_layout

\begin_layout Itemize

\series bold
Simulate the Kubo oscillator using the file, 
\begin_inset Formula $Kubocheck.m$
\end_inset

, with xcheck.

\series default
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Kubocheck()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Kubo with convergence checks';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [1000,10];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w,p) 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.range = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,xi,p) 1i*xi.*a;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) real(a(1,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) a(1,:).*conj(a(1,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 ','
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 a^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 '};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.xlabels = {'
\backslash
tau'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{1} = @(p) exp(-p.t/2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{2} = @(p) 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xcheck(2,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Chi-squared estimates
\end_layout

\begin_layout Standard
Chi-squared error estimates are reported in cases that have statistical
 sampling errors and comparison functions.
 These allow estimates of goodness of fit for probabilities.
 For 
\begin_inset Formula $N_{p}$
\end_inset

 independent points graphed or measured, if 
\begin_inset Formula $O_{i}$
\end_inset

 is an observable with measured mean 
\begin_inset Formula $\bar{O}_{i}$
\end_inset

 and statistical fluctuations 
\begin_inset Formula $\Delta O_{i},$
\end_inset

 one has that: 
\begin_inset Formula 
\begin{equation}
\chi^{2}/N_{p}=\frac{1}{N_{p}}\sum_{i}\frac{\left\langle \left[\left(\bar{O}_{i}+\Delta O_{i}\right)-O_{i}^{a}\right]^{2}\right\rangle }{\sigma_{i}^{2}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $\sigma_{i}^{2}$
\end_inset

 is an estimated variance.
 Provided that 
\begin_inset Formula $\left\langle \Delta O_{i}^{2}\right\rangle =\sigma_{i}^{2}$
\end_inset

 and 
\begin_inset Formula $\bar{O}_{i}=O_{i}^{a}$
\end_inset

, one should obtain the expected result of 
\begin_inset Formula $\chi^{2}/N_{p}\approx1$
\end_inset

.
 The exact distribution is known in special cases, but this requires that
 all data is independent and has a Gaussian distribution, which is not the
 case for stochastic trajectories.
\end_layout

\begin_layout Standard
Because of the variety of error-sources, and the lack of independence from
 point to point, these error sums are not identical to Pearson's original
 definition of 
\begin_inset Formula $\chi^{2}$
\end_inset

, and therefore should be used with caution.
 Nevertheless, the definition provides a way of evaluating goodness of fit
 that is useful.
\end_layout

\begin_layout Standard
Here, the value of 
\begin_inset Formula $\sigma_{i}^{2}$
\end_inset

 is obtained by including 
\emph on
all
\emph default
 known error sources, so 
\begin_inset Formula 
\begin{equation}
\sigma_{i}^{2}=\sum_{n=1}^{4}\left(\sigma_{i}^{(n)}\right)^{2}.
\end{equation}

\end_inset

These are: 
\end_layout

\begin_layout Enumerate
If sub-ensemble measures are used, the estimated 
\begin_inset Formula $\sigma_{i}^{2}$
\end_inset

 includes sampling errors.
 
\end_layout

\begin_layout Enumerate
If checks are included, the estimated 
\begin_inset Formula $\sigma_{i}^{2}$
\end_inset

 includes discretization errors.
 
\end_layout

\begin_layout Enumerate
If comparisons have systematic errors, e.g.
 from experimental data, 
\end_layout

\begin_layout Enumerate
If comparisons have known statistical errors.
 
\end_layout

\begin_layout Standard
In the case of sampled probabilities where there is a comparison probability,
 the estimated statistical variance in the data is obtained following Pearson's
 original method.
 That is, from 
\emph on
estimated counts given the comparison probability
\emph default
, rather than a computed variance.
 This allows the use of standard 
\begin_inset Formula $\chi^{2}$
\end_inset

 comparisons.
\end_layout

\begin_layout Subsection
Probability comparisons
\end_layout

\begin_layout Standard
Comparisons of trajectory probabilities and analytic probabilities do not
 always result in perfect agreement.
 This is because the limitations of memory and simulation time mean that
 trajectories have to be binned, which leads to an additional discretization
 error.
 Note that xSPDE approximates the comparison analytic probability of a bin
 by the central bin value of the probability, which is the simplest procedure.
\end_layout

\begin_layout Standard
To explain this, comparisons of probabilities ought to use the average probabili
ty density over the bin, which is different from the central value.
 Suppose one has a comparison distribution 
\begin_inset Formula $p^{a}\left(x\right)$
\end_inset

.
 Using Simpson's rule, the average analytic probability density integrated
 over a bin size 
\begin_inset Formula $\Delta x$
\end_inset

 is approximately: 
\begin_inset Formula 
\begin{align}
p_{o}^{a} & =\frac{1}{\Delta x}\int_{x_{0}-\Delta x/2}^{x_{0}+\Delta x/2}p^{a}(x)dx\\
 & \approx\frac{1}{6}\left[4p^{a}(x_{0})+p^{a}\left(x_{0}+\frac{\Delta x}{2}\right)+p^{a}\left(x_{0}-\frac{\Delta x}{2}\right).\right]\nonumber 
\end{align}

\end_inset


\end_layout

\begin_layout Standard
This is equivalent to a cubic polynomial fit.
 It can be used to improve the analytic binning comparisons.
 It is especially important for multi-dimensional comparisons.
 It results in 
\begin_inset Formula $9$
\end_inset

 distinct terms for two dimensions.
 This correction must be inserted manually in the comparison functions.
\end_layout

\begin_layout Subsection
Scaling of 
\family roman
\series medium
\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Formula $\chi^{2}$
\end_inset


\family default
\series default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 errors
\end_layout

\begin_layout Standard
Because chi-squared probability tests are sensitive, it helps to understand
 how they scale with bin-size.
 With 
\begin_inset Formula $N_{s}$
\end_inset

 total samples, the estimated probability 
\begin_inset Formula $P_{i}$
\end_inset

 in a bin with probability density 
\begin_inset Formula $p\left(\mathbf{a}\right)$
\end_inset

 and sampled counts of 
\begin_inset Formula $N_{i}$
\end_inset

 is given by 
\begin_inset Formula $P_{i}=N_{i}/N_{s}=p_{i}A$
\end_inset

 for a bin 
\begin_inset Formula $b_{i}$
\end_inset

 with area 
\begin_inset Formula $A$
\end_inset

, where: 
\begin_inset Formula 
\begin{equation}
p_{i}=\frac{1}{A}\int_{b_{i}}p\left(\mathbf{a}\right)dA
\end{equation}

\end_inset

The Poissonian variance of the counts in the bin is 
\begin_inset Formula $\left\langle \Delta N_{i}\right\rangle =\left\langle N_{i}\right\rangle $
\end_inset

.
 The expected probability variance is therefore 
\begin_inset Formula 
\begin{equation}
\left\langle \Delta P^{2}\right\rangle =\left\langle \Delta N_{i}^{2}/N_{s}^{2}\right\rangle =\left\langle N_{i}\right\rangle /N_{s}^{2}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\left\langle N_{i}\right\rangle =N_{i}^{a}$
\end_inset

, the analytic or expected count number.
 The expected probability density variance at a point is therefore 
\begin_inset Formula 
\begin{equation}
\left\langle \Delta p_{i}^{2}\right\rangle =\left\langle \Delta N_{i}^{2}/A^{2}N_{s}^{2}\right\rangle =N_{i}^{a}/A^{2}N_{s}^{2}=p_{i}^{a}/AN_{s}.
\end{equation}

\end_inset

Here 
\begin_inset Formula $p_{i}^{a}$
\end_inset

 is the analytic or comparison probability density, and 
\begin_inset Formula $\left\langle \Delta p_{i}^{2}\right\rangle ^{a}=p_{i}^{a}/AN_{s}$
\end_inset

 is the expected analytic variance.
 The 
\begin_inset Formula $\chi^{2}$
\end_inset

 variable, that follows the Pearson 
\begin_inset Formula $\chi^{2}$
\end_inset

 distribution, is defined as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\chi^{2}/N_{p}=\frac{1}{N_{p}}\sum_{i}\frac{\left\langle \left[p_{i}-p_{i}^{a}\right]^{2}\right\rangle }{\left\langle \Delta p_{i}^{2}\right\rangle }
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here, 
\begin_inset Formula $p_{i}^{a}$
\end_inset

 is obtained by integrating over the 
\begin_inset Formula $i$
\end_inset

-th probability bin.
 It can be estimated by using the central value, 
\begin_inset Formula $p_{i}^{a}\approx p\left(\mathbf{a}_{i}\right)$
\end_inset

, although cubic interpolation is more precise.
\end_layout

\begin_layout Standard
This could lead to a fixed error in the analytic probability density 
\begin_inset Formula $p_{i}^{a}$
\end_inset

, so 
\begin_inset Formula $p_{i}^{a}\rightarrow p_{i}^{a}+\epsilon_{i}$
\end_inset

, possibly localized to some fraction of bins 
\begin_inset Formula $f$
\end_inset

 which may change with the bin size.
 Suppose, for simplicity, that 
\begin_inset Formula $\epsilon$
\end_inset

 is due to an integration error in integrating the exact distribution or
 any other error in the 'exact' distribution, and it does not change with
 changes to the bin area 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\begin_layout Standard
From the definition of 
\begin_inset Formula $\chi^{2}$
\end_inset

, if the generated samples have negligible step-size errors:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\chi^{2}/N_{p}=\frac{1}{N_{p}}\sum_{i}\frac{\left\langle \left[\left(p_{i}^{a}+\Delta p_{i}\right)-p_{i}^{a}-\epsilon_{i}\right]^{2}\right\rangle }{\left\langle \Delta p_{i}^{2}\right\rangle }
\end{equation}

\end_inset

For simplicity, if we consider the large sample limit with uniform probabilities
, 
\begin_inset Formula 
\begin{align}
\chi^{2}/N_{p} & =1+\frac{f\epsilon^{2}}{\left\langle \Delta p^{2}\right\rangle }=1+\frac{f\epsilon^{2}AN_{s}}{p^{a}}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Increasing the bin area 
\begin_inset Formula $A$
\end_inset

 will increase 
\begin_inset Formula $\chi^{2}/N_{p}$
\end_inset

 above its usual value of 
\emph on
1
\emph default
 by an amount proportional to 
\begin_inset Formula $A$
\end_inset

.
 This is simply because smaller bins have less intrinsic accuracy, due to
 a larger sampling error.
 As a result, it is often preferable to use more accurate probability estimates
 with larger bins having more counts, since these are much more sensitive
 to effects like this.
\end_layout

\begin_layout Standard
Often, simulated and comparison graphs may appear identical visually, but
 even if they have small errors they may still be very significant.
 Such comparison binning errors can be reduced by using cubic spline interpolati
ons, as explained above.
\end_layout

\begin_layout Section
Error outputs
\end_layout

\begin_layout Standard
There are six types of data outputs: data, errors, comparisons and the compariso
n errors.
 Summaries will appear in the printed outputs if available.
 Step errors and sampling errors, as well as comparison data are stored
 in all the output data arrays.
 These are also available graphically in two-dimensional graphs.
\end_layout

\begin_layout Subsection
Numerical error outputs
\end_layout

\begin_layout Standard
The last data index 
\begin_inset Formula $c$
\end_inset

 is used to obtain errors and comparisons in data outputs.
 To obtain comparison data, a comparison function is defined for each output
 function.
 This can include, for example, experimental data, experimental errors or
 exact analytic comparisons where they are available.
 
\end_layout

\begin_layout Enumerate
Means are in 
\begin_inset Formula $c=1$
\end_inset

 data, except if
\emph on
 scatters
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 1,
\emph default
 which gives individual trajectories.
 
\end_layout

\begin_layout Enumerate
If 
\emph on
checks
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 0
\emph default
, the step errors are in 
\begin_inset Formula $c=2$
\end_inset

 data.
 
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $ensembles(2,3)>1,$
\end_inset

 the sampling errors are in 
\begin_inset Formula $c=3$
\end_inset

 data.
 
\end_layout

\begin_layout Enumerate
Comparison values from 
\emph on
compare
\emph default
 functions are in 
\begin_inset Formula $c=4$
\end_inset

 data.
 
\end_layout

\begin_layout Enumerate
Comparison systematic errors can be included in 
\begin_inset Formula $c=5$
\end_inset

 data.
 
\end_layout

\begin_layout Enumerate
Comparison statistical errors can be included in 
\begin_inset Formula $c=6$
\end_inset

 data.
 
\end_layout

\begin_layout Subsection
Graphical error outputs
\end_layout

\begin_layout Standard
These are explained in detail in the xGRAPH reference section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xGRAPH-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
Mean values or trajectories are graphed as separate data lines.
 
\end_layout

\begin_layout Enumerate
Step errors generate graph error bars 
\end_layout

\begin_layout Enumerate
Sampling errors are graphed as parallel solid lines 
\end_layout

\begin_layout Enumerate
Dashed lines indicate comparison values from 
\emph on
compare
\emph default
 functions.
 
\end_layout

\begin_layout Enumerate
Comparison systematic errors give additional error bars 
\end_layout

\begin_layout Enumerate
Comparison statistical errors can be included as parallel lines 
\end_layout

\begin_layout Standard
Because multiple errors can generate very complex graphs, there is additional
 control of error bar generation, explained in the xGRAPH reference section.
 One can also obtain difference graphs with comparisons, which allow errors
 to be examined more closely, and error bars can be combined in different
 ways.
\end_layout

\begin_layout Standard
Graphics data is only available for two-dimensional graphs, and is subject
 to selection using the 
\emph on
axes 
\emph default
inputs.
\end_layout

\begin_layout Subsection
Printed error outputs
\end_layout

\begin_layout Standard
Printed error summaries are generated in each xSIM run, in addition to the
 data outputs.
 These are normalized, root mean square (RMS) errors.
 Normalization is carried out using the modulus of the largest data value.
 If the comparison results are all zero for a function, there is no normalizatio
n carried out.
\end_layout

\begin_layout Standard
After computing RMS values over each graph function, a second RMS average
 is taken over all totals, weighting each total equally, and including all
 functions and sequence datasets where there are nonzero errors reported.
 Data with no errors are not included in the totals for each category.
\end_layout

\begin_layout Standard
There is a final RMS average taken over the step, sampling and comparison
 totals.
 This again ignores categories with no errors.
 The purpose is to allow a rapid comparison to ensure that there are no
 higher than expected errors, which might require a new simulation with
 more steps or increased trajectories.
\end_layout

\begin_layout Standard
Printed errors are summarized in three main categories 
\end_layout

\begin_layout Enumerate
Discretization or step errors 
\end_layout

\begin_layout Enumerate
Sampling errors 
\end_layout

\begin_layout Enumerate
Comparison errors 
\end_layout

\begin_layout Standard
Comparison data may not be available over an entire lattice.
 If this is the case, the 
\emph on
axes 
\emph default
point selections can be used to restrict the relevant datas points used
 for these comparisons.
 This also applies to the goodness of fit and error-vector outputs, since
 they make use of comparison data where it is available.
\end_layout

\begin_layout Subsection
Goodness of fit (
\begin_inset Formula $\chi^{2}$
\end_inset

) 
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $\chi^{2}$
\end_inset

 statistics are obtained by normalizing the comparison squared differences
 by the sum of squares of all the data and comparison errors at that point.
 These are summed over every data point with relevant data, and the number
 of relevant data points, 
\begin_inset Formula $k$
\end_inset

, is stored.
 The ratio of 
\begin_inset Formula $\chi^{2}/k$
\end_inset

 should be order 1 for statistical errors.
\end_layout

\begin_layout Standard
These are summarized for each functional data output type, as well as giving
 rise to an error total.
\end_layout

\begin_layout Subsection
Error vector output
\end_layout

\begin_layout Standard
When used as a function call in batch mode, the first type of data returned
 by xSIM is a six-component error vector.
 This can be used for summarizing error data in a batch job, to determine
 if a specified error-threshold is reached, to allow an iterative increase
 in the number of time-steps or trajectories.
\end_layout

\begin_layout Standard
The error-vector components are: 
\end_layout

\begin_layout Enumerate
Total error overall, including step, discretization and comparisons 
\end_layout

\begin_layout Enumerate
Total step-size error 
\end_layout

\begin_layout Enumerate
Total sampling error 
\end_layout

\begin_layout Enumerate
Total comparison error 
\end_layout

\begin_layout Enumerate
Total 
\begin_inset Formula $\chi^{2}/k$
\end_inset

 goodness of fit 
\end_layout

\begin_layout Enumerate
Simulation elapsed time 
\end_layout

\begin_layout Subsection
Error summaries
\end_layout

\begin_layout Standard
There are six types of data outputs: data, errors, comparisons and comparison
 errors.
 Summaries will appear in the printed outputs, depending on the verbosity
 setting.
 Step errors and sampling errors, as well as comparison data are stored
 in output data arrays.
 These are also available graphically in two-dimensional graphs.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
xSIM reference 
\begin_inset CommandInset label
LatexCommand label
name "sec:xSIM-reference"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section gives a reference guide to the xSIM parameters and functions.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
Simulations carried out by xSIM are performed by other specialized internal
 functions.
 Input parameters come from an 
\series bold
input
\series default
 cell array of structures, while output is saved in a 
\series bold
data
\series default
 array, and optionally in a file.
 During the simulation, global averages and error-bars are calculated for
 time-step and sampling errors.
 When completed, timing and errors are printed.
\end_layout

\begin_layout Standard
The 
\emph on
xsim
\emph default
 function call syntax is: 
\emph on
[error,data,output(,rawdata)] = xsim(input);
\end_layout

\begin_layout Subsection
Input and data structures
\end_layout

\begin_layout Standard
To explain xSPDE in full detail, 
\end_layout

\begin_layout Itemize
Simulation parameters are stored in the 
\series bold
\emph on
input
\series default
\emph default
 cell array.
 
\end_layout

\begin_layout Itemize
This describes a sequence of parameter structures, so that 
\series bold
\emph on
input={p1,p2,...}
\series default
\emph default
.
 
\end_layout

\begin_layout Itemize
Each structure 
\series bold
\emph on
p1,p2,..
\emph default
.

\series default
 generates an output which is the input of the next.
 
\end_layout

\begin_layout Itemize
The main simulation function is called using 
\series bold
\emph on
xsim(input).

\series default
\emph default
 
\end_layout

\begin_layout Itemize
The RMS errors and integration time are returned in the 
\series bold
\emph on
error
\emph default
 
\series default
vector 
\end_layout

\begin_layout Itemize
Parameters including defaults are returned in the 
\series bold
\emph on
output
\series default
\emph default
 cell array.
 
\end_layout

\begin_layout Itemize
Averages are recorded sequentially in the 
\series bold
\emph on
data
\series default
\emph default
 cell array.
 
\end_layout

\begin_layout Itemize
Raw trajectory data is optionally stored in the 
\series bold
\emph on
rawdata
\series default
\emph default
 cell array.
 
\end_layout

\begin_layout Standard
The sequence 
\emph on
input
\emph default
 defines a sequence of individual simulations, with parameters that specify
 the simulation functions and give the equations and observables.
 If there is only one simulation, just one data structure is needed, without
 a cell array.
 In addition, xSPDE can generates graphs with its own graphics program,
 xGRAPH.
\end_layout

\begin_layout Standard
For convergence checking, a useful alternative to xspde which repeats the
 calculation 
\emph on
checks
\emph default
 times while halving the time-step each time, and reports the resulting
 errors for averaged observables, is: 
\end_layout

\begin_layout Itemize
xcheck (checks,p) 
\end_layout

\begin_layout Subsection
Parameters and functions
\end_layout

\begin_layout Standard
The xSIM input objects include parameters and functions, with an extensible
 object-oriented architecture.
 All xSIM functions are modular and replaceable.
 In many cases this is as easy as just defining a new function handle to
 replace the default value.
\end_layout

\begin_layout Standard
There are two types of functions: 
\end_layout

\begin_layout Itemize

\emph on
User
\emph default
 functions define the simulation, and have default values.
 The defaults are usually obtained by adding 'x' in front of the name.
 In the special case of 
\emph on
method
\emph default
, the default depends on the problem.
 
\end_layout

\begin_layout Itemize

\emph on
Helper
\emph default
 functions usually start with 
\emph on
'x'
\emph default
.
 In some cases these are defaults for user functions.
 In all cases they have well-defined roles, like the reserved functions
 in C, Python, Matlab or Julia.
 
\end_layout

\begin_layout Itemize
All arguments in square brackets are optional, but may be needed only in
 specific cases.
 
\end_layout

\begin_layout Itemize
The last argument, 
\emph on
p,
\emph default
 is the parameter structure.
 
\end_layout

\begin_layout Standard
For example, to define your own integration function, include in the xSPDE/xSIM
 input the line: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.method = @Mystep;
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
Next, include anywhere on your Matlab path the function definition, for
 example: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function a = Mystep(a,w,p)
\end_layout

\begin_layout Plain Layout

\family typewriter
% a = Mystep(a,w,p) propagates a step my way.
\end_layout

\begin_layout Plain Layout

\family typewriter
..
\end_layout

\begin_layout Plain Layout

\family typewriter
a = ...;
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Parameter table
\begin_inset CommandInset label
LatexCommand label
name "sec:Simulation-parameters"

\end_inset


\end_layout

\begin_layout Standard
Simulation parameters are stored in a parameter structure which is passed
 to the 
\begin_inset Formula $xsim$
\end_inset

 program.
 Constants can be included, but must not be reserved names.
 Names starting with a capital letter like 'A...' - except the reserved '
\emph on
D
\emph default
' for derivatives - are always available.
 Globals are incompatible with the Matlab parallel toolbox.
 Graphics data is stored for the graphics program to use.
\end_layout

\begin_layout Standard
Standard inputs have default values, which are user-modifiable through the
\emph on
 xpreferences
\emph default
 function.
 Defaults can be checked by including the input 
\begin_inset Formula $verbose=2$
\end_inset


\emph on
.

\emph default
 All the inputs are part of a structure passed to xSPDE.
 If a cell array of multiple structures are input, these are executed in
 sequence, with the output of the first simulation passed to the second,
 then the third, and so on.
\end_layout

\begin_layout Standard
Library functions inputs do not have defaults, as these are subject to change.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="38" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
version
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'xSIM3.xx'
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Current version number
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
name
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Quotes erd
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simulation name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dimensions
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time dimensions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
fields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total number of stochastic fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
backfields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of backward fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
auxfields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of
\emph on
 
\emph default
auxiliary fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ranges
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $[10,..]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range of coordinates in 
\emph on
[t,x,y,z,..]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
origins
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[0,..] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Origin of coordinates in 
\emph on
[t,x,y,z,..]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
points
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[51,...
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output lattice points in 
\emph on
[t,x,y,z,..]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
noises
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 0]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of noise fields in 
\emph on
[x,k]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
inrandoms
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 0]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial random fields in 
\emph on
[x,k]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ensembles
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size of 
\emph on
[vector, serial, parallel]
\emph default
 ensembles
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
steps
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integration steps per output point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
iterations
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
4
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum implicit or midpoint iterations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
order
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Extrapolation order: 
\emph on
0,1,2,..
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
checks
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check time-step errors: 0 or 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
seed
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seed for random number generator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
file
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Quotes erd
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
File-name: 
\emph on
'f.mat' 
\emph default
= Matlab
\emph on
, 'f.h5' 
\emph default
= HDF5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
boundaries{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $[0,0;0,0]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Boundary: '-1,0,1'=Neum, periodic, Dirichlet boundary.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
binranges{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{0,0,...}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable binning ranges for probabilities
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
cutoffs{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lower graph cutoff for chi-squared estimates
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
mincount
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lower count cutoff for chi-squared estimates
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ipsteps
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IP transforms per time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
numberaxis
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If 1, forces use of numerical axis labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
verbose
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 for brief, 1 for informative, 2 for full output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A,B,C,\ldots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User specified static parameters
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
olabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{'a_1',..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transforms
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{[0 0 0 0],..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fourier transforms in [t,x,y,z,..] per observable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
f
\emph on
transforms
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{[0 0 0 0],..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fourier transforms in [t,x,y,z,..] per function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
rawdata
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Raw data switch: 1 for raw output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
scatters
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{0,..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specify to obtain scatter plots, not averages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
octave
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Force octave syntax: 1 for octave
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
thresholdw
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Threshold for weighted simulation breeding
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
iterfb
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $2$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Iterations of forward-backward algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
iterproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $2$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Iterations of projector algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
qcproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Quadratic projection coefficients
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
vcproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vector projection coefficients
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Function tables
\end_layout

\begin_layout Subsection
User function table
\end_layout

\begin_layout Standard
The user-defined functions, calling arguments, and purpose, are:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="21" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arguments 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Purpose
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
deriv
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(a,[a_{-},]w,p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stochastic derivative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
initial
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(r,p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function to initialize fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
linear
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linear derivative function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
rfilter
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(r,p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Random filter function in k-space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
nfilter
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(w,p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Noise filter function in k-space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transfer
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(a,p,a_{0},p_{0})$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transfer inside a sequence
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
method
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Algorithm defining a time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
grid
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grid calculator for the lattice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
prop
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interaction picture propagator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
propfactor
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(nc,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagator array calculation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
observe
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $(a,p)$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable function cell array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
function
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(o,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Functions of average observables
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
compare
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comparisons, for differences and 
\begin_inset Formula $\chi^{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
define
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines an auxiliary field value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
randomgen
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial random generator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
noisegen
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Noise generator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
rfilter
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(v,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial random kspace filter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
nfilter
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Noise kspace filter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
project
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(d,a,n,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defines the projection
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
firstfb
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a0,nc,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First forward-backward path
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Internal function table
\end_layout

\begin_layout Standard
For details of the internal functions, see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:xSIM-internal-functions"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 All xSPDE internal functions are capitalized.
 They are:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arguments 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Purpose
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Ave
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,[av,]p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Averages over a spatial lattice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Bin
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,[dx,]p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bins results onto an axis
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Catproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(d,a,n,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Catenoid projector
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
D1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,[dir,]p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
First derivative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
D2
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,[dir,]p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Second derivative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Euler
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Euler algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Implicit
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implicit Euler algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
MP
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Midpoint algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
MPadapt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Midpoint adaptive algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
RK2
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Runge-Kutta (2) algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
RK4
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Runge-Kutta (4) algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
MPfb
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Midpoint forward-backward algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Quadproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(d,a,n,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
General quadratic projector
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Polproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(d,a,n,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Diagonal polynomial projector
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Int
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,[dx\,or\,dk],p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integrates over space or momentum
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Enproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Euler normal projection algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
MPproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Midpoint projection algorithm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
MPnproj
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(a,w,p)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Midpoint normal projection algorithm
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Itemize
Projection algorithms with a '
\emph on
proj
\emph default
' suffix require a
\emph on
 project 
\emph default
function.
 
\end_layout

\begin_layout Itemize
Forward-backward algorithms with an '
\emph on
fb
\emph default
' suffix require a second field in the user deriv function.
 
\end_layout

\begin_layout Itemize
For 
\begin_inset Formula $Int$
\end_inset

, one can integrate either with respect to 
\begin_inset Formula $dx$
\end_inset

 or 
\begin_inset Formula $dk$
\end_inset

, in either ordinary space or momentum space, by changing the second argument
 passed to 
\begin_inset Formula $xint$
\end_inset

 as required.
 
\end_layout

\begin_layout Itemize
For integration in momentum space, fields that are passed to 
\begin_inset Formula $Int$
\end_inset

 are transformed if the 
\emph on
observe
\emph default
 function is used with Fourier transforms selected using 
\emph on
transforms
\emph default
.
 
\end_layout

\begin_layout Itemize
For integrating functions like 
\emph on
function{n}
\emph default
 with transforms, the transform flags 
\emph on
transforms{n}
\emph default
 should be used both for the function and any 
\emph on
observe
\emph default
 averages used.
 
\end_layout

\begin_layout Itemize
Average data is 
\emph on
not
\emph default
 Fourier transformed after averaging.
 If this is required, it is best to output the data first.
 
\end_layout

\begin_layout Section
Parameter reference
\begin_inset CommandInset label
LatexCommand label
name "sec:xSIM-parameters"

\end_inset


\end_layout

\begin_layout Subsection

\emph on
auxfields
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
These are real or complex auxiliary fields stored at each lattice point,
 specified using 
\emph on
define
\emph default
.
 They are useful for input/output spectral calculations, and can be functions
 of the noise.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.auxfields = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
axes{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{0,0,0,..}
\emph default
 
\end_layout

\begin_layout Standard
Gives the axis points used for comparisons in the 
\begin_inset Formula $n$
\end_inset

-th output function, in each dimension.
 For each function, the axes can be individually specified in each dimension.
 Each entry value is a vector range for a particular dimension, for 
\emph on

\begin_inset Formula $d$
\end_inset

=1,...p.dimension
\emph default
s.
 Thus,
\emph on
 5
\emph default
 gives the fifth point only in that dimension, and an input
\emph on
 1:4:41
\emph default
 plots every fourth point.
 Zero or negative values are shorthand:
\emph on
 -1
\emph default
 generates a default point at the midpoint,
\emph on
 -2
\emph default
 the endpoint, and
\emph on
 0
\emph default
 is the default value that gives the vector for the every axis point.
 This data is also used to control graphics outputs.
 It can be input separately for the graphs if required.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.axes{4} = {1:2:10,0,0,-1}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
backfields
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
The optional input 
\series bold
\shape italic
backfields
\series default
\shape default
 is the number of backward-time stochastic fields that are integrated, as
 part of the overall vector of integrated 
\emph on
fields
\emph default
 components.
 Requires a forward-backward method like 
\emph on
MPfb.

\emph default
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.backfields = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
binranges{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{}
\emph default
 
\end_layout

\begin_layout Standard
Nested cell array, 
\begin_inset Formula $binranges\{n\}\{m\}$
\end_inset

, that defines the probability plotted for observable 
\begin_inset Formula $n$
\end_inset

.
 If null or zero, the mean of the observable is calculated as usual.
 The second cell index, 
\begin_inset Formula $m=1,\ldots M$
\end_inset

, corresponds to the line index returned by the corresponding 
\begin_inset Formula $n$
\end_inset

-th 
\emph on
observe
\emph default
 function.
 When nonzero, the probability of the 
\begin_inset Formula $n$
\end_inset

-th observable is calculated and plotted according to the specified vector
 of axis points.
 This sets extra dimensions in the data, depending on the range of 
\begin_inset Formula $m$
\end_inset

 values, with 
\begin_inset Formula $[o_{1},o_{2},\ldots o_{K}]$
\end_inset

, being the start and end of each of the bins used to accumulate probabilities.
 The 
\begin_inset Formula $k-th$
\end_inset

 bin is centered at 
\begin_inset Formula $(o_{k}+o_{k+1})/2$
\end_inset

.
 In this version of xSPDE, each bin must have the same width for an observable
 and line number.
 The output is the average probability density versus the (vector) value
 of the observable.
 Hence 
\begin_inset Formula $M$
\end_inset

 extra output dimensions are added to the generated probability data.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.binranges{n}{1} = {-5:0.1:5
\emph default
,
\emph on
-2:0.1:2}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
boundaries{dir}
\end_layout

\begin_layout Description
Default: 
\emph on
[0, 0]
\emph default
 
\end_layout

\begin_layout Standard
Cell array for type of spatial boundary conditions used, set for each dimension
 and field component independently, and used in the equation solutions.
 The cell index is 
\begin_inset Formula $dir=2,3,..$
\end_inset

, indicating the dimension.
 The boundary conditions are defined as a matrix.
 The first index is the field index 
\emph on
i 
\emph default
and the second index the boundary 
\emph on
j
\emph default
, with 
\begin_inset Formula $j=1$
\end_inset

 for the lower and 
\begin_inset Formula $j=2$
\end_inset

 for the upper boundary.
 The options are 
\begin_inset Formula $b=-1,0,1$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The default option, or 0, is periodic.
 
\end_layout

\begin_layout Itemize
If -1, Robin/Neumann boundaries are used, with derivatives set to prescribed
 values.
 
\end_layout

\begin_layout Itemize
If 1, Dirichlet boundaries are used, with fields set to prescribed values.
 
\end_layout

\begin_layout Standard
In the current code, only default boundaries are available using spectral
 (
\emph on
linear
\emph default
) methods.
 Using arbitrary non-periodic boundaries 
\emph on
requires
\emph default
 the use of finite difference derivatives, without the option of an interaction
 picture derivative.
 In such general cases, arbitrary boundary values are set by 
\emph on
boundfun(a,d,p)
\emph default
.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.boundaries{d} = [-1,1;0,0;1,-1]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
c...
\end_layout

\begin_layout Standard
The starting letter 
\emph on
c
\emph default
 is always reserved to store user-specified constants and parameters.
 It is passed to user functions and can be any data.
 All inputs — including 
\emph on
c
\emph default
 data — are copied into the stored data files via the lattice structure
 p, to give a permanent record of simulation parameter values along with
 the output data.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.constant = 2*pi
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
checks
\end_layout

\begin_layout Description
Default: 
\emph on
1
\emph default
 
\end_layout

\begin_layout Standard
This defines if a repeat integration is carried out for error-checking purposes.
 If 
\emph on
p.checks = 
\emph default
0, there is one integration, with no checking at smaller time-steps.
 For error checking, set 
\emph on
p.checks = 1
\emph default
, which repeats the calculation at half the time-step — but with identical
 noise — to obtain error bars.
 This is the default value, taking three times longer overall, but with
 increased accuracy and error-estimates.
\end_layout

\begin_layout Standard
Also see the 
\emph on
order 
\emph default
parameter, below
\emph on
.

\emph default
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.checks = 0
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
dimensions
\end_layout

\begin_layout Description
Default: 
\emph on
1
\emph default
 
\end_layout

\begin_layout Standard
This is the space-time dimension for an SPDE.
 If omitted, 
\emph on
dimensions=1
\emph default
, giving an SDE.
 It is arbitrary apart from the obvious memory requirements at large dimensional
ity.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.dimensions = 4
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
ensembles
\end_layout

\begin_layout Description
Default: 
\emph on
[1, 1, 1]
\emph default
 
\end_layout

\begin_layout Standard
Number of independent stochastic trajectories simulated.
 This has three levels to maximize efficiency.
 The first is within-thread parallelism, allowing vector instructions.
 The second gives a number of independent trajectories calculated serially.
 The third gives multi-core parallelism and requires the Matlab parallel
 toolbox.
 Either 
\emph on
p.ensembles(2)
\emph default
 or 
\emph on
p.ensembles(3)
\emph default
 are required to obtain sampling error-bars.
 The total number of stochastic trajectories or samples is 
\begin_inset Formula $ensembles(1)\times ensembles(2)\times ensembles(3)$
\end_inset

.
 The second and third 
\emph on
ensembles 
\emph default
cannot be changed during a sequence of simulations.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.ensembles = [1000,100,10]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
fields
\end_layout

\begin_layout Description
Default: 
\emph on
1
\emph default
 
\end_layout

\begin_layout Standard
These are real or complex variables stored at each lattice point that are
 the independent variables for integration.
 The fields are vectors that can have any number of components and any number
 of dimensions.
 The 
\emph on
fields
\emph default
 input is the number of real or complex components that are initialized
 by the 
\emph on
initial
\emph default
 function and integrated using the deriv derivative.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.fields = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
file
\end_layout

\begin_layout Description
Default: ’ ’ 
\end_layout

\begin_layout Standard
Matlab or HDF5 file name for output data.
 Includes all data and parameter values, including raw trajectories if 
\begin_inset Formula $p.rawdata=1$
\end_inset

.
 If not needed just omit this.
 A Matlab filename should end in .mat, while an HDF5 file requires the filename
 to end in .h5.
 For a sequence of inputs, the filename should be given in the first structure
 of the sequence, and the entire sequence is stored.
 This cannot be changed for successive parts of the overall sequence.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.file = 'file-name'
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
ftransforms{n}
\end_layout

\begin_layout Description
Default: 
\emph on
transforms{n}
\emph default
 
\end_layout

\begin_layout Standard
Cell array defining the Fourier transform switches for a function 
\emph on
n
\emph default
.
 There is one 
\emph on
ftransform
\emph default
 vector per function.
 The 
\emph on
n
\emph default
-th flag indicates a Fourier transform if it is set to one, and none if
 set to zero.
 The default value is the 
\emph on
observe
\emph default
 transform.
 If there are more functions than 
\emph on
observe
\emph default
 handles, the additional transform switches default to zero.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.ftransforms{n} = [1,0,0,1]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
functions
\end_layout

\begin_layout Description
Default: number of defined functions or observables 
\end_layout

\begin_layout Standard
This gives the maximum number of output datasets which are functions of
 the observables.
 The default number of functional transformations is the greater of the
 length of the cell arrays of 
\emph on
observe 
\emph default
and 
\emph on
function
\emph default
 definitions.
 Normally, this is not initialized, as the default is typically used, unless
 one wishes to reduce the data output without changing an input script.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.functions = 1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
ipsteps
\end_layout

\begin_layout Description
Default: 1 for 
\emph on
Euler
\emph default
, 
\emph on
Implici
\emph default
t and 
\emph on
RK2
\emph default
; 2 for 
\emph on
MP,
\emph default
 
\emph on
MPadapt
\emph default
 and 
\emph on
RK4; 0 otherwise
\emph default
 
\end_layout

\begin_layout Standard
This specifies the number of interaction picture time-steps needed in an
 integration time-step.
 Default values are chosen according to the setting of 
\emph on
method
\emph default
.
 Can be changed for custom integration methods.
 This must be initialized if a non-standard integration method is used that
 requires an interaction picture as well.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.ipsteps = 1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
iterations
\end_layout

\begin_layout Description
Default: 4 
\end_layout

\begin_layout Standard
For iterative algorithms like the implicit midpoint method, the iteration
 count is set here, typically around 3-4.
 Will increase the integration accuracy if set higher, but it may be better
 to increase steps if this is needed.
 With non-iterated algorithms, this input is not used: 
\end_layout

\begin_layout Description
Example: 
\emph on
p.iterations = 3
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
name
\end_layout

\begin_layout Description
Default: ’ ’ 
\end_layout

\begin_layout Standard
Name used to label simulation, usually corresponding to the equation or
 problem solved.
 This can be removed from graphs using 
\emph on
headers
\emph default
 equal to a single blank space when running 
\emph on
xgraph
\emph default
.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.name = 'your project name'
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
noises
\end_layout

\begin_layout Description
Default: 
\emph on
fields (1)
\emph default
 
\end_layout

\begin_layout Standard
This gives the number of stochastic noises generated per lattice point,
 in coordinate and momentum space, respectively.
 Set to zero (
\begin_inset Formula $noises=0$
\end_inset

) for no noises.
 This is the number of rows in the noise-vector.
 Noises can be delta-correlated in x-space or in k-space.
 The second input is the dimension of noises in k-space.
 It can be omitted if zero.
 This allows use of finite correlation lengths, by including a frequency
 filter function that is used to modify the noise in Fourier-space.
 The Fourier-space random variance is defined by the filter function.
 This takes the noises in Fourier space and returns a filtered version,
 which is inverse Fourier transformed before use.
 The first noise index, 
\begin_inset Formula $noises(1)$
\end_inset

, indicates how many independent noise fields are generated, while 
\begin_inset Formula $noises(2)$
\end_inset

 indicates how many noises are Fourier-transformed, filtered and then inverse
 Fourier transformed to give correlations.
 These are extra noises, so the total is 
\begin_inset Formula $noises(1)+noises(2)$
\end_inset

.
 Filtered noises have a finite correlation length.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.noises = [2,4]
\emph default
.
 
\end_layout

\begin_layout Subsection

\emph on
order
\end_layout

\begin_layout Description
Default: 1 for 
\begin_inset Formula $ensembles\neq1$
\end_inset

, otherwise the deterministic order.
 
\end_layout

\begin_layout Standard
This is the extrapolation order, which is only used if 
\begin_inset Formula $p.checks=1$
\end_inset

.
 The program uses the estimated convergence order to extrapolate to zero
 step-size, with reduced errors.
 If 
\emph on
p.order = 0
\emph default
, no extrapolation is used, which is the most conservative input.
 The default order is usually acceptable, especially when combined with
 the default midpoint algorithm.
\end_layout

\begin_layout Standard
The extrapolation order cannot be changed during a sequence.
 The default deterministic orders of the six preset methods used 
\emph on
without
\emph default
 stochastic ensembles are: 
\end_layout

\begin_layout Description
1 for 
\emph on
Euler
\emph default
 and 
\emph on
Implicit;
\emph default
 
\end_layout

\begin_layout Description
2 for 
\emph on
RK2
\emph default
, 
\emph on
MP
\emph default
 and 
\emph on
MPadapt
\emph default
; 
\end_layout

\begin_layout Description
4 for 
\emph on
RK4
\emph default
.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.order = 0
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
origins
\end_layout

\begin_layout Description
Default: 
\emph on
[0, -p.ranges/2]
\emph default
 
\end_layout

\begin_layout Standard
This displaces the graph origin for each simulation to a user-defined value.
 If omitted, all initial times in a sequence are zero, and the space origin
 is set to 
\emph on
-p.ranges/2
\emph default
 to give results that are symmetric about the origin.
 As an example, for the x-dimension, the problem is solved on an interval
 of 
\begin_inset Formula $x=[O_{2},O_{2}+R_{2}]$
\end_inset

, with a default origin of 
\begin_inset Formula $-R_{2}/2$
\end_inset

, so that 
\begin_inset Formula $x=[-R_{2}/2,R_{2}/2].$
\end_inset

 
\end_layout

\begin_layout Description
Example: p.origins = [0,-20,-20] 
\end_layout

\begin_layout Subsection

\emph on
points
\end_layout

\begin_layout Description
Default: 
\emph on
[51, 35, ..., 35]
\emph default
 
\end_layout

\begin_layout Standard
The rectangular lattice of points plotted for each dimension are defined
 by a vector giving the number of points in each dimension.
 The default values are given as a rough guide for initial calculations.
 Large, high dimensional lattices take more time to integrate.
 Increasing points improves graphics resolution and gives better accuracy
 in each relevant dimension as well, but requires more memory.
 Speed is improved when the lattice points are a product of small prime
 factors.
 In order to discretize the problem, the 
\begin_inset Formula $p_{i}$
\end_inset

 lattice 
\emph on
points
\emph default
 are fitted into the range 
\begin_inset Formula $R_{i}$
\end_inset

 so that 
\begin_inset Formula $dx_{i}=R_{i}/(p_{i}-1)$
\end_inset

, ie: 
\begin_inset Formula 
\begin{equation}
x_{i}=O_{i}+(i-1)dx_{i}\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Description
Example: 
\emph on
p.points = [30,40,40]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
inrandoms
\end_layout

\begin_layout Description
Default: noises 
\end_layout

\begin_layout Standard
This gives the number of initial random fields generated per lattice point
 in coordinate and momentum space.
 Set to zero (
\begin_inset Formula $p.inrandoms=0$
\end_inset

) for no random fields.
 Random fields can be delta-correlated in x-space or in k-space.
 The second input is the dimension of random fields that are delta-correlated
 in momentum space.
 It can be left out if zero.
 The Fourier-space random variance is modified by the filter function.
 This takes the initial random fields in Fourier space and returns a filtered
 version, which is inverse Fourier transformed before use.
 The first noise index, 
\emph on
p.inrandoms(1)
\emph default
, indicates how many independent random fields delta-correlated in space
 are generated, while 
\emph on
p.inrandoms(2)
\emph default
 indicates how many additional random fields are Fourier-transformed, filtered
 and then inverse Fourier transformed.
 These are additional random fields, so the total is 
\emph on
p.inrandoms(1)+p.inrandoms(2)
\emph default
.
 The filtered random inputs have a finite correlation length.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.inrandoms = [2, 0]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
ranges
\end_layout

\begin_layout Description
Default: 
\emph on
[10, 10, ...]
\emph default
 
\end_layout

\begin_layout Standard
Each lattice dimension has a coordinate range.
 The default value is 10 in each dimension.
 In the temporal graphs, the first coordinate is plotted over 
\begin_inset Formula $0:p.ranges(1)$
\end_inset

.
 All other coordinates are plotted over 
\begin_inset Formula $-p.ranges(n)/2:p.ranges(n)/2$
\end_inset

.
 The starting value can be changed using the 
\emph on
origins
\emph default
 variable.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.ranges = [1, 10]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
rawdata
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
Flag for storing raw trajectory data.
 If this flag is turned on, raw trajectories are stored in memory.
 The raw data is returned in function calls and also written to a file on
 completion, if a file-name is included.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.rawdata = 1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
scatters{n}
\end_layout

\begin_layout Description
Default: 0 
\end_layout

\begin_layout Standard
Cell array that defines the number of scatter trajectories plotted for observabl
e 
\begin_inset Formula $n$
\end_inset

.
 If absent or zero, the mean of the observable is calculated as usual.
 If nonzero, a set of 
\begin_inset Formula $s$
\end_inset

 observables that correspond to independent stochastic fields are accumulated,
 with no averaging.
 This cannot be combined with probabilities or with parallel ensembles.
 There must be at least 
\emph on
s
\emph default
 trajectories in 
\emph on
ensembles(1)
\emph default
, otherwise the number of stored trajectories is reduced.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.scatters{n} = 20
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
seed
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
Random noise generation seed, for obtaining reproducible noise sequences.
 Set to unique and distinct values for the different parallel ensembles.
 Used if 
\emph on

\begin_inset Formula $p.noises>0$
\end_inset


\emph default
 or 
\emph on

\begin_inset Formula $p.inrandoms>0$
\end_inset


\emph default
.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.seed = 42
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
steps
\end_layout

\begin_layout Description
Default: 
\emph on
1
\emph default
 
\end_layout

\begin_layout Standard
Number of time-steps per plotted point.
 The total number of integration time-steps in a simulation is therefore
 
\emph on
p.steps
\begin_inset Formula $\times$
\end_inset

(p.points(1)-1)
\emph default
.
 Thus, steps can be increased to improve the accuracy, but gives no change
 in graphics resolution.
 Increasing the steps will give a lower time-discretization error.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.steps = 1, 2, ...

\emph default
 
\end_layout

\begin_layout Subsection

\emph on
transforms{n}
\end_layout

\begin_layout Description
Default: 
\emph on
[0,0,..]
\emph default
 
\end_layout

\begin_layout Standard
Cell array defining the Fourier transforms used for an observable 
\emph on
n
\emph default
.
 There is one transform vector per observable.
 The 
\begin_inset Formula $n$
\end_inset

-th flag indicates a Fourier transform on the 
\begin_inset Formula $n$
\end_inset

-th axis if set to one, starting with the time axis.
 The default value is zero, indicating no transform.
 The normalization of the Fourier transform is such that the 
\emph on

\begin_inset Formula $k=0$
\end_inset


\emph default
 value in momentum space corresponds to the integral over space with a factor
 of 
\begin_inset Formula $1/\sqrt{2\pi}$
\end_inset

 in each transformed dimension.
 The Fourier transform that is graphed has 
\emph on

\begin_inset Formula $k=0$
\end_inset


\emph default
 as the central value.
 The default is no Fourier transform.
 Must be set for any functional transform of a Fourier observable, to give
 the correct graph axes.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.transforms{n} = [1,0,0,1]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
verbose
\end_layout

\begin_layout Description
Default: 0 
\end_layout

\begin_layout Standard
Print flag for output information while running xSIM.
 Print options are: 
\end_layout

\begin_layout Itemize
Minimal if 
\emph on
verbose = -1
\emph default
: Prints just the start-up time and hard error messages 
\end_layout

\begin_layout Itemize
Brief if 
\emph on
verbose = 0
\emph default
: Additionally prints the final, total integration errors 
\end_layout

\begin_layout Itemize
Informative if 
\emph on
verbose = 1
\emph default
: Also prints the individual function RMS errors and progress indicators
 
\end_layout

\begin_layout Itemize
Full if 
\emph on
verbose = 2
\emph default
: Prints everything, including the internal parameter structure data.
 
\end_layout

\begin_layout Standard
In summary, if 
\emph on
verbose = 0
\emph default
, most output is suppressed except the final data, while 
\emph on
verbose = 1
\emph default
 displays a progress report, and 
\emph on
verbose = 2
\emph default
 additionally generates a readable summary of the parameter input as a record.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.verbose = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
version
\end_layout

\begin_layout Description
Default: ’
\emph on
xSIM3.44
\emph default
’ 
\end_layout

\begin_layout Standard
Sets the current version number of the simulation program.
 There is no need to input this except for project documentation for a customize
d version.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.version = 'current version name'
\emph default
 
\end_layout

\begin_layout Section
Function reference 
\begin_inset CommandInset label
LatexCommand label
name "sec:xSIM-functions"

\end_inset


\end_layout

\begin_layout Subsection
User function reference 
\begin_inset CommandInset label
LatexCommand label
name "sec:xSIM-user-functions"

\end_inset


\end_layout

\begin_layout Standard
The following function inputs define the differential equation that is integrate
d or solved.
 They are specified in an xSPDE/xSIM input file using 
\emph on
p.(fun) = @(Myfun)
\emph default
, either as inline or externally defined functions.
 Externally defined functions must be in the same file as the input parameters,
 or on the execution path.
\end_layout

\begin_layout Subsection

\emph on
boundfun(a, d, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xboundfun()
\emph default
 
\end_layout

\begin_layout Standard
The boundary function 
\emph on
boundfun(a,d,p)
\emph default
 is called for specified boundary conditions in the 
\begin_inset Formula $d$
\end_inset

-th dimension.
 This returns the boundary values used for the fields or their first derivatives
 in space dimension 
\begin_inset Formula $d>1$
\end_inset

, as an array indexed as 
\begin_inset Formula $b(f,\mathbf{i},e)$
\end_inset

 in the standard way.
 Here
\emph on
 
\begin_inset Formula $f$
\end_inset

 
\emph default
is the field index,
\emph on
 
\begin_inset Formula $\mathbf{i}\equiv\left[j_{2},\dots j_{d}\right]$
\end_inset

 
\emph default
are the space indices, and
\emph on
 
\begin_inset Formula $e$
\end_inset

 
\emph default
is the ensemble index.
\end_layout

\begin_layout Standard
Only two values are needed for 
\emph on

\begin_inset Formula $j_{d}$
\end_inset


\emph default
, which is the index of the dimension whose boundary values are specified.
 These are 
\begin_inset Formula $j_{d}=1,2$
\end_inset

, for the lower and upper boundary values, which are either field values
 or derivatives.
 Boundary values may be constant or a function of the fields 
\begin_inset Formula $a$
\end_inset

 and space-time 
\begin_inset Formula $t,\mathbf{x}$
\end_inset

.
\end_layout

\begin_layout Standard
If boundary values have stochastic values which are calculated only once,
 they must be initialized.
 To allow for this, 
\emph on
boundfun(a,d,p)
\emph default
 is initially called with time 
\begin_inset Formula $t=origins(1)-1$
\end_inset

, and the input field 
\emph on
a
\emph default
 set to random values from 
\emph on
randomgen,
\emph default
 which are independent of those that initialize the field at 
\begin_inset Formula $t=origins(1)$
\end_inset

.
\end_layout

\begin_layout Standard
They are reproducible for different 
\begin_inset Formula $check$
\end_inset

 cycles, to allow noise-independent error-checking.
 The initial results for the boundaries are stored in an array 
\emph on
boundval{d}
\emph default
 for later use by 
\emph on
boundfun
\emph default
 if required.
\end_layout

\begin_layout Standard
The default boundary value is zero, set by the default boundary function
 
\emph on
xboundfun(a,d,p)
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
compare(p)
\end_layout

\begin_layout Description
Default: 
\emph on
compare{n}= []
\emph default
 
\end_layout

\begin_layout Standard
This is for comparisons to experimental or analytic data.
 The output is an array with 
\begin_inset Formula $d+2$
\end_inset

 dimensions.
 The first dimension is the line index, the next 
\begin_inset Formula $d$
\end_inset

 dimensions are time and space, while the last index is an error index.
 This can have up to two additional entries for systematic and/or statistical
 error bars in the comparison data, from analytic or experimental results.
 Error-bars are optional if not available.
\end_layout

\begin_layout Subsection

\emph on
define(a, w, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xdefine()
\emph default
 
\end_layout

\begin_layout Standard
Calculates auxiliary fields, which are combinations of fields and noises.
 If used they are accessed in 
\emph on
observe
\emph default
 functions as 
\begin_inset Formula $a(n,:)$
\end_inset

, where 
\begin_inset Formula $n>fields$
\end_inset

.
 The default, 
\emph on
xdefine(),
\emph default
 sets the auxiliary fields to zero.
\end_layout

\begin_layout Subsection

\emph on
deriv(a,w,p)
\end_layout

\begin_layout Description
Default: 
\emph on
deriv()= 0
\emph default
 
\end_layout

\begin_layout Standard
This defines the stochastic equation time derivative, given the current
 field 
\begin_inset Formula $a$
\end_inset

, delta-correlated noise terms 
\emph on
w, 
\emph default
and parameters 
\begin_inset Formula $p$
\end_inset

.
 It is defined explicitly in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:deriv_without_linear_term"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 This is the right-hand-side of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:SDE"
plural "false"
caps "false"
noprefix "false"

\end_inset

) or (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:spde"
plural "false"
caps "false"
noprefix "false"

\end_inset

), 
\emph on
without
\emph default
 the linear term if it is specified separately.
\end_layout

\begin_layout Subsection

\emph on
firstfb(a0,nc,p)
\end_layout

\begin_layout Description
Default: 
\emph on
xfirstfb()
\emph default
 
\end_layout

\begin_layout Standard
Returns the zero-th order field estimates in a forward-backward iteration.
 Here 
\begin_inset Formula $nc$
\end_inset

 is the time-step check index.
 This is needed because the number of time-points to be initialized depends
 on 
\begin_inset Formula $nc$
\end_inset

.
 The default function is 
\emph on
xfirstfb
\emph default
, which sets each field in either direction equal to its initial value at
 the time boundaries, given by 
\begin_inset Formula $a0$
\end_inset

.
 Other estimates may give faster convergence.
\end_layout

\begin_layout Subsection

\emph on
function(o,p)
\end_layout

\begin_layout Description
Default: 
\emph on
xfunction{n}=@(o,p) o{n}
\emph default
 
\end_layout

\begin_layout Standard
This is a user-defined array of functions of the
\emph on
 observe
\emph default
 outputs after averaging over 
\emph on
ensembles(1)
\emph default
, possibly involving combinations of several observed averages.
 The input to the 
\emph on
n
\emph default
-th function is the cell array of all averages, and the output is the data
 for the 
\emph on
n
\emph default
-th graph.
 This function is compatible with all error estimates.
 The default values generate all the
\emph on
 observe
\emph default
 averages that are in the data.
 The output data format is an array with 
\begin_inset Formula $d+1$
\end_inset

 dimensions.
 The first dimension is the line index, the next 
\begin_inset Formula $d$
\end_inset

 dimensions are time and space.
\end_layout

\begin_layout Subsection
grid
\end_layout

\begin_layout Description
default 
\emph on
xgrid
\emph default
 
\end_layout

\begin_layout Standard
Calculates the spatial grid for specialized purposes like non-uniform grids.
 The default, 
\emph on
xgrid
\emph default
, returns a homogeneous rectangular grid in both ordinary and momentum space.
\end_layout

\begin_layout Subsection

\emph on
initial(rv, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xinitial()
\emph default
 
\end_layout

\begin_layout Standard
This is used to initialize each integration in time.
 It is a user-defined function which can involve random numbers for an initial
 probability distribution.
 This creates a stochastic field on the lattice, called 
\series bold
\emph on
a.

\series default
\emph default
 The returned first dimension should be 
\emph on
p.fields
\emph default
.
 The initial Gaussian random field variable, 
\emph on
rv
\emph default
, has unit variance if dimension is 1 or else is delta-correlated in space,
 with variance 
\begin_inset Formula $1/p.dv=1/(dx_{2}...dx_{d}))$
\end_inset

 for 
\begin_inset Formula $d$
\end_inset

 space-time dimensions.
 If 
\emph on
inrandoms
\emph default
 is given in the input parameter structure, 
\emph on
rv
\emph default
 has a first dimension of 
\emph on
inrandoms(1) + inrandoms(2)
\emph default
.
 If not specified, the default for 
\emph on
inrandoms
\emph default
 is 
\emph on
noises
\emph default
.
 The default function is 
\emph on
xinitial,
\emph default
 which sets fields to zero
\emph on
,
\emph default
 returning 
\begin_inset Formula $\mathbf{a}=0$
\end_inset

.
\end_layout

\begin_layout Subsection

\emph on
linear(p)
\end_layout

\begin_layout Description
Default: 
\emph on
xlinear()
\emph default
 
\end_layout

\begin_layout Standard
A user-definable function for the linear response, which is a matrix for
 an SDE or ODE.
 For an SPDE or PDE, it includes transverse derivatives in space, returning
 the linear coefficients 
\begin_inset Formula $L$
\end_inset

 in FFT/DST/DCT space, which are assumed diagonal in the field index.
 These are functions of differential terms 
\emph on
Dx, Dy, Dz
\emph default
, which correspond to 
\begin_inset Formula $\partial/\partial x$
\end_inset

, 
\begin_inset Formula $\partial/\partial y$
\end_inset

, 
\begin_inset Formula $\partial/\partial z$
\end_inset

, respectively.
 Each component has a dimension the same as the coordinate lattice.
 For axes that are numbered, use 
\emph on
D{2}, D{3}
\emph default
 etc.
 The default, 
\emph on
xlinear,
\emph default
 sets 
\emph on
L
\emph default
 to zero.
\end_layout

\begin_layout Subsection

\emph on
nfilter (w,p)
\end_layout

\begin_layout Description
Default: 
\emph on
xnfilter()
\emph default
 
\end_layout

\begin_layout Standard
Returns the momentum-space filter function for the propagation noise terms
 in momentum-space.
 Each component has an array dimension the same as the random noises in
 momentum space, that is, the return dimension is 
\emph on
[noises(2), d.lattice]
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
noisegen(p)
\end_layout

\begin_layout Description
Default: 
\emph on
xnoisegen(p)
\emph default
 
\end_layout

\begin_layout Standard
Generates arrays of noise terms for each point in time.
 The default, 
\emph on
xnoisegen()
\emph default
 returns 
\emph on
noises(1)
\emph default
 +
\emph on
 noises(2)
\emph default
 Gaussian real noises that are delta-correlated in time, space and momentum
 space, unless 
\emph on
nfilter
\emph default
 is used to modify momentum space correlations.
\end_layout

\begin_layout Subsection

\emph on
observe(a, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xobserve{1}=@(a,p) a
\emph default
 
\end_layout

\begin_layout Standard
Cell array of function handles that take the current field and returns an
 observable o.
 Note the use of braces for cell arrays! One can input these as 
\emph on
p.observe{n} = @(a,p) f(a,p)
\emph default
.
 An omitted function less than the maximum index is replaced by the default,
 which is the vector 
\emph on
a
\emph default
 of real field amplitudes.
\end_layout

\begin_layout Subsection

\emph on
prop(a, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xprop()
\emph default
 
\end_layout

\begin_layout Standard
Returns the fields propagated for one step in the interaction picture, given
 an initial field a, using the propagator array.
 The time-step used in propagator depends on the input time-step, the error-chec
king and the algorithm.
 The default, 
\emph on
xprop
\emph default
, takes a Fourier transform of 
\begin_inset Formula $\mathbf{a}$
\end_inset

, multiplies by propfactor to propagate in time, then takes an inverse Fourier
 transform.
\end_layout

\begin_layout Subsection

\emph on
propfactor(nc, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xpropfactor()
\emph default
 
\end_layout

\begin_layout Standard
Returns the interaction picture propagator used by the prop function.
 The time propagated is a fraction of the current integration time-step,
 
\emph on
dt
\emph default
.
 It is equal to 
\begin_inset Formula $1/ipsteps$
\end_inset

 of the integration time-step.
 It uses data from the 
\begin_inset Formula $\mathbf{linear}$
\end_inset

 function to calculate this.
\end_layout

\begin_layout Subsection

\emph on
randomgen(xp)
\end_layout

\begin_layout Description
Default: 
\emph on
xrandomgen()
\emph default
 
\end_layout

\begin_layout Standard
Generates a set of initial random fields v to initialize the fields simulated.
 The default, 
\begin_inset Formula $\mathbf{xrandomgen}$
\end_inset

, returns Gaussian real fields that are delta-correlated in space or momentum
 space.
 The default uses rfilter to modify spatial correlations in momentum space
 if specified.
\end_layout

\begin_layout Subsection

\emph on
rfilter(w, p)
\end_layout

\begin_layout Description
Default: 
\emph on
xrfilter()
\emph default
 
\end_layout

\begin_layout Standard
Returns the momentum-space filter function for the momentum-space random
 terms.
 Each component has an array dimension the same as the input random fields
 in momentum space, that is, the return dimension is 
\emph on
[inrandoms(2), nlattice]
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
method(a, w, p)
\end_layout

\begin_layout Description
Default: 
\emph on
MP
\emph default
 (stochastic); 
\emph on
RK4
\emph default
 (deterministic) 
\end_layout

\begin_layout Standard
Specifies the stochastic integration method for the field 
\emph on
a
\emph default
, noise 
\emph on
w
\emph default
, parameters 
\emph on
p
\emph default
.
 It returns the new field 
\emph on
a
\emph default
.
 It uses the current reduced step in time p.dtr and current time p.t.
 This function can be set to any of the predefined stochastic integration
 routines provided with xSPDE, described in the Algorithms section.
 User-written functions can also be used.
 The default deterministic method, 
\emph on
RK4
\emph default
, is a fourth-order interaction picture Runge-Kutta.
 The default stochastic method, 
\emph on
MP
\emph default
, is an interaction picture midpoint integrator and is used if 
\begin_inset Formula $ensembles$
\end_inset

 is not 
\emph on
[1,1,1]
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
transfer(v, p, a0, p0)
\end_layout

\begin_layout Description
Default: 
\emph on
xtransfer()
\emph default
 
\end_layout

\begin_layout Standard
This function initializes sequential simulations,
\series bold
 
\series default
where the previous field 
\emph on
a0
\emph default
 and parameter structure 
\emph on
p0
\emph default
 are inputs to the next stage in the integration sequence.
 The default, 
\emph on
xtransfer()
\emph default
, takes the output, 
\emph on
a0
\emph default
 of the previous simulation to initialize the fields 
\begin_inset Formula $a$
\end_inset

.
 Otherwise, this function is identical to 
\emph on
initial()
\emph default
.
 The default set by 
\emph on
xtransfer
\emph default
 is 
\begin_inset Formula $a=a0$
\end_inset

.
\end_layout

\begin_layout Section
Internal function reference
\begin_inset CommandInset label
LatexCommand label
name "sec:xSIM-internal-functions"

\end_inset


\end_layout

\begin_layout Standard
The following xSIM predefined functions are available to define the differential
 equations and averages.
 They all start with a capital letter.
 Algorithms are documented in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Algorithms"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Fields can be differentiated or integrated only in space, observables in
 space or time.
\end_layout

\begin_layout Subsection

\emph on
Ave(o[, av ], p)
\end_layout

\begin_layout Standard
This function takes a field or observable and returns an average over one
 or more dimensions.
 The input includes an optional averaging switch 
\shape italic
av
\shape default
.
 If 
\begin_inset Formula $av(j)>0$
\end_inset

, an average is taken over dimension
\emph on
 j
\emph default
.
 If the 
\emph on
av
\emph default
 vector is omitted, the average is taken over all space directions.
\end_layout

\begin_layout Subsection

\emph on
Bin(o[, dx ], p)
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $Bin$
\end_inset

 function takes a field o and returns probabilities on space axes that are
 defined by a vector dx.
 This allows binning of position probabilities if the observable is a mean
 position that is plotted on an axis.
 If 
\emph on
j 
\emph default
is the first index with 
\begin_inset Formula $dx(j)>0$
\end_inset

, the binning is taken over dimension 
\emph on
j
\emph default
.
 The results returned are the probability of o in the bin, normalized by
 
\begin_inset Formula $1/dx\left(j\right)$
\end_inset

.
 If the input array is Fourier transformed, by using the transforms attribute
 in the observe function, then one must set 
\begin_inset Formula $dx(j)=p.dk(j)$
\end_inset

 for transformed dimensions j.
 If the dx vector is omitted, or a scalar dx is used, the binning is over
 the first space direction.
\end_layout

\begin_layout Subsection

\emph on
D1(a[, dir,ind], p)
\end_layout

\begin_layout Standard
Takes a scalar or vector field 
\emph on
a
\emph default
 and returns a derivative with direction 
\emph on
dir
\emph default
 using finite differences.
 Set 
\shape italic
dir = 2
\shape default
 for an x-derivative, 
\shape italic
dir = 3
\shape default
 for a y-derivative, and so on.
 The default value is 
\begin_inset Formula $dir=2$
\end_inset

, which is an x-derivative.
 If the direction is input, an index 
\begin_inset Formula $ind$
\end_inset

 can be included to take a derivative of one component.
 If this is omitted, derivatives of all components are returned.
 Boundary conditions are from the 
\emph on
boundaries
\emph default
 input.
 The D1 input uses the entire field to identify components and boundary
 values.
 It can be made periodic (
\emph on
boundaries = 0
\emph default
), which is the default, or Neumann/Robin with specified derivatives using
 
\emph on
boundaries = -1
\emph default
, or Dirichlet with specified field using 
\emph on
boundaries = 1
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
D2(a[, dir,ind], p)
\end_layout

\begin_layout Standard
This takes a scalar or vector field 
\emph on
a
\emph default
 and returns the second derivative in direction 
\emph on
dir
\emph default
.
 Set 
\emph on
dir = 2
\emph default
 for an x-derivative, 
\emph on
dir = 3
\emph default
 for a y-derivative, and so on.
 Other properties are the same as 
\emph on
D1()
\emph default
.
\end_layout

\begin_layout Subsection

\emph on
Int(o[, dx, bounds], p)
\end_layout

\begin_layout Standard
This function takes any vector or scalar field or observable and returns
 a space integral over selected dimensions with vector measure 
\emph on
dx
\emph default
.
 If 
\begin_inset Formula $dx(j)>0$
\end_inset

, dimension 
\emph on
j
\emph default
 is integrated.
 Time integrals are only possible for observables.
 Space dimensions are labelled from 
\emph on
j = 2,3,...dimension
\emph default
s.
 To integrate over the lattice, set 
\emph on
dx = p.dx
\emph default
, otherwise set 
\emph on
dx(j) = p.dx(j)
\emph default
 for integrated dimensions and 
\emph on
dx(j) = 0 
\emph default
for non-integrated dimensions.
\end_layout

\begin_layout Standard
If the input array is Fourier transformed by using the 
\emph on
p.transforms
\emph default
 attribute, one must set 
\emph on
dx(j) = p.dk(j)
\emph default
 for transformed dimensions 
\emph on
j
\emph default
, to get correct results.
 If the 
\emph on
dx
\emph default
 vector is omitted, the integral is over all available space dimensions,
 assuming no Fourier transforms.
 The optional input 
\emph on
bounds
\emph default
 is an array of size 
\emph on
[p.dimensions,2]
\emph default
, which specifies lower and upper integration bounds in each direction.
 This is only available if 
\emph on
dx
\emph default
 is input.
 If omitted, integration is over the whole domain.
\end_layout

\begin_layout Section
Arrays and indices
\end_layout

\begin_layout Standard
Knowing the details of array indexing inside xSPDE isn't usually necessary.
 Yet it becomes important if you want to write your own functions to extend
 xSPDE, interface xSPDE with other functions, or read and write xSPDE data
 files with external programs.
 It also helps to understand how the program works.
\end_layout

\begin_layout Subsection
Array tables
\end_layout

\begin_layout Standard
There are two main internal xSPDE arrays:, 
\emph on
fields
\emph default
 labelled 
\begin_inset Formula $a$
\end_inset

 and output 
\emph on
data
\emph default
 labelled 
\begin_inset Formula $d$
\end_inset

.
 The 
\emph on
fields
\emph default
 contain stochastic variables, the 
\emph on
data 
\emph default
contains the averaged outputs and errors estimates.
\end_layout

\begin_layout Standard
Important array and index definitions are:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Indices 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[f,\mathbf{i},e\right]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stochastic field array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
v
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[m_{1},\mathbf{i},e\right]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial random variable array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
w
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[m_{2},\mathbf{i},e\right]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Noise field array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
r{2},k{2}....

\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(1,\mathbf{i},1)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Numbered space/momentum coordinates
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
x,y,z,kx,ky,kz
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $(1,\mathbf{i},1)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Labelled space/momentum coordinates
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\{n\}(\ell,\mathbf{j})$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cell array of all observed averages
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $d$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\{s\}\{n\}(\ell,\mathbf{j},c)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cell array of data with errors
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $rawdata$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\{s,c,h\}(f,\mathbf{j},e)$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Raw trajectories
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $points$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[pt_{1},pt_{2}\ldots pt_{d}\right]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vector of lattice sizes:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $ensembles$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[e,h_{1},h_{2}\right]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vector of ensemble sizes:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Here: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $f$
\end_inset

 is the field index, combining fields and auxiliary fields 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathbf{i}$
\end_inset

 is the space index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $e$
\end_inset

 is the vector ensemble index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathbf{m}$
\end_inset

 is the random or noise index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathbf{j}=[j_{1},\mathbf{i}]$
\end_inset

 is the space-time index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\ell$
\end_inset

 is the line index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $n$
\end_inset

 is the observe and/or function index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h$
\end_inset

 is the high-level ensemble index (combines 
\begin_inset Formula $h_{1},h_{2}$
\end_inset

) 
\end_layout

\begin_layout Itemize
\begin_inset Formula $s$
\end_inset

 is the sequence index 
\end_layout

\begin_layout Itemize
\begin_inset Formula $c$
\end_inset

 is the check index 
\end_layout

\begin_layout Standard
When fields are passed to 
\emph on
observe
\emph default
, or to 
\emph on
rawdata
\emph default
 outputs, the defined or auxiliary fields are included as well.
 Apart from the first dimension, the common dimensionality for internal
 arrays used in computations is 
\begin_inset Formula $d.lattice=[d.space,ensembles(1)]$
\end_inset

.
\end_layout

\begin_layout Subsection
Simulation data in xSIM
\end_layout

\begin_layout Standard
In xSIM, the space-time dimension 
\begin_inset Formula $d$
\end_inset

 is unlimited, although xGRAPH can only plot up to three chosen axes at
 a time.
 All fields are stored in real or complex numerical arrays of rank 
\begin_inset Formula $1+d$
\end_inset

.
 Average results are stored are stored in real or complex numerical arrays
 of rank 
\begin_inset Formula $2+d$
\end_inset

.
\end_layout

\begin_layout Standard
The array index ordering in xSPDE integrated fields is 
\begin_inset Formula $(f_{i},\mathbf{i},e)$
\end_inset

, where: 
\end_layout

\begin_layout Itemize
The first index is an integrated field index 
\begin_inset Formula $f_{i}$
\end_inset

, not including auxiliary fields 
\end_layout

\begin_layout Itemize
The next 
\begin_inset Formula $d-1$
\end_inset

 indices are 
\begin_inset Formula $\mathbf{i}$
\end_inset

, which is a space index with no time index.
 
\end_layout

\begin_layout Itemize
The last is an ensemble index 
\begin_inset Formula $e$
\end_inset

, to store low-level parallel trajectories.
 
\end_layout

\begin_layout Standard
The array index ordering in graphical averaged data is 
\begin_inset Formula $(\ell,\mathbf{j},c)$
\end_inset

where: 
\end_layout

\begin_layout Itemize
The first index is a line index 
\begin_inset Formula $\ell$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The next 
\begin_inset Formula $d$
\end_inset

 indices are 
\begin_inset Formula $\mathbf{j}=\left[j_{1},\ldots j_{d}\right]=\left[j,\mathbf{i}\right]$
\end_inset

, for time 
\emph on
and
\emph default
 space.
 
\end_layout

\begin_layout Itemize
The last is a check index 
\begin_inset Formula $c$
\end_inset

, for comparisons and errors.
 
\end_layout

\begin_layout Standard
Stored data uses heterogenous cell arrays to package numerical arrays with
 additional high level indices.
 The first cell index is the sequence index, 
\begin_inset Formula $s$
\end_inset

.
 Inside each sequence, data cell arrays all have a graph index 
\begin_inset Formula $n$
\end_inset

.
 This distinguishes the different averages generated for output graphs and
 data.
 Raw data has cell indices for the sequence, time-step and high level ensembles.
\end_layout

\begin_layout Standard
In summary, the xSPDE internal arrays are as follows: 
\end_layout

\begin_layout Itemize

\series bold
Field
\series default
 arrays 
\begin_inset Formula $a(f_{i},\mathbf{i},e)$
\end_inset

 - these have a field index, a space index and low-level ensemble index
 
\begin_inset Formula $e$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\series bold
Auxiliary
\series default
 arrays 
\begin_inset Formula $ax(f_{a},\mathbf{i},e)$
\end_inset

 - these are appended to the field arrays for raw data and observables.
 
\end_layout

\begin_layout Itemize

\series bold
Random
\series default
 and 
\series bold
noise
\series default
 arrays 
\begin_inset Formula $w(m,\mathbf{i},e)$
\end_inset

 - these are initial random fields or noise fields.
 The first index may have a different range to the field index.
 
\end_layout

\begin_layout Itemize

\series bold
Coordinate
\series default
 arrays 
\begin_inset Formula $x(1,\mathbf{i})$
\end_inset

 - these contain the coordinates at grid-points, with labels 
\begin_inset Formula $x,y,z$
\end_inset

, and 
\begin_inset Formula $j_{1}=1$
\end_inset

.
 Numeric labels 
\begin_inset Formula $x\{l\}$
\end_inset

 are used for 
\begin_inset Formula $d>4$
\end_inset

, where 
\begin_inset Formula $l=2,\ldots d$
\end_inset

.
 The same sizes are used for: 
\end_layout

\begin_deeper
\begin_layout Itemize
momentum coordinates 
\begin_inset Formula $kx,ky,kz$
\end_inset

 (alternatively 
\begin_inset Formula $k\{2\},k\{3\},\ldots$
\end_inset

) 
\end_layout

\begin_layout Itemize
spectral derivative arrays 
\begin_inset Formula $Dx,Dy,Dz$
\end_inset

 (alternatively 
\begin_inset Formula $D\{2\},D\{3\},\ldots$
\end_inset

) .
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Raw
\series default
 
\series bold
data
\series default
 arrays 
\begin_inset Formula $r\{s,c,h\}(f,\mathbf{j},e)$
\end_inset

 - these are cell arrays of generated trajectories, including integrated
 and defined field values.
 They are optional, as they use large amounts of memory.
 These are saved in cell arrays with indices 
\begin_inset Formula $s$
\end_inset

 for the sequence, 
\begin_inset Formula $c$
\end_inset

 for the time-step error-check and 
\begin_inset Formula $h$
\end_inset

 for high level ensemble index.
 The cell indices are: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $s=1,\ldots S$
\end_inset

 for the sequence number, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $c=1,2$
\end_inset

 for the error-checking time-step used, first coarse then fine, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $h=1,\ldots ensembles(2)*ensembles(3)$
\end_inset

 for a high level parallel and serial ensemble index.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Observe
\series default
 data arrays 
\begin_inset Formula $o\{n\}(\ell,\mathbf{j})$
\end_inset

 - these are generated in xSIM by the observe functions, then used to store
 generated average data at all time points.
 The cell index 
\begin_inset Formula $n$
\end_inset

 is the 
\emph on
observe
\emph default
 index, which indexes overs the observe functions.The internal index 
\begin_inset Formula $\ell$
\end_inset

 is a 
\emph on
line
\emph default
 index generated by an observe function.
 
\end_layout

\begin_layout Itemize

\series bold
Graphics
\series default
 data arrays 
\begin_inset Formula $g\{s\}\{n\}(\ell,\mathbf{j},c))$
\end_inset

 - these store the final results.
 Check indices are added to store error estimates and comparisons, where
 
\begin_inset Formula $c=1$
\end_inset

 for the average, 
\begin_inset Formula $c=2$
\end_inset

 for the time-step error, and 
\begin_inset Formula $c=3$
\end_inset

 for the sampling error.
 If there is comparison data, it uses 
\begin_inset Formula $c=4$
\end_inset

 up to 
\begin_inset Formula $c=6$
\end_inset

, to allow for error bars.
 Graphics cell data uses cell indices 
\begin_inset Formula $\{s\}$
\end_inset

 for the 
\emph on
sequence
\emph default
 index, and 
\begin_inset Formula $\{n\}$
\end_inset

 for the 
\emph on
graph
\emph default
 index.
 This has a default of the index of the 
\emph on
observe
\emph default
 function.
 Otherwise, if this is overwritten by an xSIM output 
\emph on
function
\emph default
, the graph index equals the function index.
 
\end_layout

\begin_layout Section
Internal parameter table
\begin_inset CommandInset label
LatexCommand label
name "sec:Table-of-parameters"

\end_inset


\end_layout

\begin_layout Standard
The internal parameter structures in xSPDE are available to the user if
 required.
 Internally, all xSPDE parameters are stored in the parameter structures
 passed to functions.
 This includes the data given above from the input structures.
 In addition, it includes the computed parameters given below, which includes
 internal array dimensions.
\end_layout

\begin_layout Standard
Data in 
\begin_inset Formula $k-$
\end_inset

space is stored in two alternative lattices, each having their own axis
 vectors.
 The propagation grid is used while propagating, and is compatible with
 numerical FFT conventions where the first index value is 
\begin_inset Formula $k=0$
\end_inset

.
 The graphics grid is centered around 
\begin_inset Formula $k=0$
\end_inset

, and is used for graphics and data storage, following scientific conventions.
\end_layout

\begin_layout Standard
For more than four total dimensions, the spatial grid, momentum grid and
 derivative grid notation of 
\emph on

\begin_inset Formula $t,x,y,z$
\end_inset

, 
\begin_inset Formula $\omega,kx,ky,kz$
\end_inset


\emph default
 and 
\emph on

\begin_inset Formula $Dx,Dy,Dz$
\end_inset


\emph default
 is changed to use numerical labels that correspond to the dimension numbers,
 i.e., 
\begin_inset Formula $D\{2\},\dots D\{d\}$
\end_inset

, 
\begin_inset Formula $r\{1\},\dots r\{d\}$
\end_inset

, 
\begin_inset Formula $k\{1\},\dots k\{d\}$
\end_inset

.
\end_layout

\begin_layout Standard
Numeric dimension labeling can also be used even for lower dimensionality
 if preferred.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="37" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typical value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $t,x,y,z$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time grid of 
\begin_inset Formula $t,x,y,z$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $\omega,kx,ky,kz$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Frequency-momentum grid of 
\begin_inset Formula $k_{x},k_{y},k_{z}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $Dx,Dy,Dz$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Derivative grid of 
\begin_inset Formula $D_{x},D_{y},D_{z}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $r\{1\},\ldots r\{d\}$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time grid of
\emph on
 
\begin_inset Formula $r_{1},\ldots r_{d}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $k\{1\},\ldots k\{d\}$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphics momentum grid of
\emph on
 
\begin_inset Formula $k_{1},\ldots k_{d}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $D\{2\},\ldots D\{d\}$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Derivative grid of
\emph on
 
\begin_inset Formula $D_{2},\ldots D_{d}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dx
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[0.2,..]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Steps in 
\begin_inset Formula $[t,x,y,z]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dk
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[0.61,....]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Steps in 
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.2000
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dtr
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.1000
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Computational time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
v
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spatial lattice volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
kv
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Momentum lattice volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dv
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spatial cell volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dkv
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Momentum cell volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
xc{d}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cells of vectors 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[-5,...
 5]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coordinate axes in 
\begin_inset Formula $t,x,y,z$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
kc{d}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cells of vectors 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[-5,..5]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphics axes in
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
kcp{d}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cells of vectors 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[0,...]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagation axes in
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dx
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dxt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
3.1623
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagating stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dk
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial k stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dkt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
3.1623
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagating k stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
nspace
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
35 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of spatial lattice points
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
nlattice
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3500 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total lattice: 
\emph on
ensembles(1) x n.space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ncopies
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ensembles(2) x ensembles(3)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
inrandoms
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[2,0] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of initial random fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
noises
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[2,0] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of noise fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.space
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[35, 35]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space dimensions: [points(2), points(3), ...]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.lattice
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lattice dimensions: [d.space, ensembles(1)]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.a
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for 
\begin_inset Formula $a$
\end_inset

 field
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.r
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for coordinates
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.fields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for 
\begin_inset Formula $a$
\end_inset

 field (including time)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.aplus
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for integrated plus defined fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.k
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[0, 1, 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for noise transforms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.obs
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 35]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for observations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.data
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 35, 3]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for average data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.raw
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1, 51, 35, 100]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for raw data
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
xSIM structure
\end_layout

\begin_layout Subsection
xSPDE
\end_layout

\begin_layout Standard
The control program, 
\begin_inset Formula $xspde$
\end_inset

, calls the 
\emph on
xsim
\emph default
 integration and 
\emph on
xgraph
\emph default
 graphics functions successively
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{xspde}\rightarrow\begin{cases}
\begin{array}{c}
\mathbf{xsim}\,\,(simulations)\\
\mathbf{xgraph}\,\,(graphics)
\end{array}\end{cases}
\]

\end_inset


\end_layout

\begin_layout Subsection
xSIM
\end_layout

\begin_layout Standard
The integration function, 
\begin_inset Formula $xsim$
\end_inset

, generates all data.
 It first carries out elementary checks in 
\emph on
xpreferences
\emph default
 and constructs the grid of lattice points in 
\emph on
xlattice
\emph default
.
 Then it generates the nested ensembles in 
\emph on
xensemble
\emph default
, and integrates each subensemble using 
\emph on
xpath
\emph default
.
 The output data is written to files, if required, in 
\emph on
xwrite
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\mathbf{xsim} & \rightarrow\mathbf{xpreferences}\rightarrow\mathbf{xlattice}\,\,(checks\,inputs)\\
 & \rightarrow\mathbf{xensemble}\leftrightarrow\mathbf{xpath}\leftrightarrow\mathbf{xdata}\,\,(simulates)\\
 & \rightarrow\mathbf{xwrite}\,\,\,\,(stores\,data)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
xGRAPH reference
\begin_inset CommandInset label
LatexCommand label
name "sec:xGRAPH-reference"

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
This section gives a reference explanation of the xGRAPH parameters and
 functions.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
The graphics function provided is a general purpose multidimensional batch
 graphics code, xGRAPH, which is automatically called by xSPDE when xSIM
 is finished.
 The results are graphed and output if required.
 Alternatively, xGRAPH can be replaced by another graphics code, or it can
 be used to process the data generated by the xSIM function at a later time.
\end_layout

\begin_layout Standard
The 
\emph on
xgraph
\emph default
 function call syntax is: 
\end_layout

\begin_layout Itemize

\series bold
\emph on
xgraph (data [,input])
\series default
\emph default
 
\end_layout

\begin_layout Standard
This takes simulation 
\emph on
data
\emph default
 and 
\emph on
input
\emph default
 cell arrays, then plots graphs.
 The 
\emph on
data
\emph default
 should have as many cells as there are 
\emph on
input
\emph default
 cells, for sequences.
\end_layout

\begin_layout Standard
If 
\emph on
data = 'filename.h5'
\emph default
 or
\emph on
 'filename.mat'
\emph default
, the specified file is read both for 
\emph on
input
\emph default
 and 
\emph on
data
\emph default
.
 Here 
\emph on
.h5
\emph default
 indicates an HDF5 file, and 
\emph on
.mat
\emph default
 indicates a Matlab file.
\end_layout

\begin_layout Standard
When the 
\emph on
data
\emph default
 input is a filename, parameters in the file can be replaced by new 
\emph on
input
\emph default
 parameters that are specified.
 Any stored 
\emph on
input
\emph default
 in the file is then overwritten when graphs are generated.
 This allows graphs of data to be modified retrospectively, if the simulation
 takes too long to be run again in a reasonable timeframe.
\end_layout

\begin_layout Subsection
Parameter and data structures
\end_layout

\begin_layout Standard
This is a batch graphics function, intended to process quantities of graphics
 data, input as a cell array of multi-dimensional data.
 Theoretical and/or experimental data is passed to the graphics program,
 including the complete 
\emph on
data
\emph default
 cell array and a cell array of graphics parameters for plotting each graph.
\end_layout

\begin_layout Standard
To explain xGRAPH in full detail, 
\end_layout

\begin_layout Itemize
Data to be graphed are recorded sequentially in a cell array, with 
\emph on
data={d1,d2,...}
\emph default
.
 
\end_layout

\begin_layout Itemize
Graphics parameters including defaults are given in the 
\emph on
input
\emph default
 cell array.
 
\end_layout

\begin_layout Itemize
This describes a sequence of graph parameters, so that 
\emph on
input={p1,p2,...}
\emph default
.
 
\end_layout

\begin_layout Itemize
For a one member sequence, a dataset and parameter structure can be used
 on its own.
 
\end_layout

\begin_layout Itemize
Each dataset and parameter structure describes a set of graphs.
 
\end_layout

\begin_layout Standard
The data input to 
\emph on
xGRAPH 
\emph default
can either come from a file, or from data generated directly with 
\emph on
xSIM
\emph default
.
 The main graphics data is a nested cell array.
 It contains several numerical graphics arrays.
 Each defines one independent set of averaged data, the observed data averages,
 stored in a cell array indexed as 
\begin_inset Formula $data\{s\}\{n\}(\ell,\mathbf{j},c)$
\end_inset

.
 To graph these also requires a corresponding cell array of structures of
 graphics parameters.
\end_layout

\begin_layout Standard
The output is unlimited, apart from memory limits.
 The program also generates error comparisons and chi-squared values if
 required.
 The data structure for input is as follows: 
\end_layout

\begin_layout Enumerate
The input 
\emph on
data
\emph default
 is a cell array of 
\emph on
datasets, 
\emph default
which can be collapsed to a single dataset 
\end_layout

\begin_layout Enumerate
The
\emph on
 parameters
\emph default
 are also a cell array of parameter structures, which can be collapsed to
 one structure 
\end_layout

\begin_layout Enumerate
The 
\emph on
dataset 
\emph default
is a cell array of multidimensional 
\emph on
graphs
\emph default
, each with arbitrary dimensionality.
 
\end_layout

\begin_layout Enumerate
The first or 
\emph on
line
\emph default
 index of each graph array allows multiple lines, with different line-styles
 
\end_layout

\begin_layout Enumerate
The last or 
\emph on
check
\emph default
 index of each graph array is optionally used for error and comparison fields.
 
\end_layout

\begin_layout Enumerate
Each 
\emph on
graph
\emph default
 array can generate multiple graphic plots, as defined by the parameters.
 
\end_layout

\begin_layout Subsection
Comparisons
\end_layout

\begin_layout Standard
For every type of observation in xSIM, the observe function can be accompanied
 by a comparison function, 
\emph on
compare(p)
\emph default
.
 This generates a vector of analytic solutions or experimental data which
 is compared to the stochastic results.
 Results are plotted as additional lines on the two-dimensional graphical
 outputs, and comparison differences can be graphed in any dimension.
\end_layout

\begin_layout Standard
Comparisons are possible for either moments or probabilities, and can be
 input in any number of dimensions.
 When there are error estimates, a chi-squared test is carried out to determine
 if the difference is within the expected step-size and sampling error bars.
 If the comparison has errors, for example from experimental data, the chi-squar
ed test will include the experimental errors.
\end_layout

\begin_layout Standard
Comparison data can be added to the graphics files from any source.
 It must match the corresponding space-time lattice or probability bins
 that are in the graphed data.
 Note that the 
\emph on
compare 
\emph default
functions are specified during the simulation.
 The graphics code does not generate comparison data, as it is dedicated
 to graphics, not to generating data.
\end_layout

\begin_layout Section
Parameter table
\begin_inset CommandInset label
LatexCommand label
name "sec:Graphics-parameter-table"

\end_inset


\end_layout

\begin_layout Standard
The complete cell array of the simulation data is passed to the 
\emph on
xGRAPH
\emph default
 program, along with graphics parameters for each observable, to create
 an extended graphics data structure.
 Graphics parameters have default values which are user-modifiable by editing
 the
\emph on
 xgpreferences
\emph default
 function.
\end_layout

\begin_layout Standard
Some input parameters are global parameters for all graphs.
 However, most 
\emph on
xGRAPH
\emph default
 parameters are cell arrays indexed by graph index.
 These graphics parameters are individually set for each output that is
 plotted, using the cell index 
\begin_inset Formula $\{n\}$
\end_inset

 in a curly bracket.
 If present they replace the global parameters like labels.
\end_layout

\begin_layout Standard
If a graph index is omitted, and the parameter is not a nested array, the
 program will use the same value for all graphs.
 The 
\emph on
axes
\emph default
, 
\emph on
glabels, legends, lines, logs, 
\emph default
and
\emph on
 xfunctions
\emph default
 of each graph are nested cell arrays, as there can be any number of lines
 and axis dimensions.
 In the case of the 
\emph on
logs
\emph default
 switch, the observable axis is treated as an extra dimension.
\end_layout

\begin_layout Standard
The plotted result can be an arbitrary function of the generated average
 data, by using the optional input
\emph on
 gfunction.
 
\emph default
If this is omitted, the
\emph on
 
\emph default
generated average data that is input is plotted.
\end_layout

\begin_layout Standard
Comparisons are plotted if present in the input data indexed by the last
 or check index 
\begin_inset Formula $c$
\end_inset

, with 
\emph on

\begin_inset Formula $c>errors$
\end_inset


\emph default
, where 
\emph on

\begin_inset Formula $errors=3$
\end_inset


\emph default
 is the usual maximum value.
\end_layout

\begin_layout Standard
A table of the graphics parameters is given below.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="35" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
axes{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{0,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Points plotted for each axis
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
chisqplot{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chi-square plot options
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
cutoff
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.e-12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global lower cutoff for chi-squares
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
cutoffs{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
cutoff
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Probability cutoff for n-th graph
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
diffplot{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comparison difference plot options
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
errors
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index of last error field in 
\emph on
data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
esample{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size and type of sampling error-bar
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
font{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Font size for graph labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
gfunction{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
@(d,~)
\begin_inset space ~
\end_inset

d{n} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Functions of graphics data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
glabels{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{'t' ,'x' ,'y' ,'z'}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graph-specific axis labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
graphs
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $[1:max]$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vector of all the required graphs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
gsqplot{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
G-square (likelihood) plot options
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
headers{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graph headers
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
images{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of movie images
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
imagetype{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of 3D image
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
klabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{'
\backslash
omega' ,'k_x' ,'k_y' ,'k_z'...}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global transformed axis labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
legends{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{'label1',..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Legends for multi-line graphs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
limits{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{[lc1,uc1],[lc2,uc2]}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Axis limits, first lower then upper
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
linestyle{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{'-',..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Line styles for multiline 2D graphs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
linewidth{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.5
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Line width for 2D graphs (in points)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
logs{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{0,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Axis logarithmic switch: 
\begin_inset Formula $0$
\end_inset

 linear, 
\begin_inset Formula $1$
\end_inset

 log
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
minbar{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.01
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum relative error-bar
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
mincount
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global counts for chi-square cutoffs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
name
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global graph header
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
olabels{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'a_1'
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
pdimension{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum plot dimensions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
saveeps
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Switch, set to 1 to save eps files
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
savefig
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Switch, set to 1 to save figure files
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
scale{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Scaling: Counts/ probability density
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transverse{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of transverse plots
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
xfunctions{n}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{@(t,~) t,@(x,~) x,..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Axis transformations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
verbose 
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 for brief, 1 for informative, 2 for full output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
xlabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{'t' ,'x' ,'y' ,'z'...}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Global axis labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
octave
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 for Matlab, 1 for octave environment
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize
Up to 6 types of input data can occur, including errors and comparisons,
 indexed by the last index.
 The original mean data always has 
\emph on
c =1
\emph default
.
 If there are no errors or comparisons, one graph is plotted for each dimensiona
l reduction.
 
\end_layout

\begin_layout Itemize
The input data has up to two error bars (I and II), and optional comparisons
 also with up to two error bars.
 
\end_layout

\begin_layout Itemize
Type I errors labeled 
\emph on

\begin_inset Formula $c=2$
\end_inset


\emph default
 have standard vertical error bars.
 Type II errors labeled 
\emph on

\begin_inset Formula $c=3$
\end_inset


\emph default
, which are usually standard deviation errors from sampling, have two solid
 lines.
 
\end_layout

\begin_layout Itemize
If 
\emph on
esample
\emph default
 = -1
\emph on
,
\emph default
 both error bars are combined and the RMS errors are plotted as a single
 error bar.
 
\end_layout

\begin_layout Itemize
If 
\emph on

\begin_inset Formula $diffplot>0$
\end_inset

, 
\emph default
differences are plotted as unnormalized (
\emph on

\begin_inset Formula $diffplot=1$
\end_inset

)
\emph default
, or normalized
\emph on
 
\emph default
(
\emph on

\begin_inset Formula $diffplot=2$
\end_inset

) 
\emph default
by the total RMS errors.
 If 
\begin_inset Formula $diffplot=3$
\end_inset

, raw comparison data is plotted.
 
\end_layout

\begin_layout Itemize
When differences are plotted, the total comparison errors are treated as
 type I error bars, while total simulation errors are treated as type II
 errors with parallel lines in the graphs, in order to distinguish them.
 
\end_layout

\begin_layout Standard
A detailed description of each parameter is listed in Sec (
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Parameter-reference"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Section
Example
\end_layout

\begin_layout Standard
A simple example of data and input parameters, but without errors or comparisons
 is as follows 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
p.name = 'Sine and cosine functions';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'sine(m_1
\backslash
pi/100)','cosine(m_1
\backslash
pi/100)'};
\end_layout

\begin_layout Plain Layout

\family typewriter
data = {sin([1:100*pi]/100),cos([1:100*pi]/100)};
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(data,p);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename xGraphfig1.pdf
	width 50text%

\end_inset


\begin_inset Graphics
	filename xGraphfig2.pdf
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Example: xgraph output of two plots.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that in this case the default setting of 
\emph on
p.errors=0 
\emph default
is used, with no check index used in the data arrays, because these are
 simple graphs without error-bars or comparisons.
\end_layout

\begin_layout Section
xGRAPH data arrays
\end_layout

\begin_layout Standard
The data input to 
\emph on
xGRAPH 
\emph default
can come from a file, or from data generated directly from any compatible
 program.
\end_layout

\begin_layout Standard
The data is stored in a cell array 
\begin_inset Formula $data$
\end_inset

 with structure: 
\begin_inset Formula 
\[
data\{s\}\{n\}(\ell,\mathbf{j},c)
\]

\end_inset

Each member of the outer cell array 
\emph on
data{s}
\emph default
 defines a number of related sets of graphical data, all described by common
 parameters 
\emph on
input{s}
\emph default
.
 Comparisons and errors are plotted if there are errors and comparison data
 in the input, indexed by 
\emph on
c
\emph default
.
 This generates comparison plots, as well as error totals and 
\begin_inset Formula $\chi$
\end_inset

- squared error estimate when there are statistical variances available.
\end_layout

\begin_layout Standard
An individual member of 
\emph on
data{s}{n}
\emph default
 is a multidimensional array, called a 
\emph on
graph
\emph default
 in the xSPDE User's guide.
 For each 
\emph on
graph
\emph default
, multiple different plots with different dimensionality can be obtained
 from the dataset 
\emph on
data{s}{n}
\emph default
, either through projections and slices or by generating additional data
 defined with graphics functions.
 Either or both alternatives are available.
\end_layout

\begin_layout Standard
Note that: 
\end_layout

\begin_layout Itemize
If a sequence has one member, the outer cell array can be omitted.
 
\end_layout

\begin_layout Itemize
In this simplified case, if there is only one 
\emph on
graph
\emph default
 array, the inner cell array can be omitted.
 
\end_layout

\begin_layout Standard
The graphics data for a single dataset is held in a multidimensional real
 array, where: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\ell$
\end_inset

 is the index for lines in the graph.
 Even for one line, the first dimension is retained.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathbf{j}=j_{1},\ldots j_{d}$
\end_inset

 is the array index in each dimension, where 
\begin_inset Formula $d\ge1$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Averages in momentum space have the momentum origin as the central index.
 
\end_layout

\begin_layout Itemize
If integrals or spatial averages are used, the corresponding dimension has
 one index 
\begin_inset Formula $j_{d}=1$
\end_inset

.
 
\end_layout

\begin_layout Itemize
With probabilities, extra dimensions are added to 
\begin_inset Formula $\mathbf{j}$
\end_inset

 to store the bin indices.
 
\end_layout

\begin_layout Itemize

\emph on
c
\emph default
 indexes error-checks and comparisons.
 If not present, omit 
\emph on
p.errors
\emph default
 and the last dimension.
 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $c>p.errors$
\end_inset

, the extra fields are comparison inputs, where 
\begin_inset Formula $p.errors$
\end_inset

 is the largest data index.
 
\end_layout

\begin_layout Standard
When the optional comparison fields are used, an input parameter 
\begin_inset Formula $errors$
\end_inset

 is required to indicate the maximum error index, to distinguish data from
 comparisons.
 Parameter structures from xSIM have 
\begin_inset Formula $errors=3$
\end_inset

 set to allow for both sampling errors and discretization errors.
 If this is omitted, the default is 
\begin_inset Formula $errors=0$
\end_inset

, which implies that there is no error or comparison data
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $errors>0$
\end_inset

, the last index can have larger values with 
\begin_inset Formula $c>errors$
\end_inset

, for comparisons.
 The special case of 
\begin_inset Formula $errors=1$
\end_inset

 is used if the data has no error bars, but there are comparisons in the
 data.
 Larger indices are used to index the comparison data, which can also have
 two types of errors.
 The largest usable last index is 
\begin_inset Formula $errors+3$
\end_inset

.
\end_layout

\begin_layout Standard
It is possible to directly plot the 
\emph on
raw 
\emph default
data using xGRAPH.
 One can even combine the raw data with a graphics parameter input.
 But since the raw data has no error estimates - it is raw data - one must
 set 
\begin_inset Formula $p.errors=0$
\end_inset

, since the xsim output parameters have a normal setting of 
\begin_inset Formula $p.errors=3$
\end_inset

.
 This will give a single trajectory.
\end_layout

\begin_layout Standard
However, the raw data from a simulation typically includes many trajectories
 if
\emph on
 
\begin_inset Formula $ensembles(1)>0$
\end_inset


\emph default
.
 One must select particular trajectory datasets from the raw cell array,
 to plot just one.
\end_layout

\begin_layout Subsection
Input parameters and defaults
\end_layout

\begin_layout Standard
A sequence of graph parameters is obtained from inputs in a cell array,
 as 
\emph on
input = {in1, in2, ...}
\emph default
.
 The input parameters of each simulation in the sequence are specified in
 a Matlab structure.
 The inputs are numbers, vectors, strings, functions and cell arrays.
 All metadata has preferred values, so only changes from the preferences
 need to be input.
 The resulting data is stored internally as a sequence of structures in
 a cell array, to describe the simulation sequence.
\end_layout

\begin_layout Standard
The graphics parameters are also stored in the cell array 
\emph on
input
\emph default
 as a sequence of structures 
\emph on
p.

\emph default
 This only need to be input when the graphs are generated and can be changed
 at a later time to alter the graphics output.
 A sequence of simulations is graphed from 
\emph on
input
\emph default
 specifications.
\end_layout

\begin_layout Standard
If there is one simulation, just one structure can be input, without the
 sequence braces.
 The standard way to input each parameter value is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p.label=parameter
\]

\end_inset


\end_layout

\begin_layout Standard
The standard way to input a function handle is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p.label=@function
\]

\end_inset


\end_layout

\begin_layout Standard
The inputs are scalar or vector parameters or function handles.
 Quantities relating to graphed averages are cell arrays, indexed by the
 graph number.
 The available inputs, with their default values in brackets, are given
 below.
\end_layout

\begin_layout Standard
Simulation metadata, including default values that were used in a particular
 simulation, can be included in the input data files.
 This is done in both the 
\emph on
.mat
\emph default
 and the 
\emph on
.h5
\emph default
 output files generated by xSIM, so the entire graphics input can be reconstruct
ed or changed.
\end_layout

\begin_layout Standard
Parameters can be numbers, vectors, strings or cell arrays.
 Conventions that are used are that: 
\end_layout

\begin_layout Itemize
All input parameters have default values 
\end_layout

\begin_layout Itemize
Vector inputs of numbers are enclosed in square brackets, 
\emph on
[...]
\emph default
.
 
\end_layout

\begin_layout Itemize
Cell arrays of strings, functions or vectors are enclosed in curly brackets.
 
\end_layout

\begin_layout Itemize
Vector or cell array inputs with only one member don’t require brackets.
 
\end_layout

\begin_layout Itemize
Incomplete parameter inputs are completed with the last used default value.
 
\end_layout

\begin_layout Itemize
Function definitions can be handles pointing elsewhere, or defined inline.
 
\end_layout

\begin_layout Standard
If any inputs are omitted, there are default values which are set by the
 internal function
\emph on
 xgpreferences
\emph default
.
 The defaults can be changed by editing 
\emph on
xgpreferences
\emph default
.
\end_layout

\begin_layout Standard
In the following descriptions, 
\emph on
graphs
\emph default
 is the total number of graphed variables of all types.
 The space coordinate, image, image-type and transverse data can be omitted
 if there is no spatial lattice, that is, if the dimension variable is set
 to one.
\end_layout

\begin_layout Standard
For uniformity, the graphics parameters that reference an individual data
 object are cell arrays.
 These are indexed over the graph number using braces 
\emph on
{}
\emph default
.
 If a different type of input is used, like a scalar or matrix, xSPDE will
 attempt to convert the type to a cell array.
\end_layout

\begin_layout Standard
Axis labels are cell arrays, indexed over dimension.
 The graph number used to index these cell arrays refers to the data object.
 In each case there can be multiple generated plots, depending on the graphics
 input.
\end_layout

\begin_layout Section
Cascaded plots
\end_layout

\begin_layout Standard
The xGRAPH function generates a default range of graphs, but this can be
 modified to suit the user.
 In the simplest case of one dimension, one graph dataset will generate
 a single plot.
 For higher dimensions, a cascade of plots is generated to allow visualization,
 starting from 3D movies, then 3D static plots and finally 2D slices.
 These can also be user modified.
\end_layout

\begin_layout Standard
Note that for all probabilities, the plot dimension is increased by the
 bin range dimensionality.
\end_layout

\begin_layout Subsection
Plot dimensions
\end_layout

\begin_layout Standard
The 
\emph on
pdimension
\emph default
 input sets the maximum plotted dimensions.
 For example, 
\begin_inset Formula $pdimension\{1\}=1$
\end_inset

 means that only plots vs 
\begin_inset Formula $r_{1}$
\end_inset

 are output for the first function plotted.
 Default values are used for the non-plotted dimensions, unless there are
 axes specified, as indicated below.
\end_layout

\begin_layout Standard
The graphs cascade down from higher to lower dimensions, generating different
 types of graphs.
 Each type of graph is generated once for each function index.
\end_layout

\begin_layout Subsection
Plot axes
\end_layout

\begin_layout Standard
The graphics axes that are used for plotting and the points plotted are
 defined using the optional 
\emph on
axes
\series bold
 
\series default
\emph default
input parameters, where 
\begin_inset Formula $axes\{n\}$
\end_inset

 indicates the 
\emph on
n
\emph default
-th specified graph or set of generated graph data.
\end_layout

\begin_layout Standard
If there are no 
\emph on
axes
\series bold
 
\series default
\emph default
inputs, or the 
\emph on
axes
\emph default
 inputs are zero - for example, 
\begin_inset Formula $axes\{1\}=\{0,0,0\}$
\end_inset

 - only the lowest dimensions are plotted, up to 
\emph on
3
\emph default
.
 If either the data or 
\emph on
axes
\series bold
 
\series default
\emph default
inputs project one point in a given dimension, - for example, 
\begin_inset Formula $axes\{1\}=\{0,31,-1,0\}$
\end_inset

, this dimension is suppressed in the plots, which reduces the effective
 dimension of the data - in this case to two dimensions.
\end_layout

\begin_layout Standard
Examples: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $axes\{1\}=\{0\}$
\end_inset

 - For function 1, plot all the first dimensional points; higher dimensions
 get defaults.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $axes\{2\}=\{-2,0\}$
\end_inset

 - For function 2, plot the maximum value of 
\begin_inset Formula $r_{1}$
\end_inset

 (the default) and all higher-dimensional x-points.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $axes\{3\}=\{1:4:51,32,64\}$
\end_inset

 - For function 3, plot every 4-th 
\begin_inset Formula $x_{1}$
\end_inset

 point at 
\begin_inset Formula $x_{2}$
\end_inset

 point 32, 
\begin_inset Formula $x_{3}$
\end_inset

 point 64 
\end_layout

\begin_layout Itemize
\begin_inset Formula $axes\{4\}=\{0,2:4:48,0\}$
\end_inset

 - For function 4, plot every 
\begin_inset Formula $x_{1}$
\end_inset

 point , every 4-th 
\begin_inset Formula $x_{2}$
\end_inset

 point, and all 
\begin_inset Formula $x_{3}$
\end_inset

-points.
 
\end_layout

\begin_layout Standard
Points labelled 
\begin_inset Formula $-1$
\end_inset

 indicates a default `typical' point, which is the midpoint.
 If one uses 
\begin_inset Formula $-2$
\end_inset

, this is the last point.
\end_layout

\begin_layout Standard
Lower dimensions are replaced by corresponding higher dimensions if there
 are 
\emph on
dimensions
\emph default
 or 
\emph on
axes
\emph default
 that are suppressed.
 Slices can be taken at any desired point, not just the midpoint.
 The notation of 
\begin_inset Formula $axes\{1\}=\{6:3:81\}$
\end_inset

, is used to modify the starting, interval, and finishing points for complete
 control on the plot points.
\end_layout

\begin_layout Standard
The graphics results depend on the resulting 
\series bold
effective
\series default
 dimension, which is equal to the actual input data dimension unless there
 is an 
\emph on
axes
\emph default
 suppression, described above.
 Since the plot has to include a data axis, the plot itself will usually
 have an extra data axis.
\end_layout

\begin_layout Standard
One can plot only three axes directly using standard graphics tools.
 The strategy to deal with the higher effective dimensionality is as follows.
 For simplicity, 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 is used to label the first effective dimension, although in fact any first
 dimension is possible: 
\end_layout

\begin_layout Description

\emph on
dimensions
\begin_inset space ~
\end_inset

=
\begin_inset space ~
\end_inset

1
\emph default
 For one lattice dimension, a 2D plot of observable
\emph on
 vs t
\emph default
 is plotted, with data at each lattice point in time.
 Exact results, error bars and sampling error bounds are included if available.
 
\end_layout

\begin_layout Description

\emph on
dimensions
\begin_inset space ~
\end_inset

=
\begin_inset space ~
\end_inset

2
\emph default
 For two lattice dimensions, a 3D image of observable
\emph on
 vs x,t
\emph default
 is plotted.
 A movie of distinct 2D graphic plots is also possible.
 Otherwise, a slice through 
\begin_inset Formula $x=0$
\end_inset

 is used tp reduce the lattice dimension to 
\begin_inset Formula $1$
\end_inset

.
 
\end_layout

\begin_layout Description

\emph on
dimensions
\begin_inset space ~
\end_inset

=
\begin_inset space ~
\end_inset

3
\emph default
 For three lattice dimensions, if 
\begin_inset Formula $images>1$
\end_inset

, a movie of distinct 3D graphic images of observables are plotted as 
\begin_inset Formula $images$
\end_inset

 slices versus the first plot dimension.
 Otherwise, a slice through the chosen point, is used at the highest dimension
 to reduce the lattice dimension to 
\begin_inset Formula $2$
\end_inset

.
 
\end_layout

\begin_layout Description

\emph on
dimensions
\begin_inset space ~
\end_inset

=
\begin_inset space ~
\end_inset

4,5..

\emph default
 For higher lattice dimensions, a slice through a chosen point, or the default
 midpoint is used to reduce the lattice dimension to 
\begin_inset Formula $3$
\end_inset

.
 
\end_layout

\begin_layout Standard
As explained above, in addition to graphs versus 
\begin_inset Formula $x_{1}$
\end_inset

 the 
\series bold
xGRAPH
\series default
 function can generate 
\emph on
images 
\emph default
(3D)
\emph on
 
\emph default
and 
\emph on
transverse
\emph default
 (2D) plots at specified points, up to a maximum given by the number of
 points specified.
 The number of these can be individually specified for each graph number.
 The images available are specified as
\emph on
 imagetype
\emph default

\begin_inset Formula $=1,\ldots4$
\end_inset

, giving: 
\end_layout

\begin_layout Enumerate
3D perspective plots (Matlab 
\emph on
surf
\emph default
 - the default) 
\end_layout

\begin_layout Enumerate
2D filled color plots (Matlab 
\emph on
contourf
\emph default
 ) 
\end_layout

\begin_layout Enumerate
contour plots (Matlab 
\emph on
contour
\emph default
 ) 
\end_layout

\begin_layout Enumerate
pseudo-color plots (Matlab 
\emph on
pcolor
\emph default
 ) 
\end_layout

\begin_layout Standard
Error bars, sampling errors and multiple lines for comparisons are only
 graphed for 2D plots.
 Error-bars are not plotted when they are below a user-specified size, with
 a default of 
\begin_inset Formula $1\%$
\end_inset

 of the maximum range, to improve graphics quality.
 Higher dimensional graphs do not output error-bar data, but they are still
 recorded in the data files.
\end_layout

\begin_layout Section
Probabilities and parametric plots
\end_layout

\begin_layout Standard
Probability data can be input and plotted like any other data.
 It is typically generated from simulation programs using the 
\begin_inset Formula $binranges$
\end_inset

 data for binning.
 It is plotted like any other graph, with any dimension, except that the
 total dimension is extended by the number of variables or lines in the
 
\emph on
observe
\emph default
 function.
\end_layout

\begin_layout Subsection
Chi-squared plots
\end_layout

\begin_layout Standard
In addition the program can make a
\emph on
 
\emph default

\begin_inset Formula $\chi^{2}$
\end_inset

 plot, which is a plot of the 
\begin_inset Formula $\chi^{2}$
\end_inset

 comparison with a comparison probability density against space and/or time.
 This allows a test of the simulated data against a known target probability
 distribution, provided that the following input data conditions are satisfied:
 
\end_layout

\begin_layout Itemize
The input data dimension exceeds the p.
\emph on
dimensions
\emph default
 parameter, 
\end_layout

\begin_layout Itemize
The switch p.
\emph on
chisqplot 
\emph default
is set to 
\begin_inset Formula $1$
\end_inset

or 2, and 
\end_layout

\begin_layout Itemize
The input data includes comparison function data.
 
\end_layout

\begin_layout Standard
The
\emph on
 
\emph default

\begin_inset Formula $\chi^{2}$
\end_inset

 plots, depending on 
\begin_inset Formula $p.chisqplot$
\end_inset

 are: 
\end_layout

\begin_layout Enumerate
a plot of 
\begin_inset Formula $\chi^{2}$
\end_inset

 and 
\begin_inset Formula $k$
\end_inset

, where 
\begin_inset Formula $k$
\end_inset

 is the number of valid data points, 
\end_layout

\begin_layout Enumerate
a plot of 
\begin_inset Formula $\sqrt{2\chi^{2}}$
\end_inset

 and 
\begin_inset Formula $\sqrt{2k-1}$
\end_inset

, which should have a unit variance.
 
\end_layout

\begin_layout Standard
Here, for one point in space and time, with 
\begin_inset Formula $m$
\end_inset

 bins, 
\begin_inset Formula $N_{j}$
\end_inset

 counts per bin and 
\begin_inset Formula $E_{j}$
\end_inset

 expected counts: 
\begin_inset Formula 
\begin{equation}
\chi^{2}=\sum_{j=1}^{m}\frac{\left(N_{j}-E_{j}\right)^{2}}{E_{j}}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The number 
\begin_inset Formula $k$
\end_inset

 is the number of valid counts, with 
\begin_inset Formula $N_{j},E_{j}>mincount$
\end_inset

.
 This is partly determined from the requirement that the probability count
 data per bin is greater than the 
\begin_inset Formula $p.mincount$
\end_inset

 parameter.
 The default is set to give a number of samples 
\begin_inset Formula $>10$
\end_inset

.
 The program prints a summary that sums over of all the 
\begin_inset Formula $\chi^{2}$
\end_inset

 data.
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $p.scale\{n\}$
\end_inset

 parameter gives the number of counts per bin at unit probability density.
 This is needed to set the scale of the 
\begin_inset Formula $\chi^{2}$
\end_inset

 results, ie, 
\begin_inset Formula $N_{j}=scale\{n\}\times p_{j}$
\end_inset

, where 
\begin_inset Formula $p_{j}$
\end_inset

 is the probability density that is compared and plotted in the simulation
 data.
 Note that a uniform bin size is assumed here, to give a uniform scaling.
\end_layout

\begin_layout Subsection
Comparisons with variances
\end_layout

\begin_layout Standard
It can be useful to compare two probability distributions with different
 variances.
 For one point in space and time, with 
\begin_inset Formula $m$
\end_inset

 bins, 
\begin_inset Formula $p_{j}$
\end_inset

 probability density and 
\begin_inset Formula $e_{j}$
\end_inset

 expected probability density, 
\begin_inset Formula 
\begin{equation}
\chi^{2}=\sum_{j=1}^{m}\frac{\left(p_{j}-e_{j}\right)^{2}}{\sigma_{j}^{2}+\sigma_{e,j}^{2}}.
\end{equation}

\end_inset

In this case, 
\begin_inset Formula $\sigma_{j}^{2}$
\end_inset

 and 
\begin_inset Formula $\sigma_{e,j}^{2}$
\end_inset

 are the sampling errors in the simulation data and comparison data, so
 that built-in error fields in the data are used to work out the 
\begin_inset Formula $\chi^{2}$
\end_inset

 results.
 This option is chosen if 
\begin_inset Formula $p.scale\{n\}=0$
\end_inset

, and the cutoff for the data is then specified so that 
\begin_inset Formula $p_{j},e_{j}>p.cutoffs\{n\}$
\end_inset

.
 This only has a 
\begin_inset Formula $\chi^{2}$
\end_inset

 distribution if points are independent.
\end_layout

\begin_layout Subsection
Maximum likelihood
\end_layout

\begin_layout Standard
It is also possible to plot the 
\begin_inset Formula $G^{2}$
\end_inset

 or maximum likelihood plot of the data, which is an alternative means to
 compare distributions, where 
\begin_inset Formula 
\begin{equation}
G^{2}=2\sum_{j=1}^{m}N_{j}\ln\left(N_{j}/E_{j}\right).
\end{equation}

\end_inset

The expected values 
\begin_inset Formula $E_{j}$
\end_inset

 are automatically scaled so that 
\begin_inset Formula $\sum N_{j}=\sum E_{j},$
\end_inset

with the same minimum count cutoff that is used for the 
\begin_inset Formula $\chi^{2}$
\end_inset

 data.
 The result is similar to the 
\begin_inset Formula $\chi^{2}$
\end_inset

 results.
 It is obtained if p.
\emph on
gsqplot 
\emph default
is set to 
\begin_inset Formula $1$
\end_inset

 or 2 and requires for the input that 
\begin_inset Formula $p.scale\{n\}>0.$
\end_inset

 It is sometimes regarded as a preferred method for comparisons.
\end_layout

\begin_layout Subsection
Parametric plots
\end_layout

\begin_layout Standard
Any input dataset can be converted to a parametric plot, where a second
 data input is plotted along the horizontal axis instead of the time coordinate.
 It is also possible to substitute a second data input for the x-axis data
 if a parametric plot in space is required instead.
 This allows visualization of how one type of data changes as a function
 of a second type of data input.
\end_layout

\begin_layout Standard
The two datasets that are plotted must have the same number of lines, that
 is, the first index range should be the same, in order that multiple lines
 can be compared.
 This is achieved where required using the 
\emph on
p.scatters
\emph default
 input in the simulation code.
 The details of the parametric plot are specified using the input: 
\emph on
 
\begin_inset Formula 
\begin{equation}
p.parametric\{n\}=[n1,p2]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $n$
\end_inset

 is the graph number which is plotted, and must correspond to an input dataset.
 The number 
\begin_inset Formula $n1$
\end_inset

 is the graph number of the observable that is plotted on the horizontal
 axis, ignoring functional transformations.
 The second number is the axis number where the parametric value is substituted,
 which can be the time (axis 1) or the x-coordinate (axis 2), if present.
\end_layout

\begin_layout Standard
In all cases the vertical axis is used to plot the original data.
 The specified horizontal axis is used for the parametric variable.
 Only vertical error-bars are available.
 An example is given in xAMPLES/SDE_1/SHO, which is a noise-driven harmonic
 oscillator, with several lines plotted of 
\begin_inset Formula $x$
\end_inset

 vs 
\emph on
y
\emph default
.
\end_layout

\begin_layout Section
Parameter reference
\begin_inset CommandInset label
LatexCommand label
name "sec:Parameter-reference"

\end_inset


\end_layout

\begin_layout Subsection

\emph on
axes{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{0,0,0,..}
\emph default
 
\end_layout

\begin_layout Standard
Gives the axis points plotted for the 
\begin_inset Formula $n$
\end_inset

-th plotted function, in each dimension.
 Each entry value is a vector range for a particular plot and dimension.
 Thus, 
\emph on
p = 5
\emph default
 gives the fifth point only, and a vector input 
\emph on
p = 1:4:41
\emph default
 plots every fourth point.
 Single points generate graphics projections, allowing the other dimensions
 to be plotted.
 Zero or negative values are shorthand.
 For example, 
\emph on
p = -1
\emph default
 generates a default point at the midpoint, 
\emph on
p = -2
\emph default
 the endpoint, and 
\emph on
p = 0
\emph default
 is the default value that gives the vector for the every axis point.
 For each graph type, i.e.
 
\emph on
n=1,..graphs
\emph default
 the axes can be individually specified in each dimension, 
\emph on
d=1,..dimension
\emph default
s.
 If more than three axes are specified to be vectors, only the first three
 are used, and others are set to default values in the plots.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.axes{4} = {1:2:10,0,0,-1}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
diffplot{n}
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
Differences are plotted as a comparison dashed line on 
\begin_inset Formula $2D$
\end_inset

 plots as a default.
 Otherwise, a separate difference plot is obtained which is unnormalized
 (
\emph on
diffplot = 1)
\emph default
, or normalized
\emph on
 
\emph default
(
\emph on
diffplot = 2) 
\emph default
by the total RMS errors.
 If 
\emph on
diffplot = 3
\emph default
, the comparison data is plotted directly as an additional graph.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.diffplot{3} = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
errors
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
Indicates if the last index in the graphics input data arrays is used for
 error-bars and/or comparisons.
 Should be set to zero if there is no error or comparison data.
 If non-zero, this will give the highest last index used for errors.
 The standard 
\emph on
xsim
\emph default
 output sets 
\emph on

\begin_inset Formula $p.errors=3$
\end_inset

 
\emph default
automatically.
 As a special case, 
\emph on

\begin_inset Formula $p.errors=1$
\end_inset

 
\emph default
is used to indicate that there is comparison data but no error data.
\end_layout

\begin_layout Standard
If 
\emph on

\begin_inset Formula $p.errors>0$
\end_inset

 
\emph default
, the data indexed up to 
\emph on
p.errors
\emph default
 gives the data, then a maximum of two types of error bars.
 Up to three further index values, up to 
\emph on

\begin_inset Formula $p.errors+3$
\end_inset

,
\emph default
 are available to index all comparison data and its error fields.
 The maximum last index value used is 
\begin_inset Formula $6$
\end_inset

.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.errors = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
esample{n}
\end_layout

\begin_layout Description
Default: 
\emph on
1
\emph default
 
\end_layout

\begin_layout Standard
This sets the type and size of sampling errors that are plotted.
 If 
\emph on
esample = 0
\emph default
, no sampling error lines are plotted, just the mean.
 If 
\begin_inset Formula $esample=-n$
\end_inset

, 
\begin_inset Formula $\pm n\sigma$
\end_inset

 sampling errors are included in the error-bars.
 If 
\begin_inset Formula $esample=n$
\end_inset

, separate upper and lower 
\begin_inset Formula $\pm n\sigma$
\end_inset

 sampling error lines are plotted.
 In both cases, the magnitude of esample sets the number of standard deviations
 used.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.esample{3} = -1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
font{n}
\end_layout

\begin_layout Description
Default: 
\emph on
18
\emph default
 
\end_layout

\begin_layout Standard
This sets the default font sizes for the graph labels, indexed by graph.
 This can be changed per graph.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.font{4}=18
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
functions
\end_layout

\begin_layout Description
Default: number of functional transformations 
\end_layout

\begin_layout Standard
This gives the maximum number of output graph functions and is available
 to restrict graphical output.
 The default is the length of the cell array of input data.
 Normally, the default will be used.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.functions = 10
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
glabels{n}
\end_layout

\begin_layout Description
Default: 
\emph on
xlabels
\emph default
 or 
\emph on
klabels
\emph default
 
\end_layout

\begin_layout Standard
Graph-dependent labels for the independent variable labels.
 This is a nested cell array with first dimension of 
\emph on
graphs
\emph default
 and second dimension of 
\emph on
dimension
\emph default
s.
 This is used to replace the global values of 
\emph on
xlabels
\emph default
 or 
\emph on
klabels
\emph default
 if the axis labels change from graph to graph, for example, if the coordinates
 have a functional transform.
 These can be set for an individual coordinate on one graph if needed.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.glabels{4}{2} = 'x^2'
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
graphs
\end_layout

\begin_layout Description
Default: observables to plot 
\end_layout

\begin_layout Standard
This gives the observables to plot.
 The default is a vector of indices from one to the length of the cell array
 of observe functions.
 Normally not initialized, as the default is used.
 Mostly used to reduce graphical output on a long file.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.graphs = 10
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
gtransforms{n}
\end_layout

\begin_layout Description
Default: [0,0,...] 
\end_layout

\begin_layout Standard
This switch specifies the Fourier transformed graphs and axes for graphics
 labeling.
 Automatically equal to 
\emph on
ftransforms
\emph default
 if from an earlier xSIM input, but can be changed.
 If altered for a given graph, all the axis Fourier switches should be reset.
 This is ignored if there is no 
\emph on
dimensions
\emph default
 setting to indicate space dimensions.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.gtransforms{1} = [0,0,1]
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
headers{n}
\end_layout

\begin_layout Description
Default: 
\emph on

\begin_inset Quotes erd
\end_inset


\emph default
 
\end_layout

\begin_layout Standard
This is a string variable giving the graph headers for each type of function
 plotted.
 The default value is an empty string.
 Otherwise, the header string that is input is used.
 Either is combined with the simulation name and a graph number to identify
 the graph.
 This is used to include simulation headers to identify graphs in simulation
 outputs.
 Graph headers may not be needed in a final published result.
 For this, either edit the graph, or use a space to make plot headers blank:
\emph on
 p.headers{n} = ' '
\emph default
, or 
\emph on
p.name = ' '
\emph default
 .
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.headers{n} = 'my_graph_header'
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
images{n}
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
This is the number of 3D, transverse o-x-y images plotted as discrete time
 slices.
 Only valid if the input data dimension is greater than 2.
 If present, the coordinates not plotted are set to their central value
 when plotting the transverse images.
 This input should have a value from zero up to a maximum value of the number
 of plotted points.
 It has a vector length equal to 
\emph on
graphs.

\emph default
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.images{4} = 5
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
imagetype{n}
\end_layout

\begin_layout Description
Default: 
\emph on
1
\emph default
 
\end_layout

\begin_layout Standard
This is the type of transverse o-x-y movie images plotted.
 It has a vector length equal to 
\emph on
graphs
\emph default
.
 
\end_layout

\begin_layout Itemize

\emph on
imagetype =
\emph default
 
\emph on
1 
\emph default
gives a perspective surface plot 
\end_layout

\begin_layout Itemize

\emph on
imagetype =
\emph default
 
\emph on
2
\emph default
, gives a 2D plot with colors 
\end_layout

\begin_layout Itemize

\emph on
imagetype =
\emph default
 3 gives a contour plot with 10 equally spaced contours 
\end_layout

\begin_layout Itemize

\emph on
imagetype =
\emph default
 4 gives a pseudo-color map 
\end_layout

\begin_layout Description
Example: 
\emph on
p.imagetype{n} = 1, 2, 3, 4
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
klabels
\end_layout

\begin_layout Description
Default: 
\emph on
{'
\backslash
omega', 'k_x', 'k_y', 'k_z'}
\begin_inset Quotes eld
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

{'k_1', 'k_2', 'k_3', 'k_4',...}
\emph default
 
\end_layout

\begin_layout Standard
Labels for the graph axis Fourier transform labels, vector length of 
\emph on
dimension
\emph default
s.
 The numerical labeling default is used when the 
\begin_inset Quotes eld
\end_inset


\emph on
p.numberaxis
\emph default

\begin_inset Quotes eld
\end_inset

 option is set.
 Note, these are typeset in Latex mathematics mode! When changing from the
 default values, all the required new labels must be set.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.klabels= {'
\backslash
Omega', 'K_x', 'K_y',}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
legends{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

}
\emph default
 
\end_layout

\begin_layout Standard
Graph-dependent legends, specified as a nested cell array of strings for
 each line.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.legends{n} = {labels(1), ..., labels(lines)}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
limits{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{0,0,0,0; ...}
\emph default
 
\end_layout

\begin_layout Standard
Graph-dependent limits specified as a cell array with dimension 
\emph on
graphs
\emph default
.
 Each entry is a cell array of graph limits indexed by the dimension, starting
 from 
\begin_inset Formula $d=1$
\end_inset

 for the time dimension.
 The limits are vectors, indexed as 1,2 for the lower and upper plot limits.
 This is useful if the limits required change from graph to graph.
 If an automatic limit is required for either the upper or lower limit,
 it is set to 
\emph on
inf.
 
\end_layout

\begin_layout Standard
An invalid, scalar or empty limit vector, like [0,0] or 
\begin_inset Formula $0$
\end_inset

 or [] is ignored, and an automatic graph limit is used.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.limits{n} = {[t1,t2],[x1,x2],[y1,y2] ...,}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
linestyle{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{'-k','-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

-k',':k','-.k','-ok','-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

-ok',':ok','-.ok','-+k','-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

-+k'}
\emph default
 
\end_layout

\begin_layout Standard
Line types for each line in every two-dimensional graph plotted.
 If a given line on a two-dimensional line is to be removed completely,
 set the relevant line-style to zero.
 For example, to remove the first line from graph 3, set p.linestyle{3} ={0}.
 This is useful when generating and changing graphics output from a saved
 data file.
 The linestyle uses Matlab terminology.
 It allows setting the line pattern, marker symbols and color for every
 line.
 The default lines are black (
\emph on
'k'
\emph default
), but any other color can be used instead.
\end_layout

\begin_layout Standard
The specifiers must be chosen from the list below, eg, '-ok', although the
 marker can be omitted if not required.
 
\end_layout

\begin_layout Itemize
Line patterns: '-' (solid), '–' (dashed), ':' (dotted) ,'-.' (dash-dot) 
\end_layout

\begin_layout Itemize
Marker symbols: '+','o','*','.','x','s','d','^','v','
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ','
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 ','p' 
\end_layout

\begin_layout Itemize
Colors: 'r','g','b','c','m','y','k','w' 
\end_layout

\begin_layout Description
Example: 
\emph on
p.linestyle{4} = {'-k','-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

-ok',':g','-.b',}
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
linewidth{n}
\end_layout

\begin_layout Description
Default: 0.5 
\end_layout

\begin_layout Standard
Line width for plotted lines in two-dimensional graphs.
 For example, to make the lines wider in graph 3, set p.linewidth{3} =1.
 This is useful for changing graphics output appearance if the default lines
 are too thin.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.linewidth{n} = 1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
minbar{n}
\end_layout

\begin_layout Description
Default: 
\emph on
{0.01, ...}
\emph default
 
\end_layout

\begin_layout Standard
This is the minimum relative error-bar that is plotted.
 Set to a large value to suppress unwanted error-bars, although its best
 not to ignore the error-bar information! This can be changed per graph.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.minbar{n} = 0
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
name
\end_layout

\begin_layout Description
Default: 
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard
Name used to label simulation graphs, usually corresponding to the equation
 or problem solved.
 This can be removed from individual graphs by using 
\emph on
headers{n}
\emph default
 equal to a single blank space.
 The default is a null string.
 To remove all headers globally, set 
\emph on
name
\emph default
 equal to a single blank space: 
\emph on
name = ' '.

\emph default
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.name = 'Wiener process simulation'
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
olabels{n}
\end_layout

\begin_layout Description
Default: 
\emph on
'a'
\emph default
 
\end_layout

\begin_layout Standard
Cell array of labels for the graph axis observables and functions.
 These are text labels that are used on the graph axes.
 The default value is 
\emph on
'a_1
\emph default
' if the default observable is used, otherwise it is blank.
 This is overwritten by any subsequent label input when the graphics program
 is run: 
\end_layout

\begin_layout Description
Example: 
\emph on
p.olabels{4} = 'v'
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
parametric{n}
\end_layout

\begin_layout Description
Default: 
\emph on
[0,0]
\emph default
 
\end_layout

\begin_layout Standard
Cell array that defines parametric plots, for each graph number.
 The first number is the graph number of the alternative observable plotted
 on the horizontal axis.
 The second number is the axis number where the parametric value is substituted,
 which can be the time (axis 1) or the x-coordinate (axis 2), if present.
\end_layout

\begin_layout Standard
If both are zero, the plot against an independent space-time coordinate
 is calculated as usual.
 If nonzero, a parametric plot is made for two-dimensional plots.
 In all cases the vertical axis is used to plot the original data.
 The specified horizontal axis is used for the parametric variable.
 Only vertical error-bars are available.
 Can be usefully combined with 
\emph on
scatters{n}
\emph default
 to plot individual trajectories, but the number of scatters should be the
 same in each of the two graphs that are parametrically plotted against
 each other.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.parametric{n} = [p1,p2] 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 = 0
\emph default
 
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:pdimension"

\end_inset


\emph on
pdimension{n}
\end_layout

\begin_layout Description
Default: 
\emph on
3
\emph default
 
\end_layout

\begin_layout Standard
This is the maximum plotted space-time dimension for each plotted quantity.
 The purpose is eliminate unwanted graphs.
 For example, it is useful to reduce the maximum dimension when averaging
 in space.
 Higher dimensional graphs are not needed, as the data is duplicated.
 Averaging can be useful for checking conservation laws, or for averaging
 over homogeneous data to reduce sampling errors.
 All graphs are suppressed if it is set to zero.
 Any three dimensions can be chosen to be plotted, using the 
\emph on
axes
\emph default
 parameter to suppress the unwanted data points in other dimensions.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.pdimension{4} = 2
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
saveeps
\end_layout

\begin_layout Description
Default: 0 
\end_layout

\begin_layout Standard
If set to 
\begin_inset Formula $1$
\end_inset

, all plots are saved to the current folder as .eps files, numbered consecutively.
 It is best to use the 
\emph on
close all
\emph default
 command first to remove unwanted displayed xFIGURES, before running 
\emph on
xgraph
\emph default
 with this option.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.saveeps =1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
savefig
\end_layout

\begin_layout Description
Default: 0 
\end_layout

\begin_layout Standard
If set to 
\begin_inset Formula $1$
\end_inset

, all plots are saved to the current folder as .fig files, numbered consecutively.
 It is best to use the 
\emph on
close all
\emph default
 command first to remove unwanted displayed xFIGURES, before running 
\emph on
xgraph
\emph default
 with this option.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.savefig =1
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
transverse{n}
\end_layout

\begin_layout Description
Default: 
\emph on
0
\emph default
 
\end_layout

\begin_layout Standard
This is the number of 2D transverse images plotted as discrete time slices.
 Only valid if 
\emph on
dimensions
\emph default
 is greater than 2.
 If present, the 
\begin_inset Formula $y,z$
\end_inset

-coordinates are set to their central values when plotting transverse images.
 Each element can be from 0 up to the number of plotted time-points.
 The cell array has a vector length equal to 
\emph on
graphs
\emph default
.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.transverse{n}= 6
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
verbose
\end_layout

\begin_layout Description
Default: 0 
\end_layout

\begin_layout Standard
Print flag for output information while running xGRAPH.
 Print options are: 
\end_layout

\begin_layout Itemize
Minimal if 
\emph on
verbose = -1
\emph default
: Prints just the start-up time and hard error messages 
\end_layout

\begin_layout Itemize
Brief if 
\emph on
verbose = 0
\emph default
: Additionally prints the final, total chi-squared errors where present
 
\end_layout

\begin_layout Itemize
Informative if 
\emph on
verbose = 1
\emph default
: Also prints the graph progress indicators 
\end_layout

\begin_layout Itemize
Full if 
\emph on
verbose = 2
\emph default
: Prints everything including the internal parameter structure data.
 
\end_layout

\begin_layout Standard
In summary, if 
\emph on
verbose = 0
\emph default
, most output is suppressed except the final data, 
\emph on
verbose = 1
\emph default
 displays a progress report, and 
\emph on
verbose = 2
\emph default
 additionally generates a readable summary of the graphics parameter input.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.verbose = 0
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
xlabels
\end_layout

\begin_layout Description
Default: 
\emph on
{'t', 'x', 'y', 'z'}
\emph default
 or {
\emph on
'x_1', 'x_2', 'x_3', 'x_4'
\emph default
,...} 
\end_layout

\begin_layout Standard
Global labels for the independent variable labels, vector length equal to
 
\emph on
dimension
\emph default
s.
 The numerical labeling default is used when the 
\emph on
numberaxis
\emph default
 option is true.
 These are typeset in Latex mathematics mode.
 When changing from the default values, all the required new labels must
 be set.
 
\end_layout

\begin_layout Description
Example: 
\emph on
p.xlabels = {'tau'}
\emph default
 
\end_layout

\begin_layout Section
User function reference
\end_layout

\begin_layout Standard
It is possible to simply run 
\emph on
xgraph
\emph default
 as is, without much intervention.
 However, there are customization options, including user defined functions.
 These are as follows:
\end_layout

\begin_layout Subsection

\emph on
gfunction{n} (d,p)
\end_layout

\begin_layout Standard
This is a cell array of graphics function handles.
 Use when a graph is needed that is a functional transformation of the observed
 averages.
 The default value generates the 
\emph on
n-th 
\emph default
graph 
\emph on
data
\emph default
 array directly from the 
\emph on
n-th 
\emph default
input 
\emph on
data
\emph default
.
 The input is the data cell array for all the graphs in the current sequence
 number with their graph parameters 
\emph on
x
\emph default
, and the output is the 
\emph on
n-th 
\emph default
data array that is plotted.
\end_layout

\begin_layout Standard
An arbitrary number of functions of these observables can be plotted, including
 vector observables.
 The input to graphics functions is the observed data averages or functions
 of averages in a given sequence, each stored in a cell array 
\begin_inset Formula $d\{n\}(\ell,\mathbf{j},c)$
\end_inset

.
 If there are more graphics functions than input data cells, this generate
 additional data for plotting.
\end_layout

\begin_layout Subsection

\emph on
xfunctions{n} {nd} (ax,p)
\end_layout

\begin_layout Standard
This is a nested cell array of axis transformations.
 Use when a graph is needed with an axis that is a function of the original
 axes.
 The input is the original axis coordinates, and the output is the new coordinat
e set.
 The default value generates the input axes.
 Called as 
\emph on
xfunctions{n}{nd}(ax,p)
\emph default
 for the 
\emph on
n
\emph default
-th graph and axis direction 
\emph on
dir
\emph default
, where 
\emph on
ax
\emph default
 is a vector of coordinates for that axis.There is one graphics function
 for each separate graph dimension or axis.
 The default value is the coordinate vector 
\begin_inset Formula $xk\{nd\}$
\end_inset

 stored in the input parameter structure p, or else the relevant index if
 
\emph on
xk{nd}
\emph default
 is omitted.
\end_layout

\begin_layout Section
xGRAPH structure
\end_layout

\begin_layout Standard
The graphics function, 
\begin_inset Formula $xgraph$
\end_inset

, plots the simulation data.
 The general structure is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\mathbf{xgraph} & \rightarrow\mathbf{xgpreferences}\,\,(checks\,inputs)\\
 & \rightarrow\mathbf{xmultigraph}\leftrightarrow\mathbf{xreduce\leftrightarrow\mathbf{xcompress}}\,\,(structures\,data\,arrays)\\
 & \rightarrow\mathbf{ximages}\rightarrow\mathbf{xtransverse}\rightarrow\mathbf{xplot3}\rightarrow\mathbf{xplot2}\,\,(graphs\,all\,data)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Most graphics functions simply work, but two important functions are listed
 here for reference.
\end_layout

\begin_layout Subsection

\emph on
xgraph(data,input)
\end_layout

\begin_layout Standard
The
\emph on
 xgraph
\emph default
 function graphs multidimensional data files.
 
\end_layout

\begin_layout Itemize
Input: graphics data cells 
\emph on
data
\emph default
, input parameter cells 
\emph on
input
\emph default
.
 
\end_layout

\begin_layout Itemize
Output: graphs, displayed and/or stored as 
\emph on
eps
\emph default
 or 
\emph on
fig
\emph default
 files.
 
\end_layout

\begin_layout Itemize
If no numeric 
\emph on
data
\emph default
 present, reads data from a file named 
\emph on
data
\emph default
.
 
\end_layout

\begin_layout Itemize
If 
\emph on
data
\emph default
 is present but without any 
\emph on
input
\emph default
 parameters it plots using default parameters.
 
\end_layout

\begin_layout Itemize
First data dimension is the line index, last dimension are the error-bars
 and comparisons 
\end_layout

\begin_layout Itemize
Needs: x
\emph on
read, xmakecell, xgpreferences, xmultiplot
\emph default
 
\end_layout

\begin_layout Subsection

\emph on
input = xgpreferences (input,oldinput)
\end_layout

\begin_layout Standard
The 
\emph on
xgpreferences
\emph default
 function sets default values for graphics inputs.
 
\end_layout

\begin_layout Itemize
Input: 
\emph on
input
\emph default
 cell array and optionally previous inputs from a datafile, 
\emph on
oldinput
\emph default
.
 
\end_layout

\begin_layout Itemize
Note that each cell array is a sequence of graphics parameter structures
 
\end_layout

\begin_layout Itemize
Output: the updated plus default graphics parameters 
\end_layout

\begin_layout Itemize
Called by: 
\emph on
xgraph
\emph default
 
\end_layout

\begin_layout Itemize
Needs: 
\emph on
xprefer
\emph default
, 
\emph on
xcprefer
\emph default
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Examples and batch testing
\begin_inset CommandInset label
LatexCommand label
name "sec:Examples"

\end_inset


\end_layout

\begin_layout Standard
A variety of examples are given in the xAMPLES folder distributed with xSPDE.
 These can all be run using 
\emph on
Batchtest.m
\emph default
, which has a typical runtime of 
\begin_inset Formula $50-100s$
\end_inset

, and runs 
\begin_inset Formula $35$
\end_inset

 different case studies.
 This shows your distribution is intact.
 All the graphs produced are deleted.
 It lists the different examples available, some of which are given below.
\end_layout

\begin_layout Standard
The batch testing code will run each different example sequentially.
 It prints the RMS relative errors for the step-size, sampling and difference
 error, as well as the total RMS error combining all three, the chi-square
 error normalised by the number of points, and the timing.
 The geometric mean of the 
\begin_inset Formula $35$
\end_inset

 RMS total errors is computed as a benchmark.
\end_layout

\begin_layout Standard
As Matlab random noise is reproducible with a fixed seed, this geometric
 mean error is fixed.
 The total is printed to more than six decimals for verification, and an
 error is indicated if it varies by a factor of more than 
\begin_inset Formula $\pm10^{-3}$
\end_inset

.
 Due to different random noise algorithms used in some Octave versions,
 the Octave error may vary by up to 
\begin_inset Formula $\pm20\%$
\end_inset

.
\end_layout

\begin_layout Section
SDE examples
\end_layout

\begin_layout Subsection
Kubo
\end_layout

\begin_layout Standard
This solves a multiplicative SDE with initial condition 
\begin_inset Formula $a\left(0\right)=1$
\end_inset

 and:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial a}{\partial t}=iaw(t)\,.\label{eq:SDE-3}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The function uses the RK4 algorithm together with both vector and series
 ensembles, then stores the computed averages with a comparison of the variance
 and an exact solution, 
\begin_inset Formula 
\begin{equation}
\left\langle a^{n}\right\rangle =e^{-tn^{2}/2}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Kubo()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Kubo oscillator';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [1000,8];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.method = @RK4;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w,p) 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) 1i*w.*a(1,:) ;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.file = 'Kubo.mat';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) a.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{2} = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset

 a^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 '};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare = {@(p) exp(-p.t/2),@(p) exp(-2*p.t)};
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xsim(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p2.name = 'Kubo oscillator edited title';
\end_layout

\begin_layout Plain Layout

\family typewriter
xgraph(p.file,p2);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
The algorithm is changed from the default to RK4.
 
\end_layout

\begin_layout Itemize
The data is stored to 'Kubo.mat'.
 
\end_layout

\begin_layout Itemize
This is re-read and edited using a second parameter structure, p2.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Kubo-example1.pdf
	width 75text%

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset Graphics
	filename Kubo-example2.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Example: Kubo oscillator.
 The graph shows the sampling error-bars as two parallel lines.
 The discretization error-bars are less than the minimum, and are not shown.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Loss/Gain with noise
\end_layout

\begin_layout Standard
This solves an SDE with a complex Gaussian distributed initial condition
 having 
\begin_inset Formula $\left\langle \left|a\left(0\right)\right|^{2}\right\rangle =1$
\end_inset

 and a sequence of SDE equations, such that 
\begin_inset Formula 
\begin{equation}
\frac{\partial a}{\partial t}=\begin{cases}
-a+w_{1}(t)+iw_{2}(t) & 0<t<4\\
a+w_{1}(t)+iw_{2}(t) & 4<t<8
\end{cases}\,.\label{eq:SDE-3-1-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The computed variance is compared with an exact solution, 
\begin_inset Formula 
\begin{equation}
\left\langle a^{2}\right\rangle =\begin{cases}
1 & 0<t<4\\
2e^{2\left(t-4\right)t}-1 & 4<t<8
\end{cases}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Gain()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Loss with noise';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = 4;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = [2,0];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [10000,1,10];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w,~) (w(1,:)+1i*w(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) -a + w(1,:)+1i*w(2,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = {@(a,~) a.*conj(a)};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare = {@(p) 1};
\end_layout

\begin_layout Plain Layout

\family typewriter
p2 = p;
\end_layout

\begin_layout Plain Layout

\family typewriter
p2.steps = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p2.name = 'Gain with noise';
\end_layout

\begin_layout Plain Layout

\family typewriter
p2.deriv = @(a,w,~) a + w(1,:)+1i*w(2,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
p2.compare = {@(p) 2*exp(2*(p.t-4))-1};
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde({p,p2});
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
Low and high level parallel ensembles optimize use of multi-core vector
 hardware.
 
\end_layout

\begin_layout Itemize
Two distinct simulations are run in series, with a change in the equation.
 
\end_layout

\begin_layout Itemize
The simulation name is changed in sequence 2, to distinguish the graphical
 outputs 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gain-example1.pdf
	width 75text%

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset Graphics
	filename Gain-example2.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: amplitude squared with loss balanced by noise.
 Bottom figure, amplitude squared with gain.
 Graphs show excellent agreement with theory up to the sampling errors of
 less than 
\begin_inset Formula $\pm0.005$
\end_inset

 in the initial phase, shown by the parallel lines, with step errors of
 order 
\begin_inset Formula $\pm0.001$
\end_inset

 indicated by error-bars.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Spectral examples
\end_layout

\begin_layout Subsection
Equilibrium
\end_layout

\begin_layout Standard
This solves an SDE with a complex Gaussian initial condition having 
\begin_inset Formula $\left\langle \left|a\left(0\right)\right|^{2}\right\rangle =1$
\end_inset

 and:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial a}{\partial t}=-a+w_{1}(t)+iw_{2}(t)\,.\label{eq:SDE-3-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The equation is such that the initial distribution is also the equilibrium
 probability distribution.
 The computed ordinary and spectral variances are compared with exact solutions
 and graphed, where 
\begin_inset Formula 
\begin{align}
\lim_{t\rightarrow\infty}\left\langle \left|a\left(t\right)\right|^{2}\right\rangle  & =1.\nonumber \\
\left\langle \left|a\left(\omega\right)\right|^{2}\right\rangle  & =\frac{T}{\pi\left(1+\omega^{2}\right)}.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Equilibrium()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Equilibrium spectrum';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 101;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = 100;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.seed = 241;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = [2,0];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [100,5];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w,~) (w(1,:)+1i*w(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,~) -a + w(1,:)+1i*w(2,:);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,~) a.*conj(a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,~) a.*conj(a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.transforms = {0,1};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a(t)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2','
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a(
\backslash
omega)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare = {@(p) 1, @(p)p.ranges(1)./(pi*(1+p.w.^2))};
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
A fixed random seed is input using the 
\emph on
p.seed
\emph default
 parameter.
 
\end_layout

\begin_layout Itemize
The 
\emph on
p.transforms
\emph default
 cell array gives a Fourier transform for 
\emph on
p.observe{2}
\emph default
 only.
 
\end_layout

\begin_layout Itemize
A small number of ensembles and time-steps is used to improve error visibility.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Equilibrium-example1.pdf
	width 75text%

\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset Graphics
	filename Equilibrium-example2.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: Mean amplitude squared, showing invariant behavior with time,
 apart from sampling errors.
 Bottom figure: Mean spectrum as a function of frequency.
 The dashed lines are exact results, solid lines are upper and lower sampling
 error bounds 
\begin_inset Formula $(\pm\sigma)$
\end_inset

, from sampling the stochastic equations, the error-bars are errors due
 to the step-size.
 Error bars are less than the minimum size for graphics display in the bottom
 figure.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Quantum
\end_layout

\begin_layout Standard
This solves an SDE for a quantum harmonic oscillator in the (truncated)
 Wigner phase-space calculus.
 It is initialized as a vacuum state, corresponding to a complex Gaussian
 initial condition having 
\begin_inset Formula $\left\langle \left|a\left(0\right)\right|^{2}\right\rangle =1$
\end_inset

.
 It is subject to vacuum noise, here realized by the auxiliary field 
\begin_inset Formula $a_{in}$
\end_inset

.
 An output field is given through the input-output relations and is realized
 by the auxiliary field 
\begin_inset Formula $a_{out}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\frac{\partial a}{\partial t} & =-a+\sqrt{2}a_{in}.\nonumber \\
a_{in} & =\frac{1}{2}\left(w_{1}(t)+iw_{2}(t)\,\right)\nonumber \\
a_{out} & =\sqrt{2}a-a_{in}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The computed spectral variances are compared with exact solutions and graphed,
 where: 
\begin_inset Formula 
\begin{align}
\frac{2\pi}{T}\left\langle \left|a\left(\omega\right)\right|^{2}\right\rangle  & =\frac{1}{\left(1+\omega^{2}\right)}.\nonumber \\
\left\langle \left|a_{in}\left(\omega\right)\right|^{2}\right\rangle  & =\frac{1}{2}\nonumber \\
\left\langle \left|a_{out}\left(\omega\right)\right|^{2}\right\rangle  & =\frac{1}{2}.
\end{align}

\end_inset


\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
Demonstrates how to include defined fields 
\end_layout

\begin_layout Itemize
There are 
\begin_inset Formula $4$
\end_inset

 steps per point, to give better accuracy due to finite steps 
\end_layout

\begin_layout Itemize
The observe functions are all transformed, and include defined fields.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function e = Quantum()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Quantum harmonic oscillator spectrum';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 160;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.steps = 4;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = 120;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.auxfields = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [400,1,12];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w,~) (w(1,:)+1i*w(2,:))/(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.a1 = @(w) (w(1,:)+1i*w(2,:))/2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,~) -a(1,:)+sqrt(2)*p.a1(w);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.define = @(a,w,p) [p.a1(w);sqrt(2)*a(1,:)-p.a1(w)];
\end_layout

\begin_layout Plain Layout

\family typewriter
T = @(p) p.ranges(1);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) (2.*pi/T(p))*a(1,:).*conj(a(1,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) (2.*pi/T(p))*a(2,:).*conj(a(2,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{3} = @(a,p) (2.*pi/T(p))*a(3,:).*conj(a(3,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.transforms = {1,1,1};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{1} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a(
\backslash
omega)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{2} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a_{in}(
\backslash
omega)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{3} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a_{out}(
\backslash
omega)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{1} = @(p) 1./(1+p.w.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{2} = @(p) 0.5;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{3} = @(p) 0.5;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Quantum-example1.pdf
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Quantum-example2.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: Spectral density of the quantum state.
 Bottom figure: Spectral density of the output field.
 The solid lines indicate upper and lower sampling error bounds 
\begin_inset Formula $(\pm\sigma)$
\end_inset

, from sampling the stochastic equations.
 The dashed lines are exact results, the error-bars indicate step-size errors.
 Error bars are less than the minimum size for display in the top figure.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Probability examples
\end_layout

\begin_layout Subsection
Probability density, Wiener process
\end_layout

\begin_layout Standard
Solves an SDE with an initial condition 
\begin_inset Formula $\left\langle a\left(0\right)\right\rangle ^{2}=\frac{1}{4}$
\end_inset

 and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dot{a}=w(t)\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Records the probability density and compares this with an exact solution:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
P\left(x,t\right) & = & \frac{1}{\sqrt{2\pi\sigma^{2}\left(t\right)}}e^{-\frac{x^{2}}{2\sigma^{2}\left(t\right)}}\nonumber \\
\sigma^{2}\left(t\right) & = & \frac{1}{4}+t\,.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
The script outputs a 3D plot of 
\begin_inset Formula $P\left(x,t\right)$
\end_inset

, together with the time evolution of 
\begin_inset Formula $P\left(0,t\right)$
\end_inset

 
\end_layout

\begin_layout Itemize
There are 5 
\begin_inset Quotes eld
\end_inset

transverse
\begin_inset Quotes erd
\end_inset

 plots of transient probabilities at intermediate times.
 
\end_layout

\begin_layout Itemize
Legends are plotted to identify the simulated and the analytic comparison
 lines.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function e = Wienerprob()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Wiener SDE distribution';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 10;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [10000,10];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) v/2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.sig = @(p) .25 + p.r{1};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,w,p) w;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) a;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{1} = @gaussprob;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.transverse{1} = 5;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{1} = 'P(x)';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.binranges{1} = {-5:0.25:5};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.legends{1} = {'Sampled P(x,
\backslash
tau) 
\backslash
pm 
\backslash
sigma',...
\end_layout

\begin_layout Plain Layout

\family typewriter
'Exact P(x,
\backslash
tau)'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.xlabels = {'
\backslash
tau','x'};
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
%
\end_layout

\begin_layout Plain Layout

\family typewriter
function p = gaussprob(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
p = exp(-(p.r{2}.^2)./(2*p.sig(p)))./sqrt(2*pi*p.sig(p));
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Wienerprob1.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Wienerprob3.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: 3D plot of the computed probability density of the simulated
 Wiener process as a function of time (
\begin_inset Formula $\tau$
\end_inset

) and 
\begin_inset Quotes eld
\end_inset

position
\begin_inset Quotes erd
\end_inset

 (
\begin_inset Formula $x$
\end_inset

).
 Bottom figure: Time evolution of the computed probability density for 
\begin_inset Formula $x=0$
\end_inset

.
 The solid lines indicate upper and lower sampling error bounds, while the
 dashed line indicates theoretical predictions.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Wienerprob2.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Wienerprob4.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top and bottom figure: Computed probability densities of the simulated Wiener
 process at 
\begin_inset Formula $\tau=5.556$
\end_inset

 and 
\begin_inset Formula $\tau=10$
\end_inset

, respectively.
 In total, 5 of these transverse plots are generated, however, only 2 are
 presented here.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
SPDE examples
\end_layout

\begin_layout Subsection
Nonlinear Schrodinger equation with Neumann boundary conditions
\begin_inset CommandInset label
LatexCommand label
name "subsec:Nonlinear-Schrodinger-equation"

\end_inset


\end_layout

\begin_layout Standard
This solves a (1+1)-dimensional PSDE with an initial condition of 
\begin_inset Formula $a\left(t=0,x\right)=sech\left(x\right)$
\end_inset

 and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial a}{\partial t} & = & i\cdot\left(a\cdot\left(\left|a\right|^{2}-\frac{1}{2}\right)+\frac{1}{2}\frac{\partial^{2}a}{\partial x^{2}}\right)\,.
\end{eqnarray}

\end_inset

The solution is subject to Neumann boundary conditions with boundary values
 at zero
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial a}{\partial x}\left(t,\pm x_{m}\right) & = & 0\,.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The equation is a deterministic nonlinear Schrodinger equation, which applies
 to nonlinear optics, Bose-Einstein condensates and plasma physics.
 The observables are 
\begin_inset Formula $o_{1}\equiv\left|a\right|^{2}$
\end_inset

 and 
\begin_inset Formula $o_{2}\equiv\int_{-x_{m}}^{x_{m}}\left|\frac{\partial}{\partial x}a\right|^{2}dx$
\end_inset

.
\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
The boundary conditions are specified with 
\emph on
p.boundaries{2}, 
\emph default
which is the x-dimension.
 
\end_layout

\begin_layout Itemize
The integration differential 
\begin_inset Formula $dx$
\end_inset

 does not have to be entered, as this is the default.
\end_layout

\begin_layout Itemize
Three transverse graphs were specified, but they aren't reproduced here.
\end_layout

\begin_layout Itemize
As there is only one field, which is the default, this does not need to
 be given.
\end_layout

\begin_layout Itemize
Since there is no noise, the default integration method was RK4.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = SolitonDerivN()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = [101,101];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = [10,15];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) sech(p.x);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) a.*conj(a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) Int(abs(D1(a,2,p)).^2,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2','
\backslash
int 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 da/dx
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2 dx'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'NLS soliton:spectral method + Neumann';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.boundaries{2} = [-1,-1];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.transverse = {3};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a,~,p) 1i*a.*(conj(a).*a);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) 0.5*1i*(p.Dx.^2-1);
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename NLS_Neumann.pdf
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename NLS_Neumann_deriv.pdf
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: Evolution of the field modulus squared of an NLS soliton with
 Neumann boundaries.
 
\begin_inset Newline newline
\end_inset

Bottom figure: Evolution of the integrated modulus squared of the gradient
 for an NLS soliton with Neumann boundaries, showing how the reflected fields
 at the boundaries change the result even though this is not readily visible
 above.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Planar noise growth
\end_layout

\begin_layout Standard
This solves a (1+2)-dimensional PSDE describing the growth of noise in a
 planar vector field with a diffraction term giving rise to noise dispersion.
 There are 
\begin_inset Formula $240$
\end_inset

 trajectories in the total ensemble.
 The equation is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial\mathbf{a}}{\partial t} & = & \frac{i}{2}\left(\frac{\partial^{2}}{\partial x^{2}}+\frac{\partial^{2}}{\partial x^{2}}\right)\mathbf{a}+\mathbf{\eta}\left(t,x\right)\,.
\end{eqnarray}

\end_inset

The initial conditions are that 
\begin_inset Formula $\mathbf{a}=\left(\mathbf{v}_{x}+i\mathbf{v}_{y}\right)/\sqrt{2}$
\end_inset

, where: 
\begin_inset Formula 
\begin{equation}
\left\langle v_{i}\left(\mathbf{x}\right)v_{j}\left(\mathbf{x}'\right)\right\rangle =\delta\left(\mathbf{x}-\mathbf{x}'\right)\delta_{ij}
\end{equation}

\end_inset

the noise correlations are that 
\begin_inset Formula $\mathbf{\eta}=\left(\mathbf{w}_{x}+i\mathbf{w}_{y}\right)/\sqrt{2}$
\end_inset

, where:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\left\langle w_{i}\left(\mathbf{r}\right)w_{j}\left(\mathbf{r}'\right)\right\rangle  & = & \delta\left(t-t'\right)\delta_{ij}\left(\mathbf{x}-\mathbf{x}'\right)
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The solution has periodic boundary conditions.
 The noise correlations for the second field are specified in momentum space.
 As there are no filters specified, the noise terms are delta-correlated
 in both momentum (
\begin_inset Formula $\mathbf{k}$
\end_inset

) and in space (
\begin_inset Formula $x$
\end_inset

).
 The exact results for comparison for the correlations within each field
 are similar in position and momentum space: 
\begin_inset Formula 
\begin{align}
\left\langle \left|a_{i}\left(t,\mathbf{x}\right)\right|^{2}\right\rangle  & =\left(1+t\right)/\Delta A_{x}.\nonumber \\
\left\langle \left|a_{i}\left(t,\mathbf{k}\right)\right|^{2}\right\rangle  & =\left(1+t\right)/\Delta A_{k}.
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Here, 
\begin_inset Formula $\Delta A_{x,k}$
\end_inset

 is the area of a lattice cell in space or momentum space respectively.
 This is 
\begin_inset Formula $\Delta A_{x}=1/49$
\end_inset

 for the parameters used here.
 On integration, the correlation is proportional to 
\begin_inset Formula $N_{s}$
\end_inset

, the number of points in the spatial lattice, which is 
\begin_inset Formula $35^{2}=1225$
\end_inset

 for the spatial lattice used here:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\int\left\langle \left|a_{i}\left(t,\mathbf{x}\right)\right|^{2}\right\rangle d\mathbf{x}=\int\left\langle \left|a_{i}\left(t,\mathbf{k}\right)\right|^{2}\right\rangle d\mathbf{k} & =N_{s}\left(1+t\right).
\end{align}

\end_inset


\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
All three types of ensemble are used 
\end_layout

\begin_layout Itemize
The much lower sampling error after integration is evident in the graphs
 
\end_layout

\begin_layout Itemize
Spatially resolved graphs show larger sampling errors 
\end_layout

\begin_layout Itemize
The integration method is mid-point, as it is stochastic.
\end_layout

\begin_layout Itemize
Two k-space noises are specified, but they aren't filtered.
\end_layout

\begin_layout Itemize
Under these conditions, x-space and k-space noise are identical.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Planar()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Planar noise growth';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = [1,5,5];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 10;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.noises = [2,2];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [10,2,12];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @Initial;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @D_planar;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @Linear;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) Int(a(1,:).*conj(a(1,:)),p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) Int(a(2,:).*conj(a(2,:)),p.dk,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{3} = @(a,p) real(Ave(a(1,:).*conj(a(2,:)),p));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{4} = @(a,p) a(2,:).*conj(a(2,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.transforms = {[0,0,0],[0,1,1],[0,1,1]};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{1} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\backslash
int
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a_1(x)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2 d^2x
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{2} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\backslash
int
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a_2(k)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2 d^2k
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{3} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 a_1(k)a^*_2(k)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels{4} = '
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textless
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a_2(x)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textgreater
\end_layout

\end_inset

 ';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{1} = @(p) (1+p.t)*p.nspace;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{2} = @(p) (1+p.t)*p.nspace;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{3} = @(p) 0.0;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function a0 = Initial(v,~)
\end_layout

\begin_layout Plain Layout

\family typewriter
a0(1,:) = (v(1,:)+1i*v(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
a0(2,:) = (v(3,:)+1i*v(4,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function da = D_planar(~,w,~) %%Derivatives
\end_layout

\begin_layout Plain Layout

\family typewriter
da(1,:) = (w(1,:)+1i*w(2,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
da(2,:) = (w(3,:)+1i*w(4,:))/sqrt(2);
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function L = Linear(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
lap = p.Dx.^2+p.Dy.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
L(1,:) = 1i*0.5*lap(:);
\end_layout

\begin_layout Plain Layout

\family typewriter
L(2,:) = 1i*0.5*lap(:);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Planar1.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar2.png
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top and bottom figure: Time evolution of the integrated modulus square of
 the first and second field, respectively.
 The solid lines indicate upper and lower bounds of the stochastic error,
 which the dashed lines indicate theoretical predictions.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Planar4image.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar4.png
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: 3D plot of the modulus square of 
\begin_inset Formula $a_{2}$
\end_inset

 at 
\begin_inset Formula $t=1$
\end_inset

 as a function of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

.
 Bottom figure: 3D plot of the modulus square of 
\begin_inset Formula $a_{2}$
\end_inset

 for 
\begin_inset Formula $y=0$
\end_inset

 as a function of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Gross-Pitaevskii equation with vortex formation
\end_layout

\begin_layout Standard
This solves a (1+2)-dimensional PDE called the Gross-Pitaevskii equation.
 In addition to the standard GPE terms, it includes the vortex forming term
 
\begin_inset Formula $\left(\mathbf{x}\times\nabla\right)a$
\end_inset

.
 There is just one ensemble member, to demonstrate how a single trajectory
 can be imaged.
 The equation is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial a}{\partial t} & = & \left(\frac{1}{2}\nabla^{2}a-\left\Vert \left(\left(V\left(\mathbf{x}\right)+200\left|a\right|^{2}\right)+0.6i\cdot\left(\mathbf{x}\times\nabla\right)\right)a\right\Vert \right)\nonumber \\
V\left(\mathbf{x}\right) & = & 0.35\left(x^{2}+y^{2}\right)\nonumber \\
\left\Vert b\left(\mathbf{x}\right)\right\Vert  & = & \frac{b\left(\mathbf{x}\right)}{\int\left|b\right|^{2}d\mathbf{x}}\,.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Here,
\begin_inset Formula $\left\Vert \cdot\right\Vert $
\end_inset

 is the normalized derivative and 
\begin_inset Formula $\times$
\end_inset

 indicates the two-dimensional cross-product.
 The system is initialized as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
a\left(t=0,\mathbf{x}\right) & = & 0.1\cdot\exp\left(-V\left(\mathbf{x}\right)\right)\,.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
This is a deterministic partial differential equation case 
\end_layout

\begin_layout Itemize
The 
\begin_inset Formula $15$
\end_inset

 intermediate
\emph on
 steps 
\emph default
used are necessary to reduce integration errors 
\end_layout

\begin_layout Itemize
The trap potential is an inline function, and is not a parameter 
\end_layout

\begin_layout Itemize
Normalization is used because otherwise particle number is not conserved
 
\end_layout

\begin_layout Itemize
The output includes transverse 
\emph on
images 
\emph default
to show how the vortices develop 
\end_layout

\begin_layout Itemize
Different 
\emph on
imagetypes
\emph default
 are used to show different 3D features 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = GPEvortex2D()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'GPEvortex2D';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = [50,40,40];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = [15,16,16];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.steps = 15;
\end_layout

\begin_layout Plain Layout

\family typewriter
g = 200;
\end_layout

\begin_layout Plain Layout

\family typewriter
om = 0.6;
\end_layout

\begin_layout Plain Layout

\family typewriter
L = @(a,p) 1i*(p.x.*D1(a,3,p)-p.y.*D1(a,2,p));
\end_layout

\begin_layout Plain Layout

\family typewriter
V = @(p) 0.35*(p.x.^2+p.y.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(v,p) 0.1*exp(-V(p));
\end_layout

\begin_layout Plain Layout

\family typewriter
rho = @(a) g*conj(a).*a;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @normda;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.da1 = @(a,w,p) -a.*(V(p)+rho(a))+om*L(a,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) 0.5*(p.Dx.^2+p.Dy.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{1} = @(a,p) a(1,:).*conj(a(1,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a,p) a(1,:).*conj(a(1,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
p.images = {2,2};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.imagetype = {1,2};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2','
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

 a
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
textbar
\end_layout

\end_inset

^2'};
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function b = normda(a,w,p)
\end_layout

\begin_layout Plain Layout

\family typewriter
% b = NORMDA(a,z,p) is a normalized derivative
\end_layout

\begin_layout Plain Layout

\family typewriter
% Takes a derivative and returns a normalized step
\end_layout

\begin_layout Plain Layout

\family typewriter
b = a+p.da1(a,w,p)*p.dtr;
\end_layout

\begin_layout Plain Layout

\family typewriter
norm = sqrt(Int(abs(b).^2,p.dx,p));
\end_layout

\begin_layout Plain Layout

\family typewriter
b = (b./norm-a)/p.dtr;
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename GPE-vortex-example1.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename GPE-vortex-example2.png
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top and bottom figure: The computed solution for 
\begin_inset Formula $\left|a\right|^{2}$
\end_inset

 at 
\begin_inset Formula $t=15$
\end_inset

 as a function of 
\begin_inset Formula $x,y$
\end_inset

 as a 3D plot (top) and as a color map (bottom).
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename GPE-vortex-example3.png
	lyxscale 10
	width 75text%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename GPE-vortex-example4.png
	lyxscale 10
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top and bottom figure: The computed solution for 
\begin_inset Formula $\left|a\right|^{2}$
\end_inset

 for 
\begin_inset Formula $y=0$
\end_inset

 as a function of 
\begin_inset Formula $x,t$
\end_inset

 as a 3D plot (top) and as a color map (bottom).
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Heat equation with finite-difference and propagators 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Vector_heat"

\end_inset


\end_layout

\begin_layout Standard
This very simple example solves a (1+1)-dimensional PDE with an initial
 condition of 
\begin_inset Formula $\mathbf{a}\left(t=0,x\right)=\mathbf{f}\left(x\right)$
\end_inset

 and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial\mathbf{a}}{\partial t} & = & \frac{\partial^{2}\mathbf{a}}{\partial x^{2}}\,.
\end{eqnarray}

\end_inset

The solution is subject to periodic boundary conditions or Dirichlet and/or
 Neumann with boundary values at zero, so that 
\begin_inset Formula $a\left(t,\pm x_{m}\right)=0\,$
\end_inset

 or 
\begin_inset Formula $\partial a/\partial x\left(t,\pm x_{m}\right)=0$
\end_inset

.
 Each component has different combinations of boundary types.
 Using spectral methods the solutions here are exact, up to round-off errors
 of order 
\begin_inset Formula $10^{-15}$
\end_inset

, and are also much faster than with finite differences, which is demonstrated
 in the example.
\end_layout

\begin_layout Standard
In all cases the grid range is from 
\begin_inset Formula $x=0$
\end_inset

 to 
\begin_inset Formula $x=\pi,$
\end_inset

 and the time duration is from 
\begin_inset Formula $t=0$
\end_inset

 to 
\begin_inset Formula $t=4$
\end_inset

.
 In the examples, the spectral propagation error is reduced by more than
 
\begin_inset Formula $10^{10}$
\end_inset

 and the time is reduced by a factor of 
\begin_inset Formula $20$
\end_inset

 compared to the finite-difference methods.
 The periodic method has boundaries just outside the grid.
\end_layout

\begin_layout Paragraph*
Dirichlet-Dirichlet
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $a_{x}(0)=a_{x}(\pi)=0$
\end_inset

, then the exact solution has the form: 
\begin_inset Formula 
\begin{align}
a & =\sum_{n=1}^{\infty}S_{n}\sin\left(nx\right)e^{-n^{2}t}.
\end{align}

\end_inset

Suppose that 
\begin_inset Formula 
\begin{equation}
a(x,0)=4\sin\left(x\right)+\sin\left(2x\right),
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For this case: 
\begin_inset Formula 
\begin{equation}
a(x,t)=4\sin\left(x\right)e^{-t}+\sin\left(2x\right)e^{-4t}.
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph*
Neumann-Neumann
\end_layout

\begin_layout Standard
with 
\begin_inset Formula $a(0)=a(\pi)=0$
\end_inset

, then the exact solution has the form: 
\begin_inset Formula 
\begin{align}
a & =\sum_{n=0}^{\infty}C_{n}\cos\left(nx\right)e^{-n^{2}t}.
\end{align}

\end_inset

Suppose that 
\begin_inset Formula 
\begin{equation}
a(x,0)=5+4\cos\left(x\right)+\cos\left(2x\right),
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For this case: 
\begin_inset Formula 
\begin{equation}
a(x,t)=5+4\cos\left(x\right)e^{-t}+\cos\left(2x\right)e^{-4t}.
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph*
Dirichlet-Neumann
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $a(0)=a_{x}(\pi)=0$
\end_inset

, then the exact solution has the form: 
\begin_inset Formula 
\begin{align}
a & =\sum_{n=1}^{\infty}S_{n}\sin\left((2n-1)x/2\right)e^{-(2n-1)^{2}t/4}.
\end{align}

\end_inset

Suppose that 
\begin_inset Formula 
\begin{equation}
a(x,0)=4\sin\left(x/2\right)+\sin\left(3x/2\right),
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For this case: 
\begin_inset Formula 
\begin{equation}
u(x,0)=4\sin\left(x/2\right)e^{-t/4}+\sin\left(3x/2\right)e^{-9t/4}.
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph*
Neumann-Dirichlet
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $a_{x}(0)=a(\pi)=0$
\end_inset

, then the general solution has the form: 
\begin_inset Formula 
\begin{align}
a & =\sum_{n=1}^{\infty}C_{n}\cos\left((2n-1)x/2\right)e^{-(2n-1)^{2}t/4}.
\end{align}

\end_inset

Suppose that 
\begin_inset Formula 
\begin{equation}
a(x,0)=4\cos\left(x/2\right)+\cos\left(3x/2\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For this case: 
\begin_inset Formula 
\begin{equation}
a(x,t)=4\cos\left(x/2\right)e^{-t/4}+\cos\left(3x/2\right)e^{-9t/4}.
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph*
Periodic
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $a(0)=a(\epsilon\pi)$
\end_inset

, where 
\begin_inset Formula $\epsilon=N/\left(N-1\right)$
\end_inset

 accounts for the periodic boundaries being outside the grid range, then
 the general solution has the form: 
\begin_inset Formula 
\begin{align}
a & =\sum_{n=1}^{\infty}S_{n}\sin\left(2nx\right)e^{-4n^{2}t/\epsilon^{2}}\nonumber \\
 & +\sum_{n=0}^{\infty}C_{n}\cos\left(2nx\right)e^{-4n^{2}t/\epsilon^{2}}.
\end{align}

\end_inset

Suppose that 
\begin_inset Formula 
\begin{equation}
a(x,0)=2+\cos\left(2x/\epsilon\right)+\sin\left(4x/\epsilon\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For this case: 
\begin_inset Formula 
\begin{equation}
u(x,0)=2+2\cos\left(2x/\epsilon\right)e^{-4t/\epsilon^{2}}+\sin\left(4x/\epsilon\right)e^{-16t/\epsilon^{2}}.
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
This is another deterministic pde case, although noise can be added 
\end_layout

\begin_layout Itemize
Different boundary conditions apply to each component 
\end_layout

\begin_layout Itemize
Sequential integration is used, but the initial condition is just recycled.
 
\end_layout

\begin_layout Itemize
In 
\emph on
p1
\emph default
, the 
\begin_inset Formula $40$
\end_inset

 intermediate
\emph on
 steps
\emph default
 are necessary to reduce finite-difference errors 
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Boundaries()
\end_layout

\begin_layout Plain Layout

\family typewriter
p.dimensions = 2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = [51,51];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.order = 0;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.verbose = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 5;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = [4,pi];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.origins = [0,0];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @heat_in;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe = {@(a,p) a(1,:),@(a,p) a(2,:),@(a,p) a(3,:)...
\end_layout

\begin_layout Plain Layout

\family typewriter
@(a,p) a(4,:),@(a,p) a(5,:)};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare = {@heat_1,@heat_2,@heat_3,@heat_4,@heat_5};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.diffplot = {1,1,1,1,1};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'a, DD','a, NN','a, DN','a, ND','a, PP'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = 'Heat test, spectral';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.boundaries{2}= [1,1;-1,-1;1,-1;-1,1;0,0];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.linear = @(p) p.Dx.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p1 = p;
\end_layout

\begin_layout Plain Layout

\family typewriter
p1.linear = @(p) [];
\end_layout

\begin_layout Plain Layout

\family typewriter
p1.deriv = @(a,w,p) D2(a,2,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p1.steps = 40;
\end_layout

\begin_layout Plain Layout

\family typewriter
p1.transfer = @(~,p,~,~) heat_in(0,p);
\end_layout

\begin_layout Plain Layout

\family typewriter
p1.name = 'Heat test, finite diffs';
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde({p,p1});
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function a = heat_in(~,p)
\end_layout

\begin_layout Plain Layout

\family typewriter
a(1,:) = 4*sin(p.x)+sin(2*p.x);
\end_layout

\begin_layout Plain Layout

\family typewriter
a(2,:) = 5+4*cos(p.x)+cos(2*p.x);
\end_layout

\begin_layout Plain Layout

\family typewriter
a(3,:) = 4*sin(p.x/2)+sin(3*p.x/2);
\end_layout

\begin_layout Plain Layout

\family typewriter
a(4,:) = 4*cos(p.x/2)+cos(3*p.x/2);
\end_layout

\begin_layout Plain Layout

\family typewriter
a(5,:) = 2+cos(2*p.x/1.02)+sin(4*p.x/1.02);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout
\begin_inset space \space{}
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
function o = heat_1(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
o = 4*sin(p.x).*exp(-p.t)+sin(2*p.x).*exp(-4*p.t);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
function o = heat_2(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
 o = 5+4*cos(p.x).*exp(-p.t)+cos(2*p.x).*exp(-4*p.t); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
function o = heat_3(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
 o = 4*sin(p.x/2).*exp(-p.t/4)+sin(3*p.x/2).*exp(-9*p.t/4); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
function o = heat_4(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
 o = 4*cos(p.x/2).*exp(-p.t/4)+cos(3*p.x/2).*exp(-9*p.t/4); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\begin_layout Plain Layout

\family typewriter
function o = heat_5(p)
\end_layout

\begin_layout Plain Layout

\family typewriter
o = 2+cos(2*p.x/1.02).*exp(-4*p.t/1.02^2)+...
\end_layout

\begin_layout Plain Layout

\family typewriter
sin(4*p.x/1.02).*exp(-16*p.t/1.02^2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Boundaries.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename BoundariesNN.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Top figure: Spectral solution for 
\begin_inset Formula $a$
\end_inset

 as a function of time and position with Dirichlet-Dirichlet boundaries.
 Bottom figure: Plot of the solution with Neumann-Neumann boundaries.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Projection examples
\end_layout

\begin_layout Subsection
SDE with catenoid projection
\end_layout

\begin_layout Standard
This solves an SDE with 3 field variables 
\begin_inset Formula $\mathbf{a}=\left(a_{1},a_{2},a_{3}\right)^{T}$
\end_inset

.
 The Stratonovich diffusion equation is 
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial\mathbf{a}}{\partial t} & = & \mathcal{P}_{\mathbf{a}}^{\parallel}\left[\mathbf{w}\right]\,,
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\mathcal{P}_{\mathbf{a}}^{\parallel}\left[\cdot\right]$
\end_inset

 indicates a projected onto the surface of a catenoid manifold defined by
 
\begin_inset Formula 
\begin{eqnarray}
f & =x_{1}^{2}+x_{2}^{2}-\sinh^{2}\left(x_{3}\right)-1 & =0\,.
\end{eqnarray}

\end_inset

The initial condition is given by 
\begin_inset Formula $\mathbf{a}\left(o\right)=\left(1,0,0\right)^{T}$
\end_inset

.
 Here 
\begin_inset Formula $\mathbf{w}=\left(w_{1},w_{2},w_{3}\right)^{T}$
\end_inset

 consists of 3 independent noise variables
\end_layout

\begin_layout Paragraph
Notes
\end_layout

\begin_layout Itemize
This is a projected sde case 
\end_layout

\begin_layout Itemize
The Euclidean distance from the initial point is computed 
\end_layout

\begin_layout Itemize
This is compared with the predicted analytic value 
\begin_inset Formula $\left\langle R^{2}\right\rangle =2t$
\end_inset

.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Catenoid
\end_layout

\begin_layout Plain Layout

\family typewriter
p.name = '3D Catenoid diffusion';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.iterproj = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.X0 = [1,0,0]';
\end_layout

\begin_layout Plain Layout

\family typewriter
p.fields = 3;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ranges = 5;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.points = 51;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.ensembles = [400, 10];
\end_layout

\begin_layout Plain Layout

\family typewriter
p.compare{2} = @(p) 2*p.t;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.deriv = @(a, w, p) w;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.initial = @(w, p) p.X0;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.observe{2} = @(a, p) sum((p.X0-a).^2,1);
\end_layout

\begin_layout Plain Layout

\family typewriter
p.diffplot{2} = 1;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.function{1} = @(o, p) o{2}.^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.olabels = {'
\backslash
langle R^2 
\backslash
rangle^2','
\backslash
langle R^2 
\backslash
rangle'};
\end_layout

\begin_layout Plain Layout

\family typewriter
p.project = @Catproj;
\end_layout

\begin_layout Plain Layout

\family typewriter
p.method = @MPnproj;
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(p);
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Catenoid-example1.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Computed time evolution of the catenoid squared Euclidean diffusion distance
 
\begin_inset Formula $\left|\mathbf{x}_{0}-\mathbf{x}\left(t\right)\right|^{2}$
\end_inset

, where 
\begin_inset Formula $\mathbf{x}_{0}=\left(1,0,0\right)^{T}$
\end_inset

, as a function of time.
 The solid lines indicate the stochastic error bounds while the dashed line
 indicates the theoretical prediction.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Catenoid-example2.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
Differences between the computed time evolution of the catenoid squared
 Euclidean distance 
\begin_inset Formula $\left|\mathbf{x}_{0}-\mathbf{x}\left(t\right)\right|^{2}$
\end_inset

 and the exact result.
 The solid lines indicate the stochastic error bounds, error-bars are the
 time-step errors, while the dashed line indicates the theoretical prediction.
\end_layout

\end_inset


\begin_inset VSpace 10pt
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Conclusion
\begin_inset CommandInset label
LatexCommand label
name "sec:Conclusion"

\end_inset


\end_layout

\begin_layout Standard
We have introduced a framework compatible with Matlab and Octave for the
 numerical integration of an extremely wide variety of stochastic differential
 equations.
 As we hope has become clear from this manual, xSPDE offers an extraordinarily
 clear and user-friendly interface.
 Simulating stochastic partial differential equations (SPDEs) can be achieved
 with virtually no extra effort compared to ordinary stochastic differential
 equations.
 Spatial derivatives can be obtained in an efficient and numerically stable
 way using Fourier or trigonometric transform techniques for many cases.
\end_layout

\begin_layout Standard
Finite difference methods are available in more complex cases, and different
 combinations of boundary values can be imposed independently on any vector
 component and in any spatial dimension.
 A number of algorithms for the integration of stochastic equations are
 included, while the modular and transparent design of xSPDE makes it easy
 to implement other custom algorithms as well if preferred.
\end_layout

\begin_layout Standard
Error estimations are included, and parallel operation is supported.
 Simulation results are available both as graphical output and in an interoperab
le data format.
 Importantly, the discretization and sampling error estimates are carried
 out at the level of the final estimated probabilities and averages, providing
 much more compact and useful results than raw data.
 However, raw data output is also available if needed.
\end_layout

\begin_layout Standard
With xSPDE, we aim to make stochastic simulations, particularly those involving
 SPDEs, accessible to scientists, engineers and researchers.
 The software has been used in several research works
\begin_inset CommandInset citation
LatexCommand cite
key "peters2021extremely,peters2022exceptional,peters2022limit,Rodriguez2020enhancing,kiesewetter2022phase,drummond2021time,ng2021fate,ng2019nonlocal,Ng2019Phase,teh2018creation,drummond2017higher,opanchuk2017one,drummond2017truncated,Drummond2017forward,teh2017simulation,dechoum2016critical"
literal "false"

\end_inset

.
 Currently, the use of more efficient spectral methods is limited to periodic
 boundaries, zero value Dirichlet, and/or zero derivative Neumann boundary
 conditions.
\end_layout

\begin_layout Standard
In future releases, we aim to support a more general class of boundary condition
s and integration methods, discrete networks, and more complex problems
 involving multiple spatial grids with different dimensions.
 A Julia version is under development for those users without Matlab licenses
 who find Octave too slow.
 Currently, xSPDE simulations are exclusively CPU or cluster-based, which
 is suitable and efficient for many purposes.
 Support for GPU-enabled simulations is a longer term goal for xSPDE.
\end_layout

\begin_layout Section*
Acknowledgements
\end_layout

\begin_layout Standard
We would like to thank the many users and researchers whose feedback was
 invaluable, including Rodney Polkinghorne, Bogdan Opanchuk, King Ng, Alex
 Dellios, Run Yan Teh, Manushan Thenabadu, Margaret Reid, Jesse van Rhijn
 and Thomas Rodriguez.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% TODO: include funding information
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Funding information
\end_layout

\begin_layout Standard
This work was funded through the Australian Research Council Discovery Project
 scheme under Grants DP180102470 and DP190101480.
 The authors also wish to thank NTT Research for their financial and technical
 support.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "xspde3"
options "SciPost_bibstyle"

\end_inset


\end_layout

\end_body
\end_document
